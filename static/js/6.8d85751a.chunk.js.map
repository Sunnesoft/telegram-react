{"version":3,"sources":["Components/Viewer/Lottie.js"],"names":["Lottie","handleClickToPause","_this","anim","isPaused","play","pause","_this$props","this","props","options","eventListeners","console","log","loop","autoplay","animationData","rendererSettings","segments","container","el","renderer","Boolean","Object","d_projects_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","lottie","loadAnimation","registerEvents","nextProps","nextState","nextContext","path","deRegisterEvents","destroy","prevProps","prevState","snapshot","isStopped","stop","playSegments","setSpeed","setDirection","speed","direction","_this2","forEach","eventListener","addEventListener","eventName","callback","_this3","removeEventListener","_this4","_this$props2","width","height","ariaRole","ariaLabel","isClickToPauseDisabled","title","getSize","initial","concat","lottieStyles","overflow","margin","outline","style","onClickHandler","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","ref","c","onClick","role","aria-label","tabIndex","React","Component","defaultProps"],"mappings":"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","file":"static/js/6.8d85751a.chunk.js","sourcesContent":["/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport lottie from 'lottie-web';\r\nimport './Lottie.css';\r\n\r\nclass Lottie extends React.Component {\r\n    componentDidMount() {\r\n        const { options, eventListeners } = this.props;\r\n        console.log('Lottie.componentDidMount', eventListeners, this.props);\r\n\r\n        const {\r\n            loop,\r\n            autoplay,\r\n            animationData,\r\n            //path,\r\n            rendererSettings,\r\n            segments\r\n        } = options;\r\n\r\n        this.options = {\r\n            container: this.el,\r\n            renderer: 'svg',\r\n            loop: Boolean(loop),\r\n            autoplay: Boolean(autoplay),\r\n            segments: Boolean(segments),\r\n            animationData,\r\n            //path,\r\n            rendererSettings\r\n        };\r\n\r\n        this.options = { ...this.options, ...options };\r\n\r\n        this.anim = lottie.loadAnimation(this.options);\r\n        this.registerEvents(eventListeners);\r\n    }\r\n\r\n    componentWillUpdate(nextProps, nextState, nextContext) {\r\n        /* Recreate the animation handle if the data is changed */\r\n        if (\r\n            this.options.animationData !== nextProps.options.animationData ||\r\n            this.options.path !== nextProps.options.path\r\n        ) {\r\n            this.deRegisterEvents(this.props.eventListeners);\r\n            this.destroy();\r\n            this.options = { ...this.options, ...nextProps.options };\r\n            this.anim = lottie.loadAnimation(this.options);\r\n            this.registerEvents(nextProps.eventListeners);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        console.log('Lottie.componentDidUpdate', this.props.eventListeners, this.props);\r\n        if (this.props.isStopped) {\r\n            this.stop();\r\n        } else if (this.props.segments) {\r\n            this.playSegments();\r\n        } else {\r\n            this.play();\r\n        }\r\n\r\n        this.pause();\r\n        this.setSpeed();\r\n        this.setDirection();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        console.log('Lottie.componentWillUnmount', this.props.eventListeners, this.props);\r\n        this.deRegisterEvents(this.props.eventListeners);\r\n        this.destroy();\r\n        this.options.animationData = null;\r\n        this.options.path = null;\r\n        this.anim = null;\r\n    }\r\n\r\n    setSpeed() {\r\n        this.anim.setSpeed(this.props.speed);\r\n    }\r\n\r\n    setDirection() {\r\n        this.anim.setDirection(this.props.direction);\r\n    }\r\n\r\n    play() {\r\n        this.anim.play();\r\n    }\r\n\r\n    playSegments() {\r\n        this.anim.playSegments(this.props.segments);\r\n    }\r\n\r\n    stop() {\r\n        this.anim.stop();\r\n    }\r\n\r\n    pause() {\r\n        if (this.props.isPaused && !this.anim.isPaused) {\r\n            this.anim.pause();\r\n        } else if (!this.props.isPaused && this.anim.isPaused) {\r\n            this.anim.pause();\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.anim.destroy();\r\n    }\r\n\r\n    registerEvents(eventListeners) {\r\n        if (!eventListeners) return;\r\n\r\n        eventListeners.forEach(eventListener => {\r\n            this.anim.addEventListener(eventListener.eventName, eventListener.callback);\r\n        });\r\n    }\r\n\r\n    deRegisterEvents(eventListeners) {\r\n        if (!eventListeners) return;\r\n\r\n        eventListeners.forEach(eventListener => {\r\n            this.anim.removeEventListener(eventListener.eventName, eventListener.callback);\r\n        });\r\n    }\r\n\r\n    handleClickToPause = () => {\r\n        // The pause() method is for handling pausing by passing a prop isPaused\r\n        // This method is for handling the ability to pause by clicking on the animation\r\n        if (this.anim.isPaused) {\r\n            this.anim.play();\r\n        } else {\r\n            this.anim.pause();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { width, height, ariaRole, ariaLabel, isClickToPauseDisabled, title } = this.props;\r\n\r\n        const getSize = initial => {\r\n            let size;\r\n\r\n            if (typeof initial === 'number') {\r\n                size = `${initial}px`;\r\n            } else {\r\n                size = initial || '100%';\r\n            }\r\n\r\n            return size;\r\n        };\r\n\r\n        const lottieStyles = {\r\n            width: getSize(width),\r\n            height: getSize(height),\r\n            overflow: 'hidden',\r\n            margin: '0 auto',\r\n            outline: 'none',\r\n            ...this.props.style\r\n        };\r\n\r\n        const onClickHandler = isClickToPauseDisabled ? () => null : this.handleClickToPause;\r\n\r\n        return (\r\n            // Bug with eslint rules https://github.com/airbnb/javascript/issues/1374\r\n            // eslint-disable-next-line jsx-a11y/no-static-element-interactions\r\n            <div\r\n                ref={c => {\r\n                    this.el = c;\r\n                }}\r\n                style={lottieStyles}\r\n                onClick={onClickHandler}\r\n                title={title}\r\n                role={ariaRole}\r\n                aria-label={ariaLabel}\r\n                tabIndex='0'\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nLottie.propTypes = {\r\n    eventListeners: PropTypes.arrayOf(PropTypes.object),\r\n    options: PropTypes.object.isRequired,\r\n    height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    isStopped: PropTypes.bool,\r\n    isPaused: PropTypes.bool,\r\n    speed: PropTypes.number,\r\n    segments: PropTypes.arrayOf(PropTypes.number),\r\n    direction: PropTypes.number,\r\n    ariaRole: PropTypes.string,\r\n    ariaLabel: PropTypes.string,\r\n    isClickToPauseDisabled: PropTypes.bool,\r\n    title: PropTypes.string,\r\n    style: PropTypes.string\r\n};\r\n\r\nLottie.defaultProps = {\r\n    eventListeners: [],\r\n    isStopped: false,\r\n    isPaused: false,\r\n    speed: 1,\r\n    ariaRole: 'button',\r\n    ariaLabel: 'animation',\r\n    isClickToPauseDisabled: false,\r\n    title: ''\r\n};\r\n\r\nexport default Lottie;\r\n"],"sourceRoot":""}