{"version":3,"sources":["Stores/FileStore.js","Utils/File.js","Utils/Chat.js","Utils/BasicGroup.js","Utils/Supergroup.js","Stores/MessageStore.js","Components/Message/Media/Contact.js","Components/Message/Media/Game.js","Components/Message/Media/Location.js","Components/Message/Media/PollRadio.js","Components/Message/Media/PollPercentage.js","Components/Message/Media/PollOption.js","Components/Message/Media/Poll.js","Actions/Poll.js","Components/Message/Media/Venue.js","Utils/Message.js","Stores/PlayerStore.js","Actions/Client.js","Utils/User.js","Stores/SupergroupStore.js","Utils/Media.js","Components/Viewer/FileProgress.js","Components/Message/Media/Sticker.js","Stores/BasicGroupStore.js","Components/Tile/UserTileControl.js","Stores/StickerStore.js","Components/Message/Media/Photo.js","Components/Message/MessageAuthor.js","Utils/Currency.js","Utils/ServiceMessage.js","Components/Tile/DocumentTile.js","Components/Message/Media/Animation.js","Components/ColumnMiddle/StickerPreview.js","Components/Message/Media/DocumentAction.js","Components/Message/Media/Document.js","Components/Message/Media/Audio.js","Components/Message/Media/AudioAction.js","Components/Message/Media/Video.js","Components/Message/Media/VideoNote.js","Components/Message/Media/MediaStatus.js","Components/Message/Reply.js","Components/Tile/ReplyTile.js","Components/ColumnMiddle/NotificationsControl.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Dialog/CreatePollOption.js","Utils/Poll.js","Stores/PollStore.js","Components/Dialog/CreatePollDialog.js","Components/ColumnMiddle/InputBoxHeader.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBoxControl.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommandControl.js","Components/ColumnMiddle/Footer.js","Components/Message/Media/VoiceNoteSlider.js","Components/Message/Media/VoiceNote.js","Notifications.js","Components/Tile/ChatStatus.js","Components/Tile/ChatTileControl.js","Components/Tile/ForwardTargetChat.js","Utils/Language.js","Components/Dialog/ForwardDialog.js","Components/Additional/NotificationTimer.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/UserStatusControl.js","Components/Tile/UserControl.js","Components/Tile/DialogTitleControl.js","Components/Tile/DialogStatusControl.js","Components/Tile/ChatControl.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/MoreListItem.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Components/ColumnRight/SharedMediaHeaderControl.js","Components/ColumnRight/SharedMedia.js","Components/ColumnRight/ChatInfo.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/Search/SearchCaption.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/LanguagePicker.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/DialogsHeader.js","Components/Tile/DialogContentControl.js","Components/Tile/DialogBadgeControl.js","Components/Tile/DialogMetaControl.js","Components/Tile/DialogControl.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/Dialogs.js","Components/Dialog/ChatInfoDialog.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/Forward.js","Components/Message/MessageStatus.js","Components/Message/UnreadSeparator.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/ColumnMiddle/PinnedMessage.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/Dialog/ShareStickerSetButton.js","Components/Dialog/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/Tile/MediaViewerControl.js","Components/Viewer/MediaCaption.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaViewerControl.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["useReadFile","store","FileStore","_this","Object","d_projects_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","d_projects_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","d_projects_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","onUpdate","_ref","d_projects_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","d_projects_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","update","wrap","_context","prev","next","t0","set","file","onUpdateFile","emit","abrupt","onUpdateAuthorizationState","stop","_x","apply","arguments","onClientUpdate","addTdLibListener","TdLibController","addListener","removeTdLibListener","removeListener","_ref2","_callee2","_context2","authorization_state","initDB","_x2","handleDownloads","handleUploads","arr","id","idb_key","local","downloads","has","is_downloading_completed","items","get","delete","getStore","forEach","item","handleChat","handleMessage","handleSticker","handleUser","console","error","remote","uploads","is_uploading_completed","chat","getLocalFile","updateChatPhotoBlob","getRemoteFile","FILE_PRIORITY","user","updateUserPhotoBlob","message","content","animation","handleAnimation","audio","handleAudio","photo","handlePhoto","document","handleDocument","game","handleGame","location","handleLocation","sticker","web_page","video","video_note","voice_note","handleVideo","handleVoiceNote","handleVideoNote","venue","obj","i","sizes","length","photoSize","source","updatePhotoBlob","chat_id","album_cover_thumbnail","updateAudioThumbnailBlob","THUMBNAIL_PRIORITY","updateAudioBlob","thumbnail","updateDocumentThumbnailBlob","updateDocumentBlob","locationId","getLocationId","getLocationFile","updateLocationBlob","chatId","messageId","updateStickerThumbnailBlob","updateStickerBlob","voiceNote","voice","updateVoiceNoteBlob","videoNote","updateVideoNoteThumbnailBlob","updateVideoNoteBlob","updateVideoThumbnailBlob","updateVideoBlob","updateAnimationThumbnailBlob","updateAnimationBlob","deleteLocalFile","fileId","getBlob","blobItems","setBlob","blob","deleteBlob","locationItems","setLocationFile","getBlobUrl","urls","url","URL","createObjectURL","deleteBlobUrl","clientUpdate","@type","callbacks","db","WeakMap","Map","setMaxListeners","Infinity","callback","log","initiatingDB","push","openDB","catch","Promise","resolve","reject","request","window","indexedDB","open","onsuccess","result","onerror","transaction","objectStore","faultCallback","_this2","_ref3","_callee4","response","_context4","send","file_id","sent","concat","data","_x4","then","Blob","event","target","priority","some","x","filter","only_if_pending","message_ids","revoke","userId","EventEmitter","getSizeString","size","toFixed","getFileSize","saveBlob","filename","navigator","msSaveBlob","blobURL","tempLink","createElement","style","display","href","setAttribute","download","body","appendChild","click","removeChild","revokeObjectURL","loadReplies","messageIds","messages","map","MessageStore","setItems","loadReplyContents","loadAnimationThumbnailContent","loadAudioThumbnailContent","loadPhotoContent","loadDocumentThumbnailContent","loadGameThumbnailContent","loadStickerThumbnailContent","loadVideoThumbnailContent","loadVideoNoteThumbnailContent","loadAudioContent","useFileSize","undefined","_file","PRELOAD_AUDIO_SIZE","loadAnimationContent","_file3","PRELOAD_ANIMATION_SIZE","loadContactContent","contact","user_id","UserStore","loadUserContent","loadDocumentContent","_file5","PRELOAD_DOCUMENT_SIZE","loadGameContent","loadLocationContent","zoom","LOCATION_ZOOM","width","LOCATION_WIDTH","height","LOCATION_HEIGHT","scale","LOCATION_SCALE","loadBigPhotoContent","getSize","PHOTO_BIG_SIZE","getPhotoSize","loadPhotoThumbnailContent","getPhotoThumbnailSize","loadStickerContent","_file10","PRELOAD_STICKER_SIZE","loadVideoContent","_file12","PRELOAD_VIDEO_SIZE","loadVideoNoteContent","_file14","PRELOAD_VIDEONOTE_SIZE","loadVoiceNoteContent","_file16","PRELOAD_VOICENOTE_SIZE","loadMessageContents","users","replies","sender_user_id","reply_to_message_id","loadPhoto","loadUsersContent","d_projects_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","keys","saveOrDownload","fileName","mime","type","saveData","can_be_downloaded","getMediaPreviewFile","getMediaFile","PHOTO_SIZE","cancelLoadMediaViewerContent","cancelGetRemoteFile","loadMediaViewerContent","useSizeLimit","cancelPreloadMediaViewerContent","index","history","preloadMediaViewerContent","loadUserFileContent","loadChatFileContent","ChatStore","loadProfileMediaViewerContent","photos","_photo9","small","big","getChatUserId","_photo10","getProfilePhoto","_photo11","preloadProfileMediaViewerContent","profile_photo","ids","loadChatContent","loadChatsContent","loadDraftContent","draft_message","loadStickerSetContent","stickerSet","loadStickersContent","stickers","isGifMimeType","mimeType","toLowerCase","getSrc","getDownloadedSize","is_downloading_active","downloaded_size","getUploadedSize","is_uploading_active","uploaded_size","getExtension","parts","split","pop","getChatTypingString","typingManager","getTypingManager","typingString","inputTypingManager","actions","values","value","action","getPrivateChatTypingString","firstUser","secondUser","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","err","return","first_name","second_name","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","getGroupChatTypingString","getMessageSenderFullName","isServiceMessage","getUserFullName","getMessageSenderName","getUserShortName","getLastMessageSenderName","last_message","getLastMessageContent","t","key","getContent","getChatUnreadMessageIcon","is_outgoing","last_read_outbox_message_id","getChatUnreadCount","unread_count","getChatUnreadMentionCount","unread_mention_count","isChatMuted","use_default_mute_for","notification_settings","mute_for","notificationSettings","ApplicationStore","getNotificationSettings","getChatMuteFor","getMessageDate","date","Date","dayStart","setHours","dateFormat","now","day","getDay","weekStart","getDate","setDate","getLastMessageDate","showChatDraft","getChatSubtitleWithoutTyping","basicGroup","BasicGroupStore","basic_group_id","status","count","member_count","onlineCount","getOnlineMemberCount","getBasicGroupStatus","getUserStatus","supergroup","SupergroupStore","supergroup_id","is_channel","fullInfo","getFullInfo","getSupergroupStatus","getChatSubtitle","showSavedMessages","isMeChat","chatTypingString","getChatLetters","title","letters","getLetters","charAt","isAccentChatSubtitleWithoutTyping","isUserOnline","isAccentChatSubtitle","getChatUsername","username","getChatPhoneNumber","phone_number","getChatBio","bio","description","isPrivateChat","isGroupChat","isChannelChat","isChatMember","is_member","getChatTitle","getMyId","getGroupChatMembers","fallbackValue","members","getChatFullInfo","hasBasicGroupId","basicGroupId","isSupergroup","getSupergroupId","hasSupergroupId","supergroupId","getPhotoFromChat","canSendFiles","can_send_media_messages","getChatShortTitle","getGroupChatMembersCount","canClearHistory","Boolean","canDeleteChat","canSendPhotos","canSendDocuments","canSendPolls","canSendMessages","can_send_messages","getChatDraft","input_message_text","text","getChatDraftReplyToMessageId","replyToMessageId","__webpack_require__","d","__webpack_exports__","d_projects_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","d_projects_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","d_projects_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","message_id","reply_markup","edit_date","views","old_content","new_content","is_listened","is_viewed","old_message_id","sending_state","error_code","error_message","selected","selectedItems","clear","deletedMessage","Contact","_this$props","props","openMedia","last_name","fullName","number","formatPhoneNumber","react_default","className","UserTileControl","onClick","React","Component","Game","displaySize","Animation","fitPhotoSize","getFitSize","Photo","_this$props2","classes","formattedText","getFormattedText","classNames","accentBackgroundLight","accentColorMain","defaultProps","PHOTO_DISPLAY_SIZE","withStyles","theme","objectSpread","accentStyles","Location","onClientUpdateLocationBlob","forceUpdate","on","src","longitude","latitude","rel","draggable","alt","Room_default","fontSize","color","PollRadio","chosen","beingChosen","hidden","onChange","poll-radio-hidden","Radio_default","root","radioRoot","checked","checkedIcon","RadioButtonChecked_default","icon","CircularProgress_default","thickness","progressRoot","position","top","left","pointerEvents","padding","PollPercentage","classCallCheck","possibleConstructorReturn","getPrototypeOf","updateAnimation","stopAnimation","handle","requestAnimationFrame","onAnimationFrame","cancelAnimationFrame","_this$state","state","startTime","from","to","timePassed","ANIMATION_DURATION_200MS","setState","animated","Math","floor","prevPropsValue","nextProps","nextState","nextContext","closed","prevProps","prevState","snapshot","poll-percentage-subtitle","Fragment","PollOption","getTitleString","canBeSelected","handleClick","onVote","stopPropagation","handleCancel","onUnvote","option","maxVoterCount","voter_count","vote_percentage","is_chosen","is_being_chosen","Message_Media_PollPercentage","Message_Media_PollRadio","defineProperty","borderColor","LinearProgress_default","bar","progressBar","variant","max","enhance","compose","backgroundColor","margin","right","bottom","transition","borderStyle","withTheme","withTranslation","Poll","dialog","contextMenu","getTotalVoterCountString","handleVote","optionIds","option_ids","setPollAnswer","handleUnvote","poll","handleCloseContextMenu","is_closed","cancelPollAnswer","handleStopPoll","_this$props3","stopPoll","handleDialog","handleCloseDialog","handleContextMenu","preventDefault","clientX","clientY","_this$props4","question","options","total_voter_count","canUnvote","canStopPoll","can_be_edited","every","toConsumableArray","onContextMenu","Message_Media_PollOption","Popover_default","onClose","anchorReference","anchorPosition","anchorOrigin","vertical","horizontal","transformOrigin","MenuList_default","e","MenuItem_default","Dialog_default","transitionDuration","aria-labelledby","DialogTitle_default","DialogContent_default","DialogContentText_default","DialogActions_default","Button_default","Venue","address","Message_Media_Location","getTitle","substring","start","end","entities","beforeEntityText","offset","entityText","startsWith","decodedUrl","decodeURI","hashtag","command","afterEntityText","getText","caption","getWebPage","getDateHint","getMedia","Audio","Message_Media_Contact","Document","Message_Media_Game","Message_Media_Poll","Sticker","Message_Media_Venue","Video","VideoNote","VoiceNote","isForwardOriginHidden","forwardInfo","origin","getForwardTitle","sender_name","author_signature","getUnread","getSenderUserId","filterMessages","reduce","accumulator","current","ttl","getServiceMessageContent","emoji","isMediaContent","isVideoMessage","isLottieMessage","file_name","endsWith","isAnimationMessage","isContentOpened","getMediaTitle","getAudioTitle","forward_info","getAuthor","hasAudio","hasVideoNote","getSearchMessagesFilter","openAnimation","fileCancel","cancelUploadFile","setMediaViewerContent","openAudio","openDocument","openPhoto","openSticker","set_id","regenerator_default","openVideo","openVideoNote","openVoiceNote","openChatPhoto","openUser","openContact","openGame","isDeletedMessage","getReplyPhotoSize","RepeatEnum","freeze","NONE","REPEAT","REPEAT_ONE","PlayerStore","d_projects_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","d_projects_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","close","playlist","time","videoStream","getPlaylist","volume","Cookies","repeat","shuffle","playbackRate","playing","moveToNextMedia","moveToPrevMedia","moveNext","duration","currentTime","timestamp","stream","_this$message","findIndex","useRepeatShuffle","_this$message2","nextIndex","getRandomInt","_assertThisInitialize","currentPlaylist","_messages","total_count","d_projects_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","totalCount","query","from_message_id","limit","_x3","cookies","Number","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_VOLUME_NORMAL","player","openChat","highlightMessage","selectMessage","_Controllers_TdLibController__WEBPACK_IMPORTED_MODULE_0__","popup","isUserBlocked","getUserLetters","getUserStatusOrder","getProfilePhotoDateHint","dateformat__WEBPACK_IMPORTED_MODULE_0__","dateformat__WEBPACK_IMPORTED_MODULE_0___default","n","_Common__WEBPACK_IMPORTED_MODULE_1__","_Constants__WEBPACK_IMPORTED_MODULE_2__","_Stores_UserStore__WEBPACK_IMPORTED_MODULE_3__","SERVICE_NOTIFICATIONS_USER_ID","was_online","wasOnline","diff","getTime","minutes","today","hours","yesterday","is_blocked","expires","userProfilePhoto","smallPhotoSize","PROFILE_PHOTO_SMALL_SIZE","bigPhotoSize","PROFILE_PHOTO_BIG_SIZE","added_date","setFullInfo","supergroup_full_info","fullInfoItems","isBlurredThumbnail","THUMBNAIL_BLURRED_SIZE","performer","trimmedTitle","trim","trimmedPerformer","getStickers","sets","getNeighborStickersFromSets","stickersPerRow","_toRowColumn","setIndex","stickerIndex","prevRows","ceil","toRowColumn","_toRowColumn2","d_projects_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","row","column","prevPrevRow","prevRow","nextRow","nextNextRow","prevColumn","nextColumn","skipPrevRow","skipPrePrevRow","toIndex","totalRows","skipNextRow","skipNextNextRow","setRow","setColumn","circleStyle","circle","FileProgress","d_projects_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","currentFile","nextFile","prevFile","isDownloading","wasActive","isActive","isUploading","upload","getProgressParams","isCompleted","progressSize","completeAnimation","prevPropsFile","thumbnailSrc","nextLocal","nextIdbKey","prevLocal","prevIdbKey","isDownloadingCompleted","receiveIdbKey","mount","cancelButton","zIndex","completeIcon","_this$getProgressPara","_this$getProgressPara2","inProgress","progress","setTimeout","ANIMATION_DURATION_300MS","background","react__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_7___default","_material_ui_icons_Close__WEBPACK_IMPORTED_MODULE_8___default","onClientUpdateStickerBlob","onClientUpdateStickerThumbnailBlob","blur","preview","isBlurred","fitSize","stickerStyle","d_projects_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","media-blurred","STICKER_DISPLAY_SIZE","basic_group","basic_group_full_info","groupId","group","basicgroup","onClientUpdateUserBlob","onClientUpdateChatBlob","onUpdateChatPhoto","onUpdateChatTitle","handleSelect","onSelect","tileColor","abs","d_projects_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","pointer","StickerStore","d_projects_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1__","d_projects_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__","sticker_set_ids","_this$stickerSet","is_installed","assign","hint","foundStickers","onClientUpdatePhotoBlob","thumbnailSize","showProgress","photoStyle","_Viewer_FileProgress__WEBPACK_IMPORTED_MODULE_8__","PHOTO_THUMBNAIL_SIZE","MessageAuthor","openUserCommand","openChatCommand","react__WEBPACK_IMPORTED_MODULE_5___default","currency","Currency","list","symbol","includes","totalAmount","amount","pow","getPow","serviceMap","isOutgoing","isChannel","member_user_ids","array","separator","ttlString","seconds","days","getTTLString","messageGame","game_message_id","score","passportElementTypes","types","getPassportElementTypeString","messageInvoice","invoice_message_id","invoice","getString","total_amount","author","getMessageAuthor","pinnedMessage","pinnedContent","domain_name","DocumentTile","onClientUpdateDocumentThumbnailBlob","document-tile-background","_Components_Viewer_FileProgress__WEBPACK_IMPORTED_MODULE_8__","palette","primary","main","borderRadius","startStopPlayer","videoRef","inView","focused","openMediaViewer","openProfileMediaViewer","play","pause","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateFocusWindow","onClientUpdateMessagesInView","onClientUpdateAnimationBlob","onClientUpdateAnimationThumbnailBlob","createRef","hasFocus","_this$props$animation","mime_type","isGif","ref","poster","muted","autoPlay","loop","playsInline","StickerPreview","prevPropsSticker","loadStickerEmojis","emojis","join","_Message_Media_Sticker__WEBPACK_IMPORTED_MODULE_6__","STICKER_PREVIEW_DISPLAY_SIZE","DocumentAction","isDownloadingActive","isUploadingActive","sizeString","ArrowDownward_default","InsertDriveFile_default","data-name","data-ext","Message_Media_DocumentAction","onClientUpdateMediaEnd","active","onClientUpdateMediaPlay","onClientUpdateMediaPause","onClientUpdateMediaActive","_this$props5","_Tile_DocumentTile__WEBPACK_IMPORTED_MODULE_9__","_material_ui_icons_ArrowDownward__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_icons_Pause__WEBPACK_IMPORTED_MODULE_8___default","_material_ui_icons_PlayArrow__WEBPACK_IMPORTED_MODULE_7___default","_AudioAction__WEBPACK_IMPORTED_MODULE_10__","AudioAction","timeString","getTimeString","onClientUpdateMediaTime","_this$state2","_this$state3","durationString","getDurationString","currentTimeString","audioDuration","_this$state4","_this$state5","onClientUpdateVideoThumbnailBlob","_this$props$video","onClientUpdateMediaCaptureStream","srcObject","updateVideoSrc","videoDuration","onClientUpdateVideoNoteBlob","onClientUpdateVideoNoteThumbnailBlob","handleCanPlay","getTracks","track","_this$props6","_this$props$videoNote","video-note-playing","onCanPlay","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_9___default","_MediaStatus__WEBPACK_IMPORTED_MODULE_11__","_material_ui_icons_VolumeOff__WEBPACK_IMPORTED_MODULE_7___default","_Viewer_FileProgress__WEBPACK_IMPORTED_MODULE_10__","_material_ui_icons_ArrowDownward__WEBPACK_IMPORTED_MODULE_8___default","MediaStatus","onUpdateMessageContentOpened","isOpened","openedIcon","Reply","onGetMessageResult","handleOpen","parentChatId","parentMessageId","setPrevChatId","setPrevMessageId","onMouseDown","_Tile_ReplyTile__WEBPACK_IMPORTED_MODULE_11__","d_projects_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","ReplyTile","isVideoNote","reply-tile-photo-round","reply-tile-photo-loading","NotificationsControl","onUpdateChatNotificationSettings","isMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","muteFor","MUTED_VALUE_MAX","MUTED_VALUE_MIN","newNotificationSettings","prevChatId","debounce","NOTIFICATIONS_DEBOUNCE_DELAY_MS","AttachButton","anchorEl","handleMenuClick","currentTarget","handleMenuClose","handleAttachPhoto","onAttachPhoto","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","IconButton_default","iconButton","aria-label","AttachFile_default","Menu_default","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","disabled","ListItemIcon_default","Photo_default","ListItemText_default","Poll_default","focusNode","node","toEnd","childNodes","lastNode","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","scrollTop","scrollHeight","focus","utils","special","navigational","isSpecial","keyCode","isNavigational","CreatePollOption","optionTextRef","innerText","handleDelete","onDelete","handleInput","dataset","maxLength","remainLength","handleKeyDown","hasSelection","toString","onFocusNext","isCollapsed","firstChild","anchorNode","anchorOffset","onFocusPrev","lastChild","handlePaste","selectionString","pasteText","clipboardData","getData","replace","substr","execCommand","POLL_OPTION_MAX_LENGTH","contentEditable","suppressContentEditableWarning","placeholder","data-length","POLL_OPTION_LENGTH","data-max-length","onInput","onKeyDown","onPaste","Close_default","POLL_OPTION_HINT_LENGTH","Typography_Typography","align","counterRoot","withSaveRef","minWidth","userSelect","withRestoreRef","isValidPoll","POLL_QUESTION_LENGTH","isValidQuestion","noneEmptyOptions","isValidOption","PollStore","source1","source2","_this$poll","CreatePollDialog","handleClientUpdateNewPoll","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","innerHTML","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextNode","getHint","addCount","handleClose","hasPollData","handleConfirmationDone","handleSend","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","_this3","Components_Dialog_CreatePollOption","el","canAddOption","dialogRoot","contentRoot","Typography_default","flexGrow","POLL_QUESTION_HINT_LENGTH","Divider_default","dividerRoot","List_default","listRoot","ListItem_default","listItem","button","disableTypography","typographyRoot","InputBoxHeader","Reply_default","replyIcon","Message_Reply","closeIconButton","OutputTypingManager","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","lazy","all","bind","InputBoxControl","onClientUpdateStickerSend","newMessageRef","textContent","thumbnailWidth","thumbnailHeight","onSendInternal","onClientUpdateReply","currentChatId","setInputFocus","onClientUpdateChatId","nextChatId","openPasteDialog","setDraft","element","draft","setChatDraftMessage","chatDraftMessage","draftMessage","getNewChatDraftMessage","newDraft","getInputText","previousDraft","previousReplyToMessageId","disable_web_page_preview","clear_draft","handleSubmit","attachPhotoRef","handleAttachPhotoComplete","files","Array","readImageSize","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","handleKeyUp","setTyping","name","photoWidth","photoHeight","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","originalEvent","kind","indexOf","getAsFile","plainText","handlePasteContinue","handleClosePaste","asyncToGenerator","clearDraft","invokeScheduledAction","input_message_content","newChatDraftMessage","alert","JSON","stringify","handleEmojiSelect","native","regex","match","t1","performance","emojiRegex","exec","getChatId","Components_ColumnMiddle_InputBoxHeader","Suspense","fallback","InsertEmoticon_default","onKeyUp","multiple","accept","ColumnMiddle_AttachButton","Send_default","Components_Dialog_CreatePollDialog","FooterCommand","onCommand","Button_Button_default","NotificationsCommandControl","Components_ColumnMiddle_FooterCommand","Footer","onUpdateBasicGroup","onUpdateSupergroup","handleJoin","handleDeleteAndExit","remove_from_chat_list","Components_ColumnMiddle_InputBoxControl","ColumnMiddle_NotificationsCommandControl","VoiceNoteSlider","reset","getValue","PLAYER_PROGRESS_TIMEOUT_MS","Slider_default","slider","thumbWrapper","thumb","min","maxWidth","Pause_default","PlayArrow_default","Message_Media_VoiceNoteSlider","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","_React$Component","inherits","createClass","build","maxSnack","MAX_SNACK","displayName","getDisplayName","ChatStatus","onUpdateUserStatus","online","borderSize","iconIndicator","default","overflow","boxSizing","ChatTileControl","onFastUpdatingComplete","showOnline","BookmarkBorder_default","Components_Tile_ChatStatus","statusRoot","statusIcon","ForwardTargetChat","shortTitle","forward-target-chat-selected","Components_Tile_ChatTileControl","border","markSelected","markUnselected","boxShadow","paper","cyrillicInput","getCyrillicInput","input","output","latinInput","getLatinInput","ForwardDialog","loadContent","promises","getChatsPromise","savedMessagesPromise","chats","savedMessages","getPublicMessageLink","offset_order","offset_chat_id","force","slicedToArray","chatIds","chat_ids","for_album","publicMessageLink","info","handleCopyLink","link","copy","handleScheduledAction","enqueueSnackbar","addScheduledAction","NOTIFICATION_AUTO_HIDE_DURATION_MS","autoHideDuration","removeScheduledAction","getForwardPhotoSize","can_be_forwarded","getInnerText","messageRef","targetChats","targetChatId","disable_notifications","from_background","added_sticker_file_ids","from_chat_id","as_album","handleChangeSelection","div","handleSearchKeyDown","handleSearchKeyUp","searchRef","latinText","cyrillicText","searchResults","hasSearchText","searchText","handleSearchPaste","handleMessageKeyUp","handleMessagePaste","toLocaleLowerCase","setSearchFocus","Components_Tile_ForwardTargetChat","foundChats","aria-describedby","searchList","autoFocus","spacing","unit","dialogContent","withSnackbar","NotificationTimer","handleTimer","expire","timeout","timerId","clearInterval","setMilliseconds","getMilliseconds","setInterval","menuAnchorOrigin","menuTransformOrigin","LeaveChatDialog","getDeleteDialogText","other","objectWithoutProperties","ClearHistoryDialog","MainMenuButton","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","openClearHistory","handleClearHistoryContinue","handleLeave","openDelete","handleLeaveContinue","getLeaveChatNotification","clientUpdateType","finish","_this2$props","Components_Additional_NotificationTimer","getLeaveChatTitle","clearHistory","deleteChat","leaveChatTitle","aria-owns","aria-haspopup","menuIconButton","MoreVert_default","MainMenuButton_LeaveChatDialog","MainMenuButton_ClearHistoryDialog","UserStatusControl","isAccent","prevUserId","userStatusSubtitle","accent-color","userStatusAccentSubtitle","secondary","dark","UserControl","Components_Tile_UserStatusControl","DialogTitleControl","DialogStatusControl","updateSubtitle","find","subtitle","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","statusAccentSubtitle","statusSubtitle","ChatControl","onTileSelect","showStatus","Components_Tile_DialogTitleControl","Components_Tile_DialogStatusControl","ChatDetailsHeader","backButton","leftIconButton","ArrowBack_default","rightIconButton","NotificationsListItem","Notifications_default","NotificationsActive_default","noWrap","ListItemSecondaryAction_default","Switch_default","MoreListItem","handleMoreClick","openMore","handleSendMessage","setChatId","handleBlock","isGroup","isBlocked","isMember","MoreHoriz_default","ExpandLess_default","ExpandMore_default","Collapse_default","in","unmountOnExit","component","disablePadding","inset","ChatDetails","handleSelectChat","getGroupsInCommon","loadChatContents","hasGroupsInCommon","handleUsernameHint","telegramUrlOption","OptionStore","usernameLink","handlePhoneHint","phoneNumber","handleHeaderClick","chatDetailsListRef","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","getContentHeight","clientHeight","offsetHeight","onOpenSharedMedia","onOpenGroupsInCommon","Components_ColumnRight_ChatDetailsHeader","isMe","member","sort","y","Components_Tile_UserControl","handleSelectUser","Components_Tile_ChatControl","AlternateEmail_default","Call_default","ErrorOutline_default","whiteSpace","wordWrap","ColumnRight_NotificationsListItem","ColumnRight_MoreListItem","toUpperCase","nested","GroupsInCommonHeader","backIconButton","GroupsInCommon","minHeight","Components_ColumnRight_GroupsInCommonHeader","SharedMediaHeaderControl","SharedMedia","handleChange","Components_ColumnRight_SharedMediaHeaderControl","Tabs_default","indicatorColor","textColor","scrollable","scrollButtons","fullWidth","Tab_default","label","ChatInfo","userChatId","openSharedMedia","openGroupsInCommon","handelOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupsInCommon","handleCloseGroupsInCommon","handleCloseChatDetails","changeChatDetailsVisibility","detailsRef","dialogChatId","Components_ColumnRight_SharedMedia","Components_ColumnRight_GroupsInCommon","Components_ColumnRight_ChatDetails","right-column","TopChat","PureComponent","userStatusRoot","RecentlyFoundChat","FoundPublicChat","previousChatId","_classNames","selectedChatId","membersCount","subscribersString","listItemSelected","foundPublicChatSubtitle","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","senderName","senderFullName","tile","accentBackground","accent-background","foundMessageSubtitle","searchCaption","grey","searchCaptionCommand","Search","onClientUpdateSearchText","trimmedText","concatSearchResults","results","j","b","orderCompare","order","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","savedMessagesStrings","globalPromises","globalPromise","globalLatinPromise","globalResults","global","splice","recentlyFound","USERNAME_LENGTH_MIN","offset_date","offset_message_id","topPromise","recentlyFoundPromise","_ref4","category","handleRecentlyFound","_callee3","_context3","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","handleScroll","listRef","onLoadPrevious","getOffset","concatMessages","loading","handleTopChatsScroll","prevPropsChatId","prevPropsText","topChats","Components_Tile_TopChat","recentlyFoundChats","Components_Tile_RecentlyFoundChat","localChats","globalChats","Components_Tile_FoundPublicChat","globalMessages","Components_Tile_FoundMessage","messagesCaption","search","onScroll","Search_SearchCaption","closeSearchIconButton","ThemePicker","getColor","handleAccentChange","getColorString","red","orange","amber","green","blue","indigo","deepPurple","FormControl_default","formControl","FormLabel_default","RadioGroup_default","FormControlLabel_default","control","redRoot","orangeRoot","amberRoot","greenRoot","blueRoot","indigoRoot","deepPurpleRoot","&$checked","LanguagePicker","language","i18n","languages","LocalizationStore","language_packs","native_name","authorizationState","handleMenuOpen","isAuthorizationReady","handleLogOut","onLogOut","handleCheckUpdates","handleAppearance","themePicker","handleLanguage","languagePicker","setRef","assertThisInitialized","getAuthorizationState","mainMenuControl","icons_Menu_default","ColumnLeft_ThemePicker","innerRef","ColumnLeft_LanguagePicker","searchIconButton","DialogsHeader","handleDone","logOut","handleSearch","onSearch","openSearch","searchInput","confirmLogoutDialog","index_es","dialogText","ColumnLeft_MainMenuButton","headerIconButton","SpeedDialIcon_default","icons_Search_default","openIcon","DialogContentControl","onClientUpdateClearHistory","contentControl","DialogBadgeControl","unreadMessageIcon","unreadCount","unreadMentionCount","showUnreadCount","showDraftChat","dialogBadge","dialogBadgeMuted","is_pinned","DialogMetaControl","DialogControl","isSelected","dialogActive","Components_Tile_DialogMetaControl","Components_Tile_DialogContentControl","Components_Tile_DialogBadgeControl","cursor","& $statusRoot","&:hover","& $statusIcon","DialogsList","onClientUpdateLeaveChat","hiddenChats","loadFirstSlice","onLoadNext","onUpdateConnectionState","newConnectionState","connectionState","skippedUpdates","onUpdateChatOrder","reorderChats","newChatIds","minChatOrder","offsetOrder","offsetChatId","_args2","CHAT_SLICE_LIMIT","finally","shift","replaceChats","appendChats","getConnectionState","orderedChatIds","isDifferentOrder","dialogs","Components_Tile_DialogControl","oldChatIds","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","reload","maxHeight","Dialogs","onClientUpdateThemeChange","onClientUpdateChatDetailsVisibility","isChatDetailsVisible","onClientUpdateSearchChat","searchChatId","dialogsList","scrollToTop","visible","onSelectChat","handleSearchTextChange","dialogs-third-column","ColumnLeft_DialogsHeader","onSearchTextChange","Components_ColumnLeft_DialogsList","ColumnLeft_Search_Search","ColumnLeft_UpdatePanel","ChatInfoDialog","handleClientUpdateDialogChatId","container","containerRoot","paperRoot","Components_ColumnRight_ChatInfo","chatInfoRoot","alignItems","modal","HeaderCommand","canBeDeletedForAllUsers","can_be_deleted_for_all_users","openDeleteDialog","handleDeleteContinue","handleRevokeChange","handleCloseDelete","handleForward","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_ref6","handleReply","_MessageStore$selecte","canBeDeleted","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_ref9","can_be_deleted_only_for_self","canBeForwarded","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_ref10","canBeReplied","buttonLeft","buttonRight","Checkbox_default","Header","onUpdateChatOnlineMemberCount","onClientUpdateMessageSelected","selectionCount","onUpdateUserChatAction","handleSearchChat","searchChat","localize","str","Components_ColumnMiddle_HeaderCommand","isAccentSubtitle","showProgressAnimation","headerStatusAccentTitle","messageSearchIconButton","Components_ColumnMiddle_MainMenuButton","moreIconButton","VolumeButton","prevValue","dragging","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","handleDragStart","handleDragEnd","getVolumeIcon","VolumeOff_default","VolumeMute_default","VolumeDown_default","VolumeUp_default","onMouseEnter","onMouseLeave","visibility","marginTop","borderWidth","onDragStart","onDragEnd","opacity","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","getIcon","Repeat_default","RepeatOne_default","ShuffleButton","onClientUpdateMediaShuffle","handleShuffle","Shuffle_default","PlaybackRateButton","onClientUpdateMediaPlaybackRate","handlePlaybackRate","nextPlaybackRate","PLAYER_PLAYBACKRATE_FAST","Time","Playlist","scrollToActive","itemRefMap","ReactDOM","offsetTop","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaPlaylistLoading","_assertThisInitialize2","onClientUpdateMediaPlaylist","_assertThisInitialize3","clearTimeout","openTimeout","titleMouseOver","slice","reverse","HeaderPlayer","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","getMediaSrc","onClientUpdateMediaBlob","onClientUpdateMediaClose","paused","handlePrev","handlePlay","handleNext","handleEnded","handleVideoEnded","handleTimeUpdate","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","PLAYER_STARTTIME","dateHint","showDate","showPlaybackRate","showRepeat","showShuffle","controls","onPlay","onPause","onTimeUpdate","onEnded","SkipPrevious_default","SkipNext_default","Components_Player_Playlist","Player_Time","Components_Player_VolumeButton","Player_PlaybackRateButton","Player_RepeatButton","Player_ShuffleButton","FilesDropTarget","onClientUpdateDragging","getDragging","handleDragEnter","handleDrop","setDragging","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","Forward","arrowRef","handleArrowRef","openForward","tooltip","arrow","forwardColor","Tooltip_default","popper","arrowPopper","PopperProps","popperOptions","modifiers","enabled","placement","&[x-placement*=\"bottom\"] $arrow","&::before","&[x-placement*=\"top\"] $arrow","marginBottom","&[x-placement*=\"right\"] $arrow","marginLeft","&[x-placement*=\"left\"] $arrow","marginRight","MessageStatus","handleUpdateMessageSend","handleUpdateChatReadOutbox","sendingState","unread","payload","newMessageId","stateClassName","unreadSeparator","WebPage","displaySmallSize","site_name","smallPhoto","float","Media_Photo","PHOTO_DISPLAY_SMALL_SIZE","Message","onClientUpdateClearSelection","onClientUpdateMessageHighlighted","highlighted","onUpdateMessageEdited","onUpdateMessageViews","onUpdateMessageContent","handleSelection","mouseDown","handleDateClick","_this$props7","_this$props8","handleAnimationEnd","handleMouseDown","handleMouseOver","handleMouseOut","mouseOut","_this$props10","showUnreadSeparator","_this$props11","webPage","media","senderUserId","messageClassName","message-selected","messageSelected","messageHighlighted","onMouseOver","onMouseOut","onAnimationEnd","Message_UnreadSeparator","Components_Message_MessageStatus","Components_Message_Forward","Message_Media_WebPage","messageAuthorColor","@keyframes highlighted","PinnedMessage","onUpdateChatPinnedMessage","pinned_message_id","chatPhotoStyle","ServiceMessage","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","onClientUpdateLocalStickersHint","previewStickerId","showPreview","cancelSend","loadPreviewContent","stickerId","hintsRef","clientWidth","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","mouseDownStickerId","addEventListener","handleMouseUp","removeEventListener","dict","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","ScrollBehaviorEnum","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","KEEP_SCROLL_POSITION","Scroll","DELTA","LIST_UPDATE_FACTOR_DOWN","LIST_UPDATE_FACTOR_UP","BUTTON_UPDATE_FACTOR","MessagesList","onClientUpdateScroll","transportButton","classList","contains","add","remove","prevOffsetHeight","prevScrollTop","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateSelection","msiHistory","unshift","selectionActive","scrollBehavior","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","handleSendSucceeded","replaceMessage","viewMessages","onUpdateNewMessage","MESSAGE_SLICE_LIMIT","insertAfter","onUpdateDeleteMessages","deleteHistory","is_permanent","updateItemsInView","itemsInView","itemsRef","_message$props","loadIncompleteHistory","MAX_ITERATIONS","incomplete","fromMessageId","loadMigratedHistory","onLoadMigratedHistory","insertBefore","basicGroupChat","upgraded_from_basic_group_id","_callee5","_context5","completed","currentOffset","direction","suppressHandleScroll","suppressHandleScrollOnSelectChat","innerHeight","handleWheel","handleScrollToBottomClick","_callee6","_context6","getPrevChatId","getPrevMessageId","isScrollToBottomButtonDisplay","swapPrevChatId","handleScrollBehavior","scrollToBottom","scrollToMessage","scrolled","itemComponent","itemsMap","scrollToStart","_callee7","_context7","handleListDragEnter","prevMessageId","separatorMessageId","throttle","previousChat","last_read_inbox_message_id","MAX_VALUE","_this$getMessagePhoto","getMessagePhoto","_this$getMessagePhoto2","_this$getMessageStick","getMessageSticker","_this$getMessageStick2","oldMessageId","h","Components_Message_ServiceMessage","Components_Message_Message","showTitle","messages-list-selection-active","onWheel","class","Components_ColumnMiddle_PinnedMessage","Components_ColumnMiddle_FilesDropTarget","Components_ColumnMiddle_StickersHint","ShareStickerSetButton","getStickersLink","handleShare","Link_default","Share_default","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","dialogTitleRoot","disablePointerEvents","Dialog_ShareStickerSetButton","shareButtonRoot","flexWrap","flexDirection","flexShrink","DialogDetails","onUpdateChatDetailsVisibility","messagesList","selectedCount","dialog-details-third-column","Components_Player_HeaderPlayer","Components_ColumnMiddle_Header","Components_ColumnMiddle_MessagesList","Components_Dialog_StickerSetDialog","Components_Dialog_ChatInfoDialog","MediaViewerControl","tileControl","MediaCaption","Lottie","MediaViewerContent","onClientUpdateDocumentBlob","updateAnimationData","_getMediaFile","_getMediaFile2","animationData","getAnimationData","fileReader","FileReader","onload","parse","onabort","readAsText","_getMediaFile3","_getMediaFile4","onClientUpdateMediaThumbnailBlob","_getMediaPreviewFile","_getMediaPreviewFile2","_getMediaFile5","_getMediaFile6","handleContentClick","changeSpeed","speed","lottieRef","_getMediaFile7","_getMediaFile8","_getMediaPreviewFile3","_getMediaPreviewFile4","isPlaying","thumbnailBlob","isVideo","isAnimation","isLottie","videoWidth","videoHeight","onVolumeChange","defaultOptions","autoplay","rendererSettings","preserveAspectRatio","isStopped","isPaused","Components_Viewer_MediaCaption","_getMediaFile9","_getMediaFile10","_getMediaPreviewFile5","_getMediaPreviewFile6","MediaViewerButton","grow","children","MediaViewerFooterText","MediaViewerFooterButton","iconStyle","MediaViewerDownloadButton","saveDisabled","prevPropsFileId","Components_Viewer_MediaViewerFooterButton","GetApp_default","forwardIconStyle","transform","navigationIconStyle","MediaViewer","deleteConfirmationOpened","handlePrevious","currentMessageId","firstSliceLoaded","between","inserted","hasNextMedia","hasPreviousMedia","oldHistory","filterMap","currentId","deletedCount","getFilter","loadHistory","_filter","maxCount","_loop","MEDIA_SLICE_LIMIT","delegateYield","saveAnimation","saveDocument","saveVideo","savePhoto","handleSave","handleDialogOpen","loadMedia","loadPrevious","loadNext","nextId","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","handleChangeSpeed","contentRef","nextSpeed","hasPrevousMedia","_this$state6","deleteConfirmationContent","deleteConfirmation","Components_Viewer_MediaViewerButton","NavigateBefore_default","Components_Viewer_MediaViewerContent","NavigateNext_default","Components_Tile_MediaViewerControl","Components_Viewer_MediaViewerFooterText","SlowMotionVideo_default","InvertColors_default","Viewer_MediaViewerDownloadButton","Delete_default","ProfileMediaViewerContent","prevPhoto","ProfileMediaViewerControl","deleteIconStyle","ProfileMediaViewer","currentIndex","getReadWriteStore","prevFileId","currentFileId","inHistory","Viewer_ProfileMediaViewerContent","Tile_ProfileMediaViewerControl","MainPage","onClientUpdateOpenChat","onClientUpdateOpenUser","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","page","page-third-column","Components_ColumnLeft_Dialogs","Components_ColumnMiddle_DialogDetails","Components_Footer","Components_Viewer_MediaViewer","Components_Viewer_ProfileMediaViewer","Components_Dialog_ForwardDialog","withLanguage"],"mappings":"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","file":"static/js/3.bd8b82a7.chunk.js","sourcesContent":["/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport { EventEmitter } from 'events';\r\nimport { getLocationId } from '../Utils/Message';\r\nimport { FILE_PRIORITY, THUMBNAIL_PRIORITY } from '../Constants';\r\nimport TdLibController from '../Controllers/TdLibController';\r\n\r\nconst useReadFile = true;\r\n\r\nclass FileStore extends EventEmitter {\r\n    constructor() {\r\n        super();\r\n\r\n        this.callbacks = [];\r\n\r\n        //this.transactionCount = 0;\r\n        this.db = null;\r\n        this.urls = new WeakMap();\r\n        this.items = new Map();\r\n        this.blobItems = new Map();\r\n        this.locationItems = new Map();\r\n\r\n        this.downloads = new Map();\r\n        this.uploads = new Map();\r\n\r\n        this.addTdLibListener();\r\n        this.setMaxListeners(Infinity);\r\n    }\r\n\r\n    onUpdate = async update => {\r\n        switch (update['@type']) {\r\n            case 'updateFile': {\r\n                this.set(update.file);\r\n\r\n                this.onUpdateFile(update);\r\n\r\n                this.emit(update['@type'], update);\r\n                break;\r\n            }\r\n            case 'updateAuthorizationState': {\r\n                await this.onUpdateAuthorizationState(update);\r\n\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    onClientUpdate = update => {\r\n        switch (update['@type']) {\r\n            case 'clientUpdateAudioThumbnailBlob': {\r\n                this.emit(update['@type'], update);\r\n                break;\r\n            }\r\n            case 'clientUpdateAudioBlob': {\r\n                this.emit(update['@type'], update);\r\n                break;\r\n            }\r\n            case 'clientUpdateDocumentBlob': {\r\n                this.emit(update['@type'], update);\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    addTdLibListener = () => {\r\n        TdLibController.addListener('update', this.onUpdate);\r\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\r\n    };\r\n\r\n    removeTdLibListener = () => {\r\n        TdLibController.removeListener('update', this.onUpdate);\r\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\r\n    };\r\n\r\n    onUpdateAuthorizationState = async update => {\r\n        if (!update) return;\r\n        if (!update.authorization_state) return;\r\n\r\n        if (update.authorization_state['@type'] === 'authorizationStateWaitTdlibParameters') {\r\n            await this.initDB();\r\n        }\r\n    };\r\n\r\n    onUpdateFile = update => {\r\n        if (!update) return;\r\n\r\n        const { file } = update;\r\n        if (!file) return;\r\n\r\n        this.handleDownloads(file);\r\n        this.handleUploads(file);\r\n    };\r\n\r\n    handleDownloads = file => {\r\n        const { arr, id, idb_key, local } = file;\r\n        delete file.arr;\r\n\r\n        if (!this.downloads.has(id)) return;\r\n        if (!local.is_downloading_completed) return;\r\n        if (!useReadFile && !idb_key && !arr) return;\r\n\r\n        const items = this.downloads.get(id);\r\n        if (!items) return;\r\n\r\n        this.downloads.delete(id);\r\n\r\n        const store = this.getStore();\r\n\r\n        items.forEach(item => {\r\n            switch (item['@type']) {\r\n                case 'chat': {\r\n                    this.handleChat(store, item, file, arr);\r\n                    break;\r\n                }\r\n                case 'message': {\r\n                    this.handleMessage(store, item, file, arr);\r\n                    break;\r\n                }\r\n                case 'sticker': {\r\n                    this.handleSticker(store, item, file, arr, null);\r\n                    break;\r\n                }\r\n                case 'user': {\r\n                    this.handleUser(store, item, file, arr);\r\n                    break;\r\n                }\r\n                default:\r\n                    console.error('FileStore.onUpdateFile unhandled item', item);\r\n                    break;\r\n            }\r\n        });\r\n    };\r\n\r\n    handleUploads = file => {\r\n        const { id, remote } = file;\r\n        delete file.arr;\r\n\r\n        if (!this.uploads.has(id)) return;\r\n        if (remote.is_uploading_completed) return;\r\n\r\n        this.uploads.delete(id);\r\n    };\r\n\r\n    handleChat = (store, chat, file, arr) => {\r\n        if (!chat) return;\r\n\r\n        this.getLocalFile(\r\n            store,\r\n            file,\r\n            arr,\r\n            () => this.updateChatPhotoBlob(chat.id, file.id),\r\n            () => this.getRemoteFile(file.id, FILE_PRIORITY, chat)\r\n        );\r\n    };\r\n\r\n    handleUser = (store, user, file, arr) => {\r\n        if (!user) return;\r\n\r\n        this.getLocalFile(\r\n            store,\r\n            file,\r\n            arr,\r\n            () => this.updateUserPhotoBlob(user.id, file.id),\r\n            () => this.getRemoteFile(file.id, FILE_PRIORITY, user)\r\n        );\r\n    };\r\n\r\n    handleMessage = (store, message, file, arr) => {\r\n        if (!message) return;\r\n\r\n        const { content } = message;\r\n        if (!content) return;\r\n\r\n        switch (content['@type']) {\r\n            case 'messageAnimation': {\r\n                const { animation } = content;\r\n\r\n                this.handleAnimation(store, animation, file, arr, message);\r\n                break;\r\n            }\r\n            case 'messageAudio': {\r\n                const { audio } = content;\r\n\r\n                this.handleAudio(store, audio, file, arr, message);\r\n                break;\r\n            }\r\n            case 'messageChatChangePhoto': {\r\n                const { photo } = content;\r\n\r\n                this.handlePhoto(store, photo, file, arr, message);\r\n                break;\r\n            }\r\n            case 'messageDocument': {\r\n                const { document } = content;\r\n\r\n                this.handleDocument(store, document, file, arr, message);\r\n                break;\r\n            }\r\n            case 'messageGame': {\r\n                const { game } = content;\r\n\r\n                this.handleGame(store, game, file, arr, message);\r\n                break;\r\n            }\r\n            case 'messageLocation': {\r\n                const { location } = content;\r\n\r\n                this.handleLocation(store, location, file, arr, message);\r\n                break;\r\n            }\r\n            case 'messagePhoto': {\r\n                const { photo } = content;\r\n\r\n                this.handlePhoto(store, photo, file, arr, message);\r\n                break;\r\n            }\r\n            case 'messageSticker': {\r\n                const { sticker } = content;\r\n\r\n                this.handleSticker(store, sticker, file, arr, message);\r\n                break;\r\n            }\r\n            case 'messageText': {\r\n                const { web_page } = content;\r\n                if (!web_page) break;\r\n\r\n                const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\r\n\r\n                if (animation) {\r\n                    this.handleAnimation(store, animation, file, arr, message);\r\n                }\r\n\r\n                if (audio) {\r\n                    this.handleAudio(store, audio, file, arr, message);\r\n                }\r\n\r\n                if (document) {\r\n                    this.handleDocument(store, document, file, arr, message);\r\n                }\r\n\r\n                if (photo) {\r\n                    this.handlePhoto(store, photo, file, arr, message);\r\n                }\r\n\r\n                if (sticker) {\r\n                    this.handleSticker(store, sticker, file, arr, message);\r\n                }\r\n\r\n                if (video) {\r\n                    this.handleVideo(store, video, file, arr, message);\r\n                }\r\n\r\n                if (voice_note) {\r\n                    this.handleVoiceNote(store, voice_note, file, arr, message);\r\n                }\r\n\r\n                if (video_note) {\r\n                    this.handleVideoNote(store, video_note, file, arr, message);\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'messageVenue': {\r\n                const { venue } = content;\r\n                const { location } = venue;\r\n\r\n                this.handleLocation(store, location, file, arr, message);\r\n                break;\r\n            }\r\n            case 'messageVideo': {\r\n                const { video } = content;\r\n\r\n                this.handleVideo(store, video, file, arr, message);\r\n                break;\r\n            }\r\n            case 'messageVideoNote': {\r\n                const { video_note } = content;\r\n\r\n                this.handleVideoNote(store, video_note, file, arr, message);\r\n                break;\r\n            }\r\n            case 'messageVoiceNote': {\r\n                const { voice_note } = content;\r\n\r\n                this.handleVoiceNote(store, voice_note, file, arr, message);\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    handleGame = (store, game, file, arr, message) => {\r\n        if (!game) return;\r\n\r\n        const { animation, photo } = game;\r\n        if (photo) {\r\n            this.handlePhoto(store, photo, file, arr, message);\r\n        }\r\n\r\n        if (animation) {\r\n            this.handleAnimation(store, animation, file, arr, message);\r\n        }\r\n    };\r\n\r\n    handlePhoto = (store, photo, file, arr, obj) => {\r\n        if (photo) {\r\n            for (let i = 0; i < photo.sizes.length; i++) {\r\n                const photoSize = photo.sizes[i];\r\n                if (photoSize) {\r\n                    const source = photoSize.photo;\r\n                    if (source && source.id === file.id) {\r\n                        this.getLocalFile(\r\n                            store,\r\n                            source,\r\n                            arr,\r\n                            () => this.updatePhotoBlob(obj.chat_id, obj.id, file.id),\r\n                            () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\r\n                        );\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    handleAudio = (store, audio, file, arr, obj) => {\r\n        if (audio.album_cover_thumbnail) {\r\n            const source = audio.album_cover_thumbnail.photo;\r\n            if (source && source.id === file.id) {\r\n                this.getLocalFile(\r\n                    store,\r\n                    source,\r\n                    arr,\r\n                    () => this.updateAudioThumbnailBlob(obj.chat_id, obj.id, file.id),\r\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\r\n                );\r\n            }\r\n        }\r\n\r\n        if (audio.audio) {\r\n            const source = audio.audio;\r\n            if (source && source.id === file.id) {\r\n                this.getLocalFile(\r\n                    store,\r\n                    source,\r\n                    arr,\r\n                    () => this.updateAudioBlob(obj.chat_id, obj.id, file.id),\r\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\r\n                );\r\n            }\r\n        }\r\n    };\r\n\r\n    handleDocument = (store, document, file, arr, obj) => {\r\n        if (document.thumbnail) {\r\n            const { photo: source } = document.thumbnail;\r\n            if (source && source.id === file.id) {\r\n                this.getLocalFile(\r\n                    store,\r\n                    source,\r\n                    arr,\r\n                    () => this.updateDocumentThumbnailBlob(obj.chat_id, obj.id, file.id),\r\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\r\n                );\r\n            }\r\n        }\r\n\r\n        if (document.document) {\r\n            const { document: source } = document;\r\n            if (source && source.id === file.id) {\r\n                this.getLocalFile(\r\n                    store,\r\n                    source,\r\n                    arr,\r\n                    () => this.updateDocumentBlob(obj.chat_id, obj.id, file.id),\r\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\r\n                );\r\n            }\r\n        }\r\n    };\r\n\r\n    handleLocation = (store, location, file, arr, obj) => {\r\n        const locationId = getLocationId(location);\r\n        if (locationId) {\r\n            const source = this.getLocationFile(locationId);\r\n            if (source && source.id === file.id) {\r\n                this.getLocalFile(\r\n                    store,\r\n                    source,\r\n                    arr,\r\n                    () => this.updateLocationBlob(obj.chat_id, obj.id, file.id),\r\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\r\n                );\r\n            }\r\n        }\r\n    };\r\n\r\n    handleSticker = (store, sticker, file, arr, obj) => {\r\n        if (sticker.thumbnail) {\r\n            const source = sticker.thumbnail.photo;\r\n            if (source && source.id === file.id) {\r\n                const chatId = obj ? obj.chat_id : 0;\r\n                const messageId = obj ? obj.id : 0;\r\n\r\n                this.getLocalFile(\r\n                    store,\r\n                    source,\r\n                    arr,\r\n                    () => this.updateStickerThumbnailBlob(chatId, messageId, file.id),\r\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || sticker)\r\n                );\r\n            }\r\n        }\r\n\r\n        if (sticker.sticker) {\r\n            const source = sticker.sticker;\r\n            if (source && source.id === file.id) {\r\n                const chatId = obj ? obj.chat_id : 0;\r\n                const messageId = obj ? obj.id : 0;\r\n\r\n                this.getLocalFile(\r\n                    store,\r\n                    source,\r\n                    arr,\r\n                    () => this.updateStickerBlob(chatId, messageId, file.id),\r\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || sticker)\r\n                );\r\n            }\r\n        }\r\n    };\r\n\r\n    handleVoiceNote = (store, voiceNote, file, arr, obj) => {\r\n        if (voiceNote.voice) {\r\n            const source = voiceNote.voice;\r\n            if (source && source.id === file.id) {\r\n                this.getLocalFile(\r\n                    store,\r\n                    source,\r\n                    arr,\r\n                    () => this.updateVoiceNoteBlob(obj.chat_id, obj.id, file.id),\r\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\r\n                );\r\n            }\r\n        }\r\n    };\r\n\r\n    handleVideoNote = (store, videoNote, file, arr, obj) => {\r\n        if (videoNote.thumbnail) {\r\n            const source = videoNote.thumbnail.photo;\r\n            if (source && source.id === file.id) {\r\n                this.getLocalFile(\r\n                    store,\r\n                    source,\r\n                    arr,\r\n                    () => this.updateVideoNoteThumbnailBlob(obj.chat_id, obj.id, file.id),\r\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\r\n                );\r\n            }\r\n        }\r\n\r\n        if (videoNote.video) {\r\n            const source = videoNote.video;\r\n            if (source && source.id === file.id) {\r\n                this.getLocalFile(\r\n                    store,\r\n                    source,\r\n                    arr,\r\n                    () => this.updateVideoNoteBlob(obj.chat_id, obj.id, file.id),\r\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\r\n                );\r\n            }\r\n        }\r\n    };\r\n\r\n    handleVideo = (store, video, file, arr, obj) => {\r\n        if (video.thumbnail) {\r\n            const source = video.thumbnail.photo;\r\n            if (source && source.id === file.id) {\r\n                this.getLocalFile(\r\n                    store,\r\n                    source,\r\n                    arr,\r\n                    () => this.updateVideoThumbnailBlob(obj.chat_id, obj.id, file.id),\r\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\r\n                );\r\n            }\r\n        }\r\n\r\n        if (video.video) {\r\n            const source = video.video;\r\n            if (source && source.id === file.id) {\r\n                this.getLocalFile(\r\n                    store,\r\n                    source,\r\n                    arr,\r\n                    () => this.updateVideoBlob(obj.chat_id, obj.id, file.id),\r\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\r\n                );\r\n            }\r\n        }\r\n    };\r\n\r\n    handleAnimation = (store, animation, file, arr, obj) => {\r\n        if (animation.thumbnail) {\r\n            const source = animation.thumbnail.photo;\r\n            if (source && source.id === file.id) {\r\n                this.getLocalFile(\r\n                    store,\r\n                    source,\r\n                    arr,\r\n                    () => this.updateAnimationThumbnailBlob(obj.chat_id, obj.id, file.id),\r\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\r\n                );\r\n            }\r\n        }\r\n\r\n        if (animation.animation) {\r\n            const source = animation.animation;\r\n            if (source && source.id === file.id) {\r\n                this.getLocalFile(\r\n                    store,\r\n                    source,\r\n                    arr,\r\n                    () => this.updateAnimationBlob(obj.chat_id, obj.id, file.id),\r\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\r\n                );\r\n            }\r\n        }\r\n    };\r\n\r\n    async initDB(callback) {\r\n        /*if (this.store) return;\r\n            if (this.initiatingDB) return;\r\n\r\n            this.initiatingDB = true;\r\n            this.store = localForage.createInstance({\r\n                name: 'tdlib'\r\n            });\r\n            this.initiatingDB = false;\r\n\r\n            return;*/\r\n        if (this.db) {\r\n            console.log('[FileStore] db exists');\r\n            if (callback) callback();\r\n            return;\r\n        }\r\n\r\n        if (this.initiatingDB) {\r\n            console.log('[FileStore] add callback');\r\n            if (callback) this.callbacks.push(callback);\r\n            return;\r\n        }\r\n\r\n        console.log('[FileStore] start initDB');\r\n        if (callback) this.callbacks.push(callback);\r\n\r\n        this.initiatingDB = true;\r\n        this.db = await this.openDB().catch(error => console.log('[FileStore] initDB error', error));\r\n        this.initiatingDB = false;\r\n\r\n        console.log('[FileStore] stop initDB');\r\n\r\n        if (this.callbacks.length) {\r\n            console.log('[FileStore] invoke callbacks count=' + this.callbacks.length);\r\n            for (let i = 0; i < this.callbacks.length; i++) {\r\n                this.callbacks[i]();\r\n            }\r\n            this.callbacks = [];\r\n        }\r\n    }\r\n\r\n    openDB() {\r\n        return new Promise((resolve, reject) => {\r\n            const request = window.indexedDB.open('tdlib');\r\n            request.onsuccess = () => resolve(request.result);\r\n            request.onerror = () => reject(request.error);\r\n        });\r\n    }\r\n\r\n    getStore() {\r\n        //console.log('FileStore.getStore ' + this.transactionCount++);\r\n        return this.db.transaction(['keyvaluepairs'], 'readonly').objectStore('keyvaluepairs');\r\n    }\r\n\r\n    getReadWriteStore() {\r\n        if (useReadFile) {\r\n            return undefined;\r\n        }\r\n        return this.db.transaction(['keyvaluepairs'], 'readwrite').objectStore('keyvaluepairs');\r\n    }\r\n\r\n    deleteLocalFile = (store, file) => {};\r\n\r\n    getLocalFile(store, file, arr, callback, faultCallback) {\r\n        if (useReadFile) {\r\n            file = this.get(file.id) || file;\r\n            if (file && file.local && !file.local.is_downloading_completed) {\r\n                faultCallback();\r\n                return;\r\n            }\r\n\r\n            (async file => {\r\n                const response = await TdLibController.send({\r\n                    '@type': 'readFile',\r\n                    file_id: file.id\r\n                });\r\n\r\n                console.log(`readFile result file_id=${file.id}`, file, response);\r\n                this.setBlob(file.id, response.data);\r\n            })(file).then(callback, faultCallback);\r\n\r\n            return;\r\n        }\r\n\r\n        let idb_key = file.idb_key;\r\n        if (!idb_key) {\r\n            file = this.get(file.id) || file;\r\n            idb_key = file.idb_key;\r\n        }\r\n\r\n        if (!idb_key && !arr) {\r\n            faultCallback();\r\n            return;\r\n        }\r\n\r\n        if (arr) {\r\n            file.blob = new Blob([arr]);\r\n            this.setBlob(file.id, file.blob);\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        if (file.blob) {\r\n            //callback();\r\n            return;\r\n        }\r\n\r\n        // if (this.getBlob(file.id)){\r\n        //     return;\r\n        // }\r\n\r\n        const request = store.get(idb_key);\r\n        request.onsuccess = event => {\r\n            const blob = event.target.result;\r\n\r\n            if (blob) {\r\n                file.blob = blob;\r\n                this.setBlob(file.id, file.blob);\r\n                callback();\r\n            } else {\r\n                faultCallback();\r\n            }\r\n        };\r\n        request.onerror = () => {\r\n            faultCallback();\r\n        };\r\n    }\r\n\r\n    getRemoteFile(fileId, priority, obj) {\r\n        const items = this.downloads.get(fileId) || [];\r\n        if (items.some(x => x === obj)) return;\r\n\r\n        items.push(obj);\r\n        this.downloads.set(fileId, items);\r\n\r\n        TdLibController.send({\r\n            '@type': 'downloadFile',\r\n            file_id: fileId,\r\n            priority: priority\r\n        });\r\n    }\r\n\r\n    cancelGetRemoteFile(fileId, obj) {\r\n        if (!this.downloads.has(fileId)) return;\r\n\r\n        if (!obj) {\r\n            this.downloads.delete(fileId);\r\n        } else {\r\n            const items = this.downloads.get(fileId).filter(x => x !== obj);\r\n            this.downloads.set(fileId, items);\r\n        }\r\n\r\n        TdLibController.send({\r\n            '@type': 'cancelDownloadFile',\r\n            file_id: fileId,\r\n            only_if_pending: false\r\n        });\r\n    }\r\n\r\n    uploadFile(fileId, obj) {\r\n        if (this.uploads.has(fileId)) {\r\n            let items = this.uploads.get(fileId);\r\n            items.push(obj);\r\n        } else {\r\n            this.uploads.set(fileId, [obj]);\r\n        }\r\n\r\n        console.log('[perf] uploadFile file_id=' + fileId);\r\n    }\r\n\r\n    cancelUploadFile(fileId, obj) {\r\n        if (this.uploads.has(fileId)) {\r\n            this.uploads.delete(fileId);\r\n            console.log('cancel_upload_message id=' + obj.id);\r\n            TdLibController.send({\r\n                '@type': 'deleteMessages',\r\n                chat_id: obj.chat_id,\r\n                message_ids: [obj.id],\r\n                revoke: true\r\n            });\r\n        }\r\n    }\r\n\r\n    get = fileId => {\r\n        return this.items.get(fileId);\r\n    };\r\n\r\n    set = file => {\r\n        this.items.set(file.id, file);\r\n    };\r\n\r\n    getBlob = fileId => {\r\n        return this.blobItems.get(fileId);\r\n    };\r\n\r\n    setBlob = (fileId, blob) => {\r\n        this.blobItems.set(fileId, blob);\r\n    };\r\n\r\n    deleteBlob = fileId => {\r\n        this.blobItems.delete(fileId);\r\n    };\r\n\r\n    getLocationFile = locationId => {\r\n        const fileId = this.locationItems.get(locationId);\r\n\r\n        return this.get(fileId);\r\n    };\r\n\r\n    setLocationFile = (locationId, file) => {\r\n        this.locationItems.set(locationId, file.id);\r\n\r\n        this.set(file);\r\n    };\r\n\r\n    getBlobUrl = blob => {\r\n        if (!blob) {\r\n            return null;\r\n        }\r\n\r\n        if (this.urls.has(blob)) {\r\n            return this.urls.get(blob);\r\n        }\r\n\r\n        const url = URL.createObjectURL(blob);\r\n        this.urls.set(blob, url);\r\n\r\n        return url;\r\n    };\r\n\r\n    deleteBlobUrl = blob => {\r\n        if (this.urls.has(blob)) {\r\n            this.urls.delete(blob);\r\n        }\r\n    };\r\n\r\n    updatePhotoBlob = (chatId, messageId, fileId) => {\r\n        this.emit('clientUpdatePhotoBlob', {\r\n            chatId: chatId,\r\n            messageId: messageId,\r\n            fileId: fileId\r\n        });\r\n    };\r\n\r\n    updateAudioThumbnailBlob = (chatId, messageId, fileId) => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateAudioThumbnailBlob',\r\n            chatId: chatId,\r\n            messageId: messageId,\r\n            fileId: fileId\r\n        });\r\n    };\r\n\r\n    updateAudioBlob = (chatId, messageId, fileId) => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateAudioBlob',\r\n            chatId: chatId,\r\n            messageId: messageId,\r\n            fileId: fileId\r\n        });\r\n    };\r\n\r\n    updateVoiceNoteBlob = (chatId, messageId, fileId) => {\r\n        this.emit('clientUpdateVoiceNoteBlob', {\r\n            chatId: chatId,\r\n            messageId: messageId,\r\n            fileId: fileId\r\n        });\r\n    };\r\n\r\n    updateVideoNoteThumbnailBlob = (chatId, messageId, fileId) => {\r\n        this.emit('clientUpdateVideoNoteThumbnailBlob', {\r\n            chatId: chatId,\r\n            messageId: messageId,\r\n            fileId: fileId\r\n        });\r\n    };\r\n\r\n    updateVideoNoteBlob = (chatId, messageId, fileId) => {\r\n        this.emit('clientUpdateVideoNoteBlob', {\r\n            chatId: chatId,\r\n            messageId: messageId,\r\n            fileId: fileId\r\n        });\r\n    };\r\n\r\n    updateAnimationThumbnailBlob = (chatId, messageId, fileId) => {\r\n        this.emit('clientUpdateAnimationThumbnailBlob', {\r\n            chatId: chatId,\r\n            messageId: messageId,\r\n            fileId: fileId\r\n        });\r\n    };\r\n\r\n    updateAnimationBlob = (chatId, messageId, fileId) => {\r\n        this.emit('clientUpdateAnimationBlob', {\r\n            chatId: chatId,\r\n            messageId: messageId,\r\n            fileId: fileId\r\n        });\r\n    };\r\n\r\n    updateDocumentBlob = (chatId, messageId, fileId) => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateDocumentBlob',\r\n            chatId: chatId,\r\n            messageId: messageId,\r\n            fileId: fileId\r\n        });\r\n    };\r\n\r\n    updateVideoThumbnailBlob = (chatId, messageId, fileId) => {\r\n        this.emit('clientUpdateVideoThumbnailBlob', {\r\n            chatId: chatId,\r\n            messageId: messageId,\r\n            fileId: fileId\r\n        });\r\n    };\r\n\r\n    updateVideoBlob = (chatId, messageId, fileId) => {\r\n        this.emit('clientUpdateVideoBlob', {\r\n            chatId: chatId,\r\n            messageId: messageId,\r\n            fileId: fileId\r\n        });\r\n    };\r\n\r\n    updateStickerThumbnailBlob = (chatId, messageId, fileId) => {\r\n        this.emit('clientUpdateStickerThumbnailBlob', {\r\n            chatId: chatId,\r\n            messageId: messageId,\r\n            fileId: fileId\r\n        });\r\n    };\r\n\r\n    updateStickerBlob = (chatId, messageId, fileId) => {\r\n        this.emit('clientUpdateStickerBlob', {\r\n            chatId: chatId,\r\n            messageId: messageId,\r\n            fileId: fileId\r\n        });\r\n    };\r\n\r\n    updateLocationBlob = (chatId, messageId, fileId) => {\r\n        this.emit('clientUpdateLocationBlob', {\r\n            chatId: chatId,\r\n            messageId: messageId,\r\n            fileId: fileId\r\n        });\r\n    };\r\n\r\n    updateDocumentThumbnailBlob = (chatId, messageId, fileId) => {\r\n        this.emit('clientUpdateDocumentThumbnailBlob', {\r\n            chatId: chatId,\r\n            messageId: messageId,\r\n            fileId: fileId\r\n        });\r\n    };\r\n\r\n    updateUserPhotoBlob(userId, fileId) {\r\n        this.emit('clientUpdateUserBlob', {\r\n            userId: userId,\r\n            fileId: fileId\r\n        });\r\n    }\r\n\r\n    updateChatPhotoBlob(chatId, fileId) {\r\n        this.emit('clientUpdateChatBlob', {\r\n            chatId: chatId,\r\n            fileId: fileId\r\n        });\r\n    }\r\n}\r\n\r\nconst store = new FileStore();\r\nwindow.file = store;\r\nexport default store;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport { getPhotoSize, getPhotoThumbnailSize, getSize } from './Common';\r\nimport { getChatUserId } from './Chat';\r\nimport { getProfilePhoto } from './User';\r\nimport { getLocationId } from './Message';\r\nimport {\r\n    FILE_PRIORITY,\r\n    LOCATION_HEIGHT,\r\n    LOCATION_SCALE,\r\n    LOCATION_WIDTH,\r\n    LOCATION_ZOOM,\r\n    PHOTO_BIG_SIZE,\r\n    PHOTO_SIZE,\r\n    PRELOAD_ANIMATION_SIZE,\r\n    PRELOAD_AUDIO_SIZE,\r\n    PRELOAD_DOCUMENT_SIZE,\r\n    PRELOAD_STICKER_SIZE,\r\n    PRELOAD_VIDEO_SIZE,\r\n    PRELOAD_VIDEONOTE_SIZE,\r\n    PRELOAD_VOICENOTE_SIZE,\r\n    THUMBNAIL_PRIORITY\r\n} from '../Constants';\r\nimport ChatStore from '../Stores/ChatStore';\r\nimport FileStore from '../Stores/FileStore';\r\nimport MessageStore from '../Stores/MessageStore';\r\nimport UserStore from '../Stores/UserStore';\r\nimport TdLibController from '../Controllers/TdLibController';\r\n\r\nfunction getSizeString(size) {\r\n    if (!size) return `0 B`;\r\n\r\n    if (size < 1024) {\r\n        return `${size} B`;\r\n    }\r\n\r\n    if (size < 1024 * 1024) {\r\n        return `${(size / 1024).toFixed(1)} KB`;\r\n    }\r\n\r\n    if (size < 1024 * 1024 * 1024) {\r\n        return `${(size / 1024 / 1024).toFixed(1)} MB`;\r\n    }\r\n\r\n    return `${(size / 1024 / 1024 / 1024).toFixed(1)} GB`;\r\n}\r\n\r\nfunction getFileSize(file) {\r\n    if (!file) return null;\r\n\r\n    let size = file.size;\r\n    if (!size) return null;\r\n\r\n    return getSizeString(size);\r\n}\r\n\r\nfunction getBigPhoto(photo) {\r\n    if (!photo) return null;\r\n\r\n    return photo.big;\r\n}\r\n\r\nfunction saveData(data, filename, mime) {\r\n    let blob = new Blob([data], { type: mime || 'application/octet-stream' });\r\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\r\n        // IE workaround for \"HTML7007: One or more blob URLs were\r\n        // revoked by closing the blob for which they were created.\r\n        // These URLs will no longer resolve as the data backing\r\n        // the URL has been freed.\"\r\n        window.navigator.msSaveBlob(blob, filename);\r\n    } else {\r\n        let blobURL = window.URL.createObjectURL(blob);\r\n        let tempLink = document.createElement('a');\r\n        tempLink.style.display = 'none';\r\n        tempLink.href = blobURL;\r\n        tempLink.setAttribute('download', filename);\r\n\r\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\r\n        // target if the browser does not support the HTML5 download attribute.\r\n        // This allows you to download files in desktop safari if pop up blocking\r\n        // is enabled.\r\n        if (typeof tempLink.download === 'undefined') {\r\n            tempLink.setAttribute('target', '_blank');\r\n        }\r\n\r\n        document.body.appendChild(tempLink);\r\n        tempLink.click();\r\n        document.body.removeChild(tempLink);\r\n        window.URL.revokeObjectURL(blobURL);\r\n    }\r\n}\r\n\r\nfunction saveBlob(blob, filename) {\r\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\r\n        // IE workaround for \"HTML7007: One or more blob URLs were\r\n        // revoked by closing the blob for which they were created.\r\n        // These URLs will no longer resolve as the data backing\r\n        // the URL has been freed.\"\r\n        window.navigator.msSaveBlob(blob, filename);\r\n    } else {\r\n        let blobURL = window.URL.createObjectURL(blob);\r\n        let tempLink = document.createElement('a');\r\n        tempLink.style.display = 'none';\r\n        tempLink.href = blobURL;\r\n        tempLink.setAttribute('download', filename);\r\n\r\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\r\n        // target if the browser does not support the HTML5 download attribute.\r\n        // This allows you to download files in desktop safari if pop up blocking\r\n        // is enabled.\r\n        if (typeof tempLink.download === 'undefined') {\r\n            tempLink.setAttribute('target', '_blank');\r\n        }\r\n\r\n        document.body.appendChild(tempLink);\r\n        tempLink.click();\r\n        document.body.removeChild(tempLink);\r\n        window.URL.revokeObjectURL(blobURL);\r\n    }\r\n}\r\n\r\nasync function loadReplies(store, chatId, messageIds) {\r\n    if (!chatId) return;\r\n    if (!messageIds) return;\r\n    if (!messageIds.length) return;\r\n\r\n    const result = await TdLibController.send({\r\n        '@type': 'getMessages',\r\n        chat_id: chatId,\r\n        message_ids: messageIds\r\n    });\r\n\r\n    result.messages = result.messages.map((message, i) => {\r\n        return (\r\n            message || {\r\n                '@type': 'deletedMessage',\r\n                chat_id: chatId,\r\n                id: messageIds[i],\r\n                content: null\r\n            }\r\n        );\r\n    });\r\n\r\n    MessageStore.setItems(result.messages);\r\n\r\n    for (let i = messageIds.length - 1; i >= 0; i--) {\r\n        MessageStore.emit('getMessageResult', MessageStore.get(chatId, messageIds[i]));\r\n    }\r\n\r\n    store = FileStore.getStore();\r\n\r\n    loadReplyContents(store, result.messages);\r\n}\r\n\r\nfunction loadReplyContents(store, messages) {\r\n    for (let i = messages.length - 1; i >= 0; i--) {\r\n        const message = messages[i];\r\n        if (!message) {\r\n            continue;\r\n        }\r\n\r\n        const { content } = message;\r\n        if (content) {\r\n            switch (content['@type']) {\r\n                case 'messageAnimation': {\r\n                    const { animation } = content;\r\n\r\n                    loadAnimationThumbnailContent(store, animation, message);\r\n                    break;\r\n                }\r\n                case 'messageAudio': {\r\n                    const { audio } = content;\r\n\r\n                    loadAudioThumbnailContent(store, audio, message);\r\n                    break;\r\n                }\r\n                case 'messageChatChangePhoto': {\r\n                    const { photo } = content;\r\n\r\n                    loadPhotoContent(store, photo, message);\r\n                    break;\r\n                }\r\n                case 'messageDocument': {\r\n                    const { document } = content;\r\n\r\n                    loadDocumentThumbnailContent(store, document, message);\r\n                    break;\r\n                }\r\n                case 'messageGame': {\r\n                    const { game } = content;\r\n\r\n                    loadGameThumbnailContent(store, game, message);\r\n                    break;\r\n                }\r\n                case 'messagePhoto': {\r\n                    const { photo } = content;\r\n\r\n                    loadPhotoContent(store, photo, message);\r\n                    break;\r\n                }\r\n                case 'messageSticker': {\r\n                    const { sticker } = content;\r\n\r\n                    loadStickerThumbnailContent(store, sticker, message);\r\n                    break;\r\n                }\r\n                case 'messageText': {\r\n                    const { web_page } = content;\r\n                    if (!web_page) break;\r\n\r\n                    const { animation, audio, document, photo, sticker, video, video_note } = web_page;\r\n\r\n                    if (photo) {\r\n                        loadPhotoContent(store, photo, message);\r\n                        break;\r\n                    }\r\n\r\n                    if (animation) {\r\n                        loadAnimationThumbnailContent(store, animation, message);\r\n                        break;\r\n                    }\r\n\r\n                    if (audio) {\r\n                        loadAudioThumbnailContent(store, audio, message);\r\n                        break;\r\n                    }\r\n\r\n                    if (document) {\r\n                        loadDocumentThumbnailContent(store, document, message);\r\n                        break;\r\n                    }\r\n\r\n                    if (sticker) {\r\n                        loadStickerThumbnailContent(store, sticker, message);\r\n                        break;\r\n                    }\r\n\r\n                    if (video) {\r\n                        loadVideoThumbnailContent(store, video, message);\r\n                        break;\r\n                    }\r\n\r\n                    if (video_note) {\r\n                        loadVideoNoteThumbnailContent(store, video_note, message);\r\n                        break;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n                case 'messageVideo': {\r\n                    const { video } = content;\r\n\r\n                    loadVideoThumbnailContent(store, video, message);\r\n                    break;\r\n                }\r\n                case 'messageVideoNote': {\r\n                    const { video_note } = content;\r\n\r\n                    loadVideoNoteThumbnailContent(store, video_note, message);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction loadAudioContent(store, audio, message, useFileSize = true) {\r\n    if (!audio) return;\r\n    if (!message) return;\r\n\r\n    let { audio: file } = audio;\r\n    if (!file) return;\r\n\r\n    file = FileStore.get(file.id) || file;\r\n    const { id, size } = file;\r\n\r\n    const blob = FileStore.getBlob(id);\r\n    if (blob) return;\r\n\r\n    FileStore.getLocalFile(\r\n        store,\r\n        file,\r\n        null,\r\n        () => FileStore.updateAudioBlob(message.chat_id, message.id, id),\r\n        () => {\r\n            if (!useFileSize || (size && size < PRELOAD_AUDIO_SIZE)) {\r\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\r\n            }\r\n        }\r\n    );\r\n}\r\n\r\nfunction loadAudioThumbnailContent(store, audio, message) {\r\n    if (!audio) return false;\r\n    if (!message) return false;\r\n\r\n    const { album_cover_thumbnail: photoSize } = audio;\r\n    if (!photoSize) return false;\r\n\r\n    let { photo: file } = photoSize;\r\n    if (!file) return false;\r\n\r\n    file = FileStore.get(file.id) || file;\r\n    const { id } = file;\r\n\r\n    const blob = FileStore.getBlob(file.id);\r\n    if (blob) return true;\r\n\r\n    FileStore.getLocalFile(\r\n        store,\r\n        file,\r\n        null,\r\n        () => FileStore.updateAudioThumbnailBlob(message.chat_id, message.id, id),\r\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\r\n    );\r\n\r\n    return true;\r\n}\r\n\r\nfunction loadAnimationContent(store, animation, message, useFileSize = true) {\r\n    if (!animation) return;\r\n    if (!message) return;\r\n\r\n    let { animation: file } = animation;\r\n    if (!file) return;\r\n\r\n    file = FileStore.get(file.id) || file;\r\n    const { id, size } = file;\r\n\r\n    const blob = FileStore.getBlob(id);\r\n    if (blob) return;\r\n\r\n    FileStore.getLocalFile(\r\n        store,\r\n        file,\r\n        null,\r\n        () => FileStore.updateAnimationBlob(message.chat_id, message.id, id),\r\n        () => {\r\n            if (!useFileSize || (size && size < PRELOAD_ANIMATION_SIZE)) {\r\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\r\n            }\r\n        }\r\n    );\r\n}\r\n\r\nfunction loadAnimationThumbnailContent(store, animation, message) {\r\n    if (!animation) return false;\r\n    if (!message) return false;\r\n\r\n    const { thumbnail: photoSize } = animation;\r\n    if (!photoSize) return false;\r\n\r\n    let { photo: file } = photoSize;\r\n    if (!file) return false;\r\n\r\n    file = FileStore.get(file.id) || file;\r\n    const { id } = file;\r\n\r\n    const blob = FileStore.getBlob(file.id);\r\n    if (blob) return true;\r\n\r\n    FileStore.getLocalFile(\r\n        store,\r\n        file,\r\n        null,\r\n        () => FileStore.updateAnimationThumbnailBlob(message.chat_id, message.id, id),\r\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\r\n    );\r\n\r\n    return true;\r\n}\r\n\r\nfunction loadContactContent(store, contact, message) {\r\n    if (!contact) return;\r\n    if (!message) return;\r\n\r\n    const { user_id } = contact;\r\n    const user = UserStore.get(user_id);\r\n    if (!user) return;\r\n\r\n    loadUserContent(store, user);\r\n}\r\n\r\nfunction loadDocumentContent(store, document, message, useFileSize = true) {\r\n    if (!document) return;\r\n    if (!message) return;\r\n\r\n    let { document: file } = document;\r\n    if (!file) return;\r\n\r\n    file = FileStore.get(file.id) || file;\r\n    const { id, size } = file;\r\n\r\n    const blob = FileStore.getBlob(id);\r\n    if (blob) return;\r\n\r\n    FileStore.getLocalFile(\r\n        store,\r\n        file,\r\n        null,\r\n        () => FileStore.updateDocumentBlob(message.chat_id, message.id, id),\r\n        () => {\r\n            if (!useFileSize || (size && size < PRELOAD_DOCUMENT_SIZE)) {\r\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\r\n            }\r\n        }\r\n    );\r\n}\r\n\r\nfunction loadDocumentThumbnailContent(store, document, message) {\r\n    if (!document) return false;\r\n    if (!message) return false;\r\n\r\n    const { thumbnail: photoSize } = document;\r\n    if (!photoSize) return false;\r\n\r\n    let { photo: file } = photoSize;\r\n    if (!file) return false;\r\n\r\n    file = FileStore.get(file.id) || file;\r\n    const { id } = file;\r\n\r\n    const blob = FileStore.getBlob(file.id);\r\n    if (blob) return true;\r\n\r\n    FileStore.getLocalFile(\r\n        store,\r\n        file,\r\n        null,\r\n        () => FileStore.updateDocumentThumbnailBlob(message.chat_id, message.id, id),\r\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\r\n    );\r\n\r\n    return true;\r\n}\r\n\r\nfunction loadGameContent(store, game, message, useFileSize = true) {\r\n    if (!game) return;\r\n    if (!message) return;\r\n\r\n    const { animation } = game;\r\n\r\n    loadAnimationContent(store, animation, message, useFileSize);\r\n}\r\n\r\nfunction loadGameThumbnailContent(store, game, message) {\r\n    if (!game) return false;\r\n    if (!message) return false;\r\n\r\n    const { photo, animation } = game;\r\n    if (loadAnimationThumbnailContent(store, animation, message)) {\r\n        return true;\r\n    }\r\n\r\n    loadPhotoContent(store, photo, message);\r\n    return true;\r\n}\r\n\r\nasync function loadLocationContent(store, location, message) {\r\n    if (!location) return;\r\n    if (!message) return;\r\n\r\n    const locationId = getLocationId(location);\r\n    if (!locationId) return;\r\n\r\n    let file = FileStore.getLocationFile(locationId);\r\n    if (!file) {\r\n        file = await TdLibController.send({\r\n            '@type': 'getMapThumbnailFile',\r\n            location: location,\r\n            zoom: LOCATION_ZOOM,\r\n            width: LOCATION_WIDTH,\r\n            height: LOCATION_HEIGHT,\r\n            scale: LOCATION_SCALE,\r\n            chat_id: message.chat_id\r\n        });\r\n        FileStore.setLocationFile(locationId, file);\r\n\r\n        store = FileStore.getStore();\r\n    }\r\n\r\n    file = FileStore.get(file.id) || file;\r\n    const { id } = file;\r\n\r\n    const blob = FileStore.getBlob(file.id);\r\n    if (blob) return;\r\n\r\n    FileStore.getLocalFile(\r\n        store,\r\n        file,\r\n        null,\r\n        () => FileStore.updateLocationBlob(message.chat_id, message.id, id),\r\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message)\r\n    );\r\n}\r\n\r\nfunction loadBigPhotoContent(store, photo, message) {\r\n    if (!photo) return;\r\n    if (!message) return;\r\n\r\n    const { sizes } = photo;\r\n    if (!sizes) return;\r\n\r\n    const photoSize = getSize(sizes, PHOTO_BIG_SIZE);\r\n    if (!photoSize) return;\r\n\r\n    let { photo: file } = photoSize;\r\n    if (!file) return;\r\n\r\n    file = FileStore.get(file.id) || file;\r\n    const { id } = file;\r\n\r\n    const blob = FileStore.getBlob(id);\r\n    if (blob) return;\r\n\r\n    FileStore.getLocalFile(\r\n        store,\r\n        file,\r\n        null,\r\n        () => FileStore.updatePhotoBlob(message.chat_id, message.id, id),\r\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message)\r\n    );\r\n}\r\n\r\nfunction loadPhotoContent(store, photo, message) {\r\n    if (!photo) return;\r\n    if (!message) return;\r\n\r\n    const { sizes } = photo;\r\n    if (!sizes) return;\r\n\r\n    const photoSize = getPhotoSize(sizes);\r\n    if (!photoSize) return;\r\n\r\n    let { photo: file } = photoSize;\r\n    if (!file) return;\r\n\r\n    file = FileStore.get(file.id) || file;\r\n    const { id } = file;\r\n\r\n    const blob = FileStore.getBlob(id);\r\n    if (blob) return;\r\n\r\n    FileStore.getLocalFile(\r\n        store,\r\n        file,\r\n        null,\r\n        () => FileStore.updatePhotoBlob(message.chat_id, message.id, id),\r\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message)\r\n    );\r\n}\r\n\r\nfunction loadPhotoThumbnailContent(store, photo, message) {\r\n    if (!photo) return false;\r\n    if (!message) return false;\r\n\r\n    const photoSize = getPhotoThumbnailSize(photo.sizes);\r\n    if (!photoSize) return false;\r\n\r\n    let { photo: file } = photoSize;\r\n    if (!file) return false;\r\n\r\n    file = FileStore.get(file.id) || file;\r\n    const { id } = file;\r\n\r\n    const blob = FileStore.getBlob(id);\r\n    if (blob) return true;\r\n\r\n    FileStore.getLocalFile(\r\n        store,\r\n        file,\r\n        null,\r\n        () => FileStore.updatePhotoBlob(message.chat_id, message.id, id),\r\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\r\n    );\r\n\r\n    return true;\r\n}\r\n\r\nfunction loadStickerContent(store, sticker, message, useFileSize = true) {\r\n    if (!sticker) return;\r\n\r\n    let { sticker: file } = sticker;\r\n    if (!file) return;\r\n\r\n    file = FileStore.get(file.id) || file;\r\n    const { id, size } = file;\r\n\r\n    const blob = FileStore.getBlob(id);\r\n    if (blob) return;\r\n\r\n    const chatId = message ? message.chat_id : 0;\r\n    const messageId = message ? message.id : 0;\r\n\r\n    FileStore.getLocalFile(\r\n        store,\r\n        file,\r\n        null,\r\n        () => FileStore.updateStickerBlob(chatId, messageId, id),\r\n        () => {\r\n            if (!useFileSize || (size && size < PRELOAD_STICKER_SIZE)) {\r\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || sticker);\r\n            }\r\n        }\r\n    );\r\n}\r\n\r\nfunction loadStickerThumbnailContent(store, sticker, message) {\r\n    if (!sticker) return false;\r\n\r\n    const { thumbnail: photoSize } = sticker;\r\n    if (!photoSize) return false;\r\n\r\n    let { photo: file } = photoSize;\r\n    if (!file) return false;\r\n\r\n    file = FileStore.get(file.id) || file;\r\n    const { id } = file;\r\n\r\n    const blob = FileStore.getBlob(id);\r\n    if (blob) return true;\r\n\r\n    const chatId = message ? message.chat_id : 0;\r\n    const messageId = message ? message.id : 0;\r\n\r\n    FileStore.getLocalFile(\r\n        store,\r\n        file,\r\n        null,\r\n        () => FileStore.updateStickerThumbnailBlob(chatId, messageId, id),\r\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || sticker)\r\n    );\r\n\r\n    return true;\r\n}\r\n\r\nfunction loadVideoContent(store, video, message, useFileSize = true) {\r\n    if (!video) return;\r\n    if (!message) return;\r\n\r\n    let { video: file } = video;\r\n    if (!file) return;\r\n\r\n    file = FileStore.get(file.id) || file;\r\n    const { id, size } = file;\r\n\r\n    const blob = FileStore.getBlob(id);\r\n    if (blob) return;\r\n\r\n    FileStore.getLocalFile(\r\n        store,\r\n        file,\r\n        null,\r\n        () => FileStore.updateVideoBlob(message.chat_id, message.id, id),\r\n        () => {\r\n            if (!useFileSize || (size && size < PRELOAD_VIDEO_SIZE)) {\r\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\r\n            }\r\n        }\r\n    );\r\n}\r\n\r\nfunction loadVideoThumbnailContent(store, video, message) {\r\n    if (!video) return false;\r\n    if (!message) return false;\r\n\r\n    const { thumbnail: photoSize } = video;\r\n    if (!photoSize) return false;\r\n\r\n    let { photo: file } = photoSize;\r\n    if (!file) return false;\r\n\r\n    file = FileStore.get(file.id) || file;\r\n    const { id } = file;\r\n\r\n    const blob = FileStore.getBlob(id);\r\n    if (blob) return true;\r\n\r\n    FileStore.getLocalFile(\r\n        store,\r\n        file,\r\n        null,\r\n        () => FileStore.updateVideoThumbnailBlob(message.chat_id, message.id, id),\r\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\r\n    );\r\n\r\n    return true;\r\n}\r\n\r\nfunction loadVideoNoteContent(store, videoNote, message, useFileSize = true) {\r\n    if (!videoNote) return;\r\n    if (!message) return;\r\n\r\n    let { video: file } = videoNote;\r\n    if (!file) return;\r\n\r\n    file = FileStore.get(file.id) || file;\r\n    const { id, size } = file;\r\n\r\n    const blob = FileStore.getBlob(id);\r\n    if (blob) return;\r\n\r\n    FileStore.getLocalFile(\r\n        store,\r\n        file,\r\n        null,\r\n        () => FileStore.updateVideoNoteBlob(message.chat_id, message.id, id),\r\n        () => {\r\n            if (!useFileSize || (size && size < PRELOAD_VIDEONOTE_SIZE)) {\r\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\r\n            }\r\n        }\r\n    );\r\n}\r\n\r\nfunction loadVideoNoteThumbnailContent(store, videoNote, message) {\r\n    if (!videoNote) return false;\r\n    if (!message) return false;\r\n\r\n    const { thumbnail: photoSize } = videoNote;\r\n    if (!photoSize) return false;\r\n\r\n    let { photo: file } = photoSize;\r\n    if (!file) return false;\r\n\r\n    file = FileStore.get(file.id) || file;\r\n    const { id } = file;\r\n\r\n    const blob = FileStore.getBlob(id);\r\n    if (blob) return true;\r\n\r\n    FileStore.getLocalFile(\r\n        store,\r\n        file,\r\n        null,\r\n        () => FileStore.updateVideoNoteThumbnailBlob(message.chat_id, message.id, id),\r\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\r\n    );\r\n\r\n    return true;\r\n}\r\n\r\nfunction loadVoiceNoteContent(store, voiceNote, message, useFileSize = true) {\r\n    if (!voiceNote) return;\r\n    if (!message) return;\r\n\r\n    let { voice: file } = voiceNote;\r\n    if (!file) return;\r\n\r\n    file = FileStore.get(file.id) || file;\r\n    const { id, size } = file;\r\n\r\n    const blob = FileStore.getBlob(id);\r\n    if (blob) return;\r\n\r\n    FileStore.getLocalFile(\r\n        store,\r\n        file,\r\n        null,\r\n        () => FileStore.updateVoiceNoteBlob(message.chat_id, message.id, id),\r\n        () => {\r\n            if (!useFileSize || (size && size < PRELOAD_VOICENOTE_SIZE)) {\r\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\r\n            }\r\n        }\r\n    );\r\n}\r\n\r\nfunction loadMessageContents(store, messages) {\r\n    const users = new Map();\r\n    let chatId = 0;\r\n    const replies = new Map();\r\n\r\n    for (let i = messages.length - 1; i >= 0; i--) {\r\n        const message = messages[i];\r\n        if (!message) {\r\n            continue;\r\n        }\r\n\r\n        const { chat_id, content, sender_user_id, reply_to_message_id } = message;\r\n\r\n        if (sender_user_id) {\r\n            users.set(sender_user_id, sender_user_id);\r\n        }\r\n\r\n        if (reply_to_message_id) {\r\n            chatId = chat_id;\r\n            replies.set(reply_to_message_id, reply_to_message_id);\r\n        }\r\n\r\n        if (content) {\r\n            switch (content['@type']) {\r\n                case 'messageAnimation': {\r\n                    const { animation } = content;\r\n\r\n                    loadAnimationContent(store, animation, message);\r\n                    loadAnimationThumbnailContent(store, animation, message);\r\n                    break;\r\n                }\r\n                case 'messageAudio': {\r\n                    const { audio } = content;\r\n\r\n                    loadAudioContent(store, audio, message);\r\n                    loadAudioThumbnailContent(store, audio, message);\r\n                    break;\r\n                }\r\n                case 'messageChatChangePhoto': {\r\n                    const { photo } = content;\r\n\r\n                    loadPhotoContent(store, photo, message);\r\n                    break;\r\n                }\r\n                case 'messageContact': {\r\n                    const { contact } = content;\r\n\r\n                    loadContactContent(store, contact, message);\r\n                    break;\r\n                }\r\n                case 'messageDocument': {\r\n                    const { document } = content;\r\n\r\n                    loadDocumentContent(store, document, message);\r\n                    loadDocumentThumbnailContent(store, document, message);\r\n                    break;\r\n                }\r\n                case 'messageGame': {\r\n                    const { game } = content;\r\n\r\n                    loadGameContent(store, game, message);\r\n                    loadGameThumbnailContent(store, game, message);\r\n                    break;\r\n                }\r\n                case 'messageLocation': {\r\n                    const { location } = content;\r\n\r\n                    loadLocationContent(store, location, message);\r\n                    break;\r\n                }\r\n                case 'messageText': {\r\n                    const { web_page } = content;\r\n                    if (!web_page) {\r\n                        break;\r\n                    }\r\n\r\n                    const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\r\n                    let loadPhoto = true;\r\n\r\n                    if (animation) {\r\n                        loadAnimationContent(store, animation, message);\r\n                        loadPhoto = !loadAnimationThumbnailContent(store, animation, message);\r\n                    }\r\n\r\n                    if (audio) {\r\n                        loadAudioContent(store, audio, message);\r\n                        loadPhoto = !loadAudioThumbnailContent(store, audio, message);\r\n                    }\r\n\r\n                    if (document) {\r\n                        loadDocumentContent(store, document, message);\r\n                        loadPhoto = !loadDocumentThumbnailContent(store, document, message);\r\n                    }\r\n\r\n                    if (sticker) {\r\n                        loadStickerContent(store, sticker, message);\r\n                        loadPhoto = !loadStickerThumbnailContent(store, sticker, message);\r\n                    }\r\n\r\n                    if (video) {\r\n                        // loadVideoContent(store, video, message); // start loading only on video click event\r\n                        loadPhoto = !loadVideoThumbnailContent(store, video, message);\r\n                    }\r\n\r\n                    if (video_note) {\r\n                        loadVideoNoteContent(store, video_note, message);\r\n                        loadPhoto = !loadVideoNoteThumbnailContent(store, video_note, message);\r\n                    }\r\n\r\n                    if (voice_note) {\r\n                        loadVoiceNoteContent(store, voice_note, message);\r\n                    }\r\n\r\n                    if (loadPhoto) {\r\n                        loadBigPhotoContent(store, photo, message);\r\n                        loadPhotoContent(store, photo, message);\r\n                        loadPhotoThumbnailContent(store, photo, message);\r\n                    }\r\n                    break;\r\n                }\r\n                case 'messagePhoto': {\r\n                    const { photo } = content;\r\n\r\n                    loadBigPhotoContent(store, photo, message);\r\n                    loadPhotoContent(store, photo, message);\r\n                    loadPhotoThumbnailContent(store, photo, message);\r\n                    break;\r\n                }\r\n                case 'messageSticker': {\r\n                    const { sticker } = content;\r\n\r\n                    loadStickerContent(store, sticker, message);\r\n                    loadStickerThumbnailContent(store, sticker, message);\r\n                    break;\r\n                }\r\n                case 'messageVenue': {\r\n                    const { venue } = content;\r\n                    const { location } = venue;\r\n\r\n                    loadLocationContent(store, location, message);\r\n                    break;\r\n                }\r\n                case 'messageVideo': {\r\n                    const { video } = content;\r\n\r\n                    // loadVideoContent(store, video, message); // start loading only on video click event\r\n                    loadVideoThumbnailContent(store, video, message);\r\n                    break;\r\n                }\r\n                case 'messageVideoNote': {\r\n                    const { video_note } = content;\r\n\r\n                    loadVideoNoteContent(store, video_note, message);\r\n                    loadVideoNoteThumbnailContent(store, video_note, message);\r\n                    break;\r\n                }\r\n                case 'messageVoiceNote': {\r\n                    const { voice_note } = content;\r\n\r\n                    loadVoiceNoteContent(store, voice_note, message);\r\n                    break;\r\n                }\r\n                default: {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    loadUsersContent(store, [...users.keys()]);\r\n    loadReplies(store, chatId, [...replies.keys()]);\r\n}\r\n\r\nfunction saveOrDownload(file, fileName, obj, callback) {\r\n    if (!file) return;\r\n    if (!fileName) return;\r\n\r\n    if (file.arr) {\r\n        saveData(file.arr, fileName);\r\n        return;\r\n    }\r\n\r\n    let blob = FileStore.getBlob(file.id) || file.blob;\r\n    if (blob) {\r\n        saveBlob(blob, fileName);\r\n        return;\r\n    }\r\n\r\n    download(file, obj, () => {\r\n        if (callback) callback();\r\n\r\n        blob = FileStore.getBlob(file.id) || file.blob;\r\n        if (blob) {\r\n            saveBlob(blob, fileName);\r\n        }\r\n    });\r\n}\r\n\r\nfunction download(file, obj, callback) {\r\n    if (!file) return;\r\n    const { id, local } = file;\r\n\r\n    const blob = FileStore.getBlob(id);\r\n    if (blob) {\r\n        return;\r\n    }\r\n\r\n    if (local.is_downloading_completed) {\r\n        const store = FileStore.getStore();\r\n\r\n        FileStore.getLocalFile(store, file, null, callback, () => {\r\n            if (local.can_be_downloaded) {\r\n                FileStore.getRemoteFile(file.id, FILE_PRIORITY, obj);\r\n            }\r\n        });\r\n        return;\r\n    }\r\n\r\n    if (local.can_be_downloaded) {\r\n        FileStore.getRemoteFile(id, FILE_PRIORITY, obj);\r\n    }\r\n}\r\n\r\nfunction getMediaPreviewFile(chatId, messageId) {\r\n    const message = MessageStore.get(chatId, messageId);\r\n    if (!message) return [0, 0, null];\r\n\r\n    const { content } = message;\r\n    if (!content) return [0, 0, null];\r\n\r\n    switch (content['@type']) {\r\n        case 'messageAnimation': {\r\n            const { animation } = content;\r\n            if (animation && animation.thumbnail) {\r\n                return [animation.thumbnail.width, animation.thumbnail.height, animation.thumbnail.photo];\r\n            }\r\n            break;\r\n        }\r\n        case 'messageChatChangePhoto': {\r\n            return getMediaFile(chatId, messageId, PHOTO_SIZE);\r\n        }\r\n        case 'messageDocument': {\r\n            const { document } = content;\r\n            if (document) {\r\n                return [50, 50, document.document];\r\n            }\r\n            break;\r\n        }\r\n        case 'messagePhoto': {\r\n            return getMediaFile(chatId, messageId, PHOTO_SIZE);\r\n        }\r\n        case 'messageText': {\r\n            const { web_page } = content;\r\n            if (web_page) {\r\n                const { animation, document, video, photo } = web_page;\r\n\r\n                if (animation && animation.thumbnail) {\r\n                    return [animation.thumbnail.width, animation.thumbnail.height, animation.thumbnail.photo];\r\n                }\r\n\r\n                if (document) {\r\n                    return [50, 50, document.document];\r\n                }\r\n\r\n                if (video && video.thumbnail) {\r\n                    return [video.thumbnail.width, video.thumbnail.height, video.thumbnail.photo];\r\n                }\r\n\r\n                if (photo) {\r\n                    return getMediaFile(chatId, messageId, PHOTO_SIZE);\r\n                }\r\n            }\r\n            break;\r\n        }\r\n        case 'messageVideo': {\r\n            const { video } = content;\r\n            if (video.thumbnail) {\r\n                return [video.thumbnail.width, video.thumbnail.height, video.thumbnail.photo];\r\n            }\r\n            break;\r\n        }\r\n        default: {\r\n            return [0, 0, null];\r\n        }\r\n    }\r\n\r\n    return [0, 0, null];\r\n}\r\n\r\nfunction getMediaFile(chatId, messageId, size) {\r\n    if (!size) return [0, 0, null];\r\n    const message = MessageStore.get(chatId, messageId);\r\n    if (!message) return [0, 0, null];\r\n\r\n    const { content } = message;\r\n    if (!content) return [0, 0, null];\r\n\r\n    switch (content['@type']) {\r\n        case 'messageAnimation': {\r\n            const { animation } = content;\r\n            if (animation) {\r\n                return [animation.width, animation.height, animation.animation];\r\n            }\r\n            break;\r\n        }\r\n        case 'messageChatChangePhoto': {\r\n            const { photo } = content;\r\n            if (photo) {\r\n                const photoSize = getSize(photo.sizes, size);\r\n                if (photoSize) {\r\n                    return [photoSize.width, photoSize.height, photoSize.photo];\r\n                }\r\n            }\r\n            break;\r\n        }\r\n        case 'messageDocument': {\r\n            const { document } = content;\r\n            if (document) {\r\n                return [50, 50, document.document];\r\n            }\r\n            break;\r\n        }\r\n        case 'messagePhoto': {\r\n            const { photo } = content;\r\n            if (photo) {\r\n                const photoSize = getSize(photo.sizes, size);\r\n                if (photoSize) {\r\n                    return [photoSize.width, photoSize.height, photoSize.photo];\r\n                }\r\n            }\r\n            break;\r\n        }\r\n        case 'messageText': {\r\n            const { web_page } = content;\r\n            if (web_page) {\r\n                const { animation, document, photo, video } = web_page;\r\n                if (animation) {\r\n                    return [animation.width, animation.height, animation.animation];\r\n                }\r\n\r\n                if (document) {\r\n                    return [50, 50, document.document];\r\n                }\r\n\r\n                if (photo) {\r\n                    const photoSize = getSize(photo.sizes, size);\r\n                    if (photoSize) {\r\n                        return [photoSize.width, photoSize.height, photoSize.photo];\r\n                    }\r\n                    break;\r\n                }\r\n\r\n                if (video) {\r\n                    return [video.width, video.height, video.video];\r\n                }\r\n            }\r\n            break;\r\n        }\r\n        case 'messageVideo': {\r\n            const { video } = content;\r\n            if (video) {\r\n                return [video.width, video.height, video.video];\r\n            }\r\n            break;\r\n        }\r\n        default: {\r\n        }\r\n    }\r\n\r\n    return [0, 0, null];\r\n}\r\n\r\nfunction cancelLoadMediaViewerContent(messages) {\r\n    if (!messages) return;\r\n    if (!messages.length) return;\r\n\r\n    for (let i = 0; i < messages.length; i++) {\r\n        let message = messages[i];\r\n        const { content } = message;\r\n        if (content) {\r\n            switch (content['@type']) {\r\n                case 'messagePhoto': {\r\n                    const { photo } = content;\r\n                    if (!photo) break;\r\n\r\n                    // preview\r\n                    /*let [previewId, previewPid, previewIdbKey] = getPhotoPreviewFile(message);\r\n                    if (previewPid) {\r\n                        let preview = this.getPreviewPhotoSize(message.content.photo.sizes);\r\n                        if (!preview.blob){\r\n                            FileStore.getLocalFile(store, preview, null,\r\n                                () => MessageStore.updateMessagePhoto(message.id),\r\n                                () => { if (loadRemote)  FileStore.getRemoteFile(previewId, 2, message); },\r\n                                'load_contents_preview_',\r\n                                message.id);\r\n\r\n                        }\r\n                    }*/\r\n\r\n                    const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\r\n                    if (!photoSize) break;\r\n\r\n                    const { photo: file } = photoSize;\r\n                    const blob = file.blob || FileStore.getBlob(file.id);\r\n                    if (blob) return;\r\n\r\n                    FileStore.cancelGetRemoteFile(file.id);\r\n                    break;\r\n                }\r\n                case 'messageVideo': {\r\n                    const { video } = content;\r\n                    if (!video) break;\r\n\r\n                    if (video.thumbnail) {\r\n                        const { photo: file } = video.thumbnail;\r\n                        const blob = file.blob || FileStore.getBlob(file.id);\r\n                        if (blob) break;\r\n\r\n                        FileStore.cancelGetRemoteFile(file.id);\r\n                    }\r\n\r\n                    const { video: file } = video;\r\n                    if (!file) break;\r\n\r\n                    const blob = file.blob || FileStore.getBlob(file.id);\r\n                    if (blob) break;\r\n\r\n                    FileStore.cancelGetRemoteFile(file.id);\r\n                    break;\r\n                }\r\n                case 'messageText': {\r\n                    const { web_page } = message.content;\r\n                    if (web_page) {\r\n                        const { video } = web_page;\r\n\r\n                        if (video) {\r\n                            if (video.thumbnail) {\r\n                                const { photo: file } = video.thumbnail;\r\n                                const blob = file.blob || FileStore.getBlob(file.id);\r\n                                if (blob) break;\r\n\r\n                                FileStore.cancelGetRemoteFile(file.id);\r\n                            }\r\n\r\n                            const { video: file } = video;\r\n                            if (!file) break;\r\n\r\n                            const blob = file.blob || FileStore.getBlob(file.id);\r\n                            if (blob) break;\r\n\r\n                            FileStore.cancelGetRemoteFile(file.id);\r\n                        }\r\n                    }\r\n\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction loadMediaViewerContent(messages, useSizeLimit = false) {\r\n    if (!messages) return;\r\n    if (!messages.length) return;\r\n\r\n    const store = FileStore.getStore();\r\n\r\n    for (let i = 0; i < messages.length; i++) {\r\n        let message = messages[i];\r\n        const { content } = message;\r\n        if (content) {\r\n            switch (content['@type']) {\r\n                case 'messageAnimation': {\r\n                    const { animation } = content;\r\n\r\n                    loadAnimationContent(store, animation, message, useSizeLimit);\r\n                    loadAnimationThumbnailContent(store, animation, message);\r\n                    break;\r\n                }\r\n                case 'messageChatChangePhoto': {\r\n                    const { photo } = content;\r\n\r\n                    loadBigPhotoContent(store, photo, message);\r\n                    break;\r\n                }\r\n                case 'messageDocument': {\r\n                    const { document } = content;\r\n\r\n                    loadDocumentContent(store, document, message, useSizeLimit);\r\n                    break;\r\n                }\r\n                case 'messagePhoto': {\r\n                    const { photo } = content;\r\n\r\n                    loadBigPhotoContent(store, photo, message);\r\n                    break;\r\n                }\r\n                case 'messageText': {\r\n                    const { web_page } = message.content;\r\n                    if (!web_page) {\r\n                        break;\r\n                    }\r\n\r\n                    const { animation, document, photo, video } = web_page;\r\n                    let loadPhoto = true;\r\n\r\n                    if (animation) {\r\n                        loadAnimationContent(store, animation, message, useSizeLimit);\r\n                        loadPhoto = !loadAnimationThumbnailContent(store, animation, message);\r\n                    }\r\n\r\n                    if (document) {\r\n                        loadDocumentContent(store, document, message, useSizeLimit);\r\n                        loadPhoto = false;\r\n                    }\r\n\r\n                    if (video) {\r\n                        loadVideoContent(store, video, message, useSizeLimit);\r\n                        loadPhoto = !loadVideoThumbnailContent(store, video, message);\r\n                    }\r\n\r\n                    if (loadPhoto) {\r\n                        loadBigPhotoContent(store, photo, message);\r\n                    }\r\n\r\n                    break;\r\n                }\r\n                case 'messageVideo': {\r\n                    const { video } = content;\r\n\r\n                    loadVideoThumbnailContent(store, video, message);\r\n                    loadVideoContent(store, video, message, useSizeLimit);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction cancelPreloadMediaViewerContent(index, history) {\r\n    if (!history.length) return;\r\n\r\n    const messages = [];\r\n    if (index > 0) {\r\n        messages.push(history[index - 1]);\r\n    }\r\n    if (index < history.length - 1) {\r\n        messages.push(history[index + 1]);\r\n    }\r\n\r\n    cancelLoadMediaViewerContent([history[index]]);\r\n    cancelLoadMediaViewerContent(messages);\r\n}\r\n\r\nfunction preloadMediaViewerContent(index, history) {\r\n    if (!history.length) return;\r\n\r\n    const messages = [];\r\n    if (index > 0) {\r\n        messages.push(history[index - 1]);\r\n    }\r\n    if (index < history.length - 1) {\r\n        messages.push(history[index + 1]);\r\n    }\r\n\r\n    loadMediaViewerContent([history[index]], false);\r\n    loadMediaViewerContent(messages, true);\r\n}\r\n\r\nfunction loadUserFileContent(store, file, userId) {\r\n    if (!file) return;\r\n\r\n    const { id } = file;\r\n    file = FileStore.get(id) || file;\r\n\r\n    const user = UserStore.get(userId);\r\n    if (!user) return;\r\n\r\n    const blob = file.blob || FileStore.getBlob(id);\r\n    if (blob) return;\r\n\r\n    FileStore.getLocalFile(\r\n        store,\r\n        file,\r\n        null,\r\n        () => FileStore.updateUserPhotoBlob(userId, id),\r\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, user)\r\n    );\r\n}\r\n\r\nfunction loadChatFileContent(store, file, chatId) {\r\n    if (!file) return;\r\n\r\n    const { id } = file;\r\n    file = FileStore.get(id) || file;\r\n\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return;\r\n\r\n    const blob = file.blob || FileStore.getBlob(id);\r\n    if (blob) return;\r\n\r\n    FileStore.getLocalFile(\r\n        store,\r\n        file,\r\n        null,\r\n        () => FileStore.updateChatPhotoBlob(chatId, id),\r\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, chat)\r\n    );\r\n}\r\n\r\nfunction loadProfileMediaViewerContent(chatId, photos) {\r\n    if (!photos) return;\r\n\r\n    const store = FileStore.getStore();\r\n\r\n    photos.forEach(photo => {\r\n        switch (photo['@type']) {\r\n            case 'chatPhoto': {\r\n                const { small, big } = photo;\r\n\r\n                loadChatFileContent(store, small, chatId);\r\n                loadChatFileContent(store, big, chatId);\r\n                break;\r\n            }\r\n            case 'profilePhoto': {\r\n                const userId = getChatUserId(chatId);\r\n\r\n                const { small, big } = photo;\r\n\r\n                loadUserFileContent(store, small, userId);\r\n                loadUserFileContent(store, big, userId);\r\n                break;\r\n            }\r\n            case 'userProfilePhoto': {\r\n                photo = getProfilePhoto(photo);\r\n                if (!photo) break;\r\n\r\n                const userId = getChatUserId(chatId);\r\n\r\n                const { small, big } = photo;\r\n\r\n                loadUserFileContent(store, small, userId);\r\n                loadUserFileContent(store, big, userId);\r\n                break;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nfunction preloadProfileMediaViewerContent(chatId, index, history) {\r\n    if (!history.length) return;\r\n\r\n    const items = [];\r\n    if (index > 0) {\r\n        items.push(history[index - 1]);\r\n    }\r\n    if (index < history.length - 1) {\r\n        items.push(history[index + 1]);\r\n    }\r\n    if (index >= 0 && index < history.length) {\r\n        items.push(history[index]);\r\n    }\r\n\r\n    loadProfileMediaViewerContent(chatId, items);\r\n}\r\n\r\nfunction loadUserContent(store, userId) {\r\n    const user = UserStore.get(userId);\r\n    if (!user) return;\r\n\r\n    const { profile_photo } = user;\r\n    if (!profile_photo) return;\r\n\r\n    const { small: file } = profile_photo;\r\n\r\n    loadUserFileContent(store, file, userId);\r\n}\r\n\r\nfunction loadUsersContent(store, ids) {\r\n    if (!ids) return;\r\n\r\n    ids.forEach(id => loadUserContent(store, id));\r\n}\r\n\r\nfunction loadChatContent(store, chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return;\r\n\r\n    const { photo } = chat;\r\n    if (!photo) return;\r\n\r\n    const { small: file } = photo;\r\n\r\n    loadChatFileContent(store, file, chatId);\r\n}\r\n\r\nfunction loadChatsContent(store, ids) {\r\n    if (!ids) return;\r\n\r\n    ids.forEach(id => loadChatContent(store, id));\r\n}\r\n\r\nfunction loadDraftContent(store, chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return;\r\n\r\n    const { draft_message } = chat;\r\n    if (!draft_message) return;\r\n\r\n    const { reply_to_message_id } = draft_message;\r\n    if (!reply_to_message_id) return;\r\n\r\n    loadReplies(store, chatId, [reply_to_message_id]);\r\n}\r\n\r\nfunction loadStickerSetContent(store, stickerSet) {\r\n    if (!stickerSet) return;\r\n\r\n    const { stickers } = stickerSet;\r\n    loadStickersContent(store, stickers);\r\n}\r\n\r\nfunction loadStickersContent(store, stickers) {\r\n    if (!stickers) return;\r\n\r\n    stickers.forEach(sticker => {\r\n        loadStickerThumbnailContent(store, sticker, null);\r\n    });\r\n}\r\n\r\nfunction isGifMimeType(mimeType) {\r\n    return mimeType && mimeType.toLowerCase() === 'image/gif';\r\n}\r\n\r\nfunction getSrc(file) {\r\n    const blob = getBlob(file);\r\n\r\n    return FileStore.getBlobUrl(blob) || '';\r\n}\r\n\r\nfunction getBlob(file) {\r\n    return file ? FileStore.getBlob(file.id) || file.blob : null;\r\n}\r\n\r\nfunction getDownloadedSize(file) {\r\n    if (!file) return '0';\r\n    if (!file.local) return '0';\r\n    if (!file.local.is_downloading_active) return '0';\r\n\r\n    return getSizeString(file.local.downloaded_size);\r\n}\r\n\r\nfunction getUploadedSize(file) {\r\n    if (!file) return '0';\r\n    if (!file.remote) return '0';\r\n    if (!file.remote.is_uploading_active) return '0';\r\n\r\n    return getSizeString(file.remote.uploaded_size);\r\n}\r\n\r\nfunction getExtension(fileName) {\r\n    if (!fileName) {\r\n        return '';\r\n    }\r\n\r\n    const parts = fileName.split('.');\r\n    if (parts.length === 1 || (parts[0] === '' && parts.length === 2)) {\r\n        return '';\r\n    }\r\n    return parts.pop().toLowerCase();\r\n}\r\n\r\nexport {\r\n    getFileSize,\r\n    getSizeString,\r\n    saveData,\r\n    saveBlob,\r\n    loadMessageContents,\r\n    loadMediaViewerContent,\r\n    preloadMediaViewerContent,\r\n    cancelLoadMediaViewerContent,\r\n    cancelPreloadMediaViewerContent,\r\n    loadProfileMediaViewerContent,\r\n    preloadProfileMediaViewerContent,\r\n    loadDraftContent,\r\n    loadUserContent,\r\n    loadChatContent,\r\n    loadChatsContent,\r\n    loadUsersContent,\r\n    loadStickerContent,\r\n    loadStickerThumbnailContent,\r\n    loadStickersContent,\r\n    loadStickerSetContent,\r\n    saveOrDownload,\r\n    download,\r\n    getMediaFile,\r\n    getMediaPreviewFile,\r\n    isGifMimeType,\r\n    getSrc,\r\n    getBlob,\r\n    getDownloadedSize,\r\n    getUploadedSize,\r\n    getExtension\r\n};\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport dateFormat from 'dateformat';\r\nimport { getUserFullName, getUserShortName, getUserStatus, isUserOnline } from './User';\r\nimport { getSupergroupStatus } from './Supergroup';\r\nimport { getBasicGroupStatus } from './BasicGroup';\r\nimport { getLetters } from './Common';\r\nimport { getContent } from './Message';\r\nimport { isServiceMessage } from './ServiceMessage';\r\nimport UserStore from '../Stores/UserStore';\r\nimport ChatStore from '../Stores/ChatStore';\r\nimport BasicGroupStore from '../Stores/BasicGroupStore';\r\nimport SupergroupStore from '../Stores/SupergroupStore';\r\nimport ApplicationStore from '../Stores/ApplicationStore';\r\nimport TdLibController from '../Controllers/TdLibController';\r\nimport InputBoxControl from '../Components/ColumnMiddle/Footer';\r\n\r\nfunction getGroupChatTypingString(inputTypingManager) {\r\n    if (!inputTypingManager) return null;\r\n\r\n    let size = inputTypingManager.actions.size;\r\n    if (size > 2) {\r\n        return `${size} people are typing`;\r\n    } else if (size > 1) {\r\n        let firstUser;\r\n        let secondUser;\r\n        for (let userId of inputTypingManager.actions.keys()) {\r\n            if (!firstUser) {\r\n                firstUser = UserStore.get(userId);\r\n            } else if (!secondUser) {\r\n                secondUser = UserStore.get(userId);\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!firstUser || !secondUser) {\r\n            return `${size} people are typing`;\r\n        }\r\n\r\n        firstUser = firstUser.first_name ? firstUser.first_name : firstUser.second_name;\r\n        secondUser = secondUser.first_name ? secondUser.first_name : secondUser.second_name;\r\n\r\n        if (!firstUser || !secondUser) {\r\n            return `${size} people are typing`;\r\n        }\r\n\r\n        return `${firstUser} and ${secondUser} are typing`;\r\n    } else {\r\n        let firstUser;\r\n        if (inputTypingManager.actions.size >= 1) {\r\n            for (let userId of inputTypingManager.actions.keys()) {\r\n                if (!firstUser) {\r\n                    firstUser = UserStore.get(userId);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!firstUser) {\r\n                return `1 person is typing`;\r\n            }\r\n\r\n            firstUser = firstUser.first_name ? firstUser.first_name : firstUser.second_name;\r\n\r\n            if (!firstUser) {\r\n                return `1 person is typing`;\r\n            }\r\n\r\n            let action = inputTypingManager.actions.values().next().value.action;\r\n            switch (action['@type']) {\r\n                case 'chatActionRecordingVideo':\r\n                    return `${firstUser} is recording a video`;\r\n                case 'chatActionRecordingVideoNote':\r\n                    return `${firstUser} is recording a video message`;\r\n                case 'chatActionRecordingVoiceNote':\r\n                    return `${firstUser} is recording a voice message`;\r\n                case 'chatActionStartPlayingGame':\r\n                    return `${firstUser} is playing a game`;\r\n                case 'chatActionUploadingDocument':\r\n                    return `${firstUser} is sending a file`;\r\n                case 'chatActionUploadingPhoto':\r\n                    return `${firstUser} is sending a photo`;\r\n                case 'chatActionUploadingVideo':\r\n                    return `${firstUser} is sending a video`;\r\n                case 'chatActionUploadingVideoNote':\r\n                    return `${firstUser} is sending a video message`;\r\n                case 'chatActionUploadingVoiceNote':\r\n                    return `${firstUser} is sending a voice message`;\r\n                case 'chatActionChoosingContact':\r\n                case 'chatActionChoosingLocation':\r\n                case 'chatActionTyping':\r\n                default:\r\n                    return `${firstUser} is typing`;\r\n            }\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction getPrivateChatTypingString(inputTypingManager) {\r\n    if (!inputTypingManager) return null;\r\n\r\n    if (inputTypingManager.actions.size >= 1) {\r\n        let action = inputTypingManager.actions.values().next().value.action;\r\n        switch (action['@type']) {\r\n            case 'chatActionRecordingVideo':\r\n                return 'recording a video';\r\n            case 'chatActionRecordingVideoNote':\r\n                return 'recording a video message';\r\n            case 'chatActionRecordingVoiceNote':\r\n                return 'recording a voice message';\r\n            case 'chatActionStartPlayingGame':\r\n                return 'playing a game';\r\n            case 'chatActionUploadingDocument':\r\n                return 'sending a file';\r\n            case 'chatActionUploadingPhoto':\r\n                return 'sending a photo';\r\n            case 'chatActionUploadingVideo':\r\n                return 'sending a video';\r\n            case 'chatActionUploadingVideoNote':\r\n                return 'sending a video message';\r\n            case 'chatActionUploadingVoiceNote':\r\n                return 'sending a voice message';\r\n            case 'chatActionChoosingContact':\r\n            case 'chatActionChoosingLocation':\r\n            case 'chatActionTyping':\r\n            default:\r\n                return 'typing';\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction getChatTypingString(chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return null;\r\n    if (!chat.type) return null;\r\n\r\n    let typingManager = ChatStore.getTypingManager(chat.id);\r\n    if (!typingManager) return null;\r\n\r\n    switch (chat.type['@type']) {\r\n        case 'chatTypePrivate':\r\n        case 'chatTypeSecret': {\r\n            const typingString = getPrivateChatTypingString(typingManager);\r\n            return typingString ? typingString + '...' : null;\r\n        }\r\n        case 'chatTypeBasicGroup':\r\n        case 'chatTypeSupergroup': {\r\n            const typingString = getGroupChatTypingString(typingManager);\r\n            return typingString ? typingString + '...' : null;\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction getMessageSenderFullName(message) {\r\n    if (!message) return null;\r\n    if (isServiceMessage(message)) return null;\r\n    if (!message.sender_user_id) return null;\r\n\r\n    const user = UserStore.get(message.sender_user_id);\r\n    if (!user) return null;\r\n\r\n    return getUserFullName(user);\r\n}\r\n\r\nfunction getMessageSenderName(message) {\r\n    if (!message) return null;\r\n    if (isServiceMessage(message)) return null;\r\n\r\n    const chat = ChatStore.get(message.chat_id);\r\n    if (chat && chat.type['@type'] !== 'chatTypeBasicGroup' && chat.type['@type'] !== 'chatTypeSupergroup') {\r\n        return null;\r\n    }\r\n\r\n    return getUserShortName(message.sender_user_id);\r\n}\r\n\r\nfunction getLastMessageSenderName(chat) {\r\n    if (!chat) return null;\r\n\r\n    return getMessageSenderName(chat.last_message);\r\n}\r\n\r\nfunction getLastMessageContent(chat, t = key => key) {\r\n    if (!chat) return null;\r\n\r\n    const { last_message } = chat;\r\n    if (!last_message) return null;\r\n\r\n    return getContent(last_message, t);\r\n}\r\n\r\nfunction getChatUnreadMessageIcon(chat) {\r\n    if (!chat) return false;\r\n    if (!chat.last_message) return false;\r\n\r\n    return chat.last_message.is_outgoing && chat.last_message.id > chat.last_read_outbox_message_id;\r\n}\r\n\r\nfunction getChatUnreadCount(chat) {\r\n    if (!chat) return null;\r\n    if (!chat.unread_count) return null;\r\n\r\n    return chat.unread_count;\r\n}\r\n\r\nfunction getChatUnreadMentionCount(chat) {\r\n    if (!chat) return null;\r\n    if (!chat.unread_mention_count) return null;\r\n\r\n    return chat.unread_mention_count;\r\n}\r\n\r\nfunction isChatMuted(chat) {\r\n    return getChatMuteFor(chat) > 0;\r\n}\r\n\r\nfunction getChatMuteFor(chat) {\r\n    if (!chat) return 0;\r\n\r\n    if (chat.use_default_mute_for) {\r\n        switch (chat.type) {\r\n            case 'chatTypePrivate':\r\n            case 'chatTypeSecret': {\r\n                const notificationSettings = ApplicationStore.getNotificationSettings(\r\n                    'notificationSettingsScopePrivateChats'\r\n                );\r\n                if (notificationSettings) {\r\n                    return notificationSettings.mute_for;\r\n                }\r\n\r\n                return 0;\r\n            }\r\n            case 'chatTypeBasicGroup':\r\n            case 'chatTypeSupergroup': {\r\n                const notificationSettings = ApplicationStore.getNotificationSettings(\r\n                    'notificationSettingsScopeGroupChats'\r\n                );\r\n                if (notificationSettings) {\r\n                    return notificationSettings.mute_for;\r\n                }\r\n\r\n                return 0;\r\n            }\r\n        }\r\n    } else {\r\n        if (!chat.notification_settings) return 0;\r\n\r\n        return chat.notification_settings.mute_for;\r\n    }\r\n}\r\n\r\nfunction getMessageDate(message) {\r\n    const date = new Date(message.date * 1000);\r\n\r\n    const dayStart = new Date();\r\n    dayStart.setHours(0, 0, 0, 0);\r\n    if (date > dayStart) {\r\n        return dateFormat(date, 'H:MM');\r\n    }\r\n\r\n    const now = new Date();\r\n    const day = now.getDay();\r\n    const weekStart = now.getDate() - day + (day === 0 ? -6 : 1);\r\n    const monday = new Date(now.setDate(weekStart));\r\n    if (date > monday) {\r\n        return dateFormat(date, 'ddd');\r\n    }\r\n\r\n    return dateFormat(date, 'd.mm.yyyy');\r\n}\r\n\r\nfunction getLastMessageDate(chat) {\r\n    if (!chat) return null;\r\n    if (!chat.last_message) return null;\r\n    if (!chat.last_message.date) return null;\r\n    if (showChatDraft(chat.id)) return null;\r\n\r\n    return getMessageDate(chat.last_message);\r\n}\r\n\r\nfunction getChatSubtitleWithoutTyping(chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return null;\r\n\r\n    const { type } = chat;\r\n    if (!type) return null;\r\n\r\n    switch (type['@type']) {\r\n        case 'chatTypeBasicGroup': {\r\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\r\n            if (basicGroup) {\r\n                return getBasicGroupStatus(basicGroup, chatId);\r\n            }\r\n\r\n            break;\r\n        }\r\n        case 'chatTypePrivate':\r\n        case 'chatTypeSecret': {\r\n            const user = UserStore.get(type.user_id);\r\n            if (user) {\r\n                return getUserStatus(user);\r\n            }\r\n\r\n            break;\r\n        }\r\n        case 'chatTypeSupergroup': {\r\n            const supergroup = SupergroupStore.get(type.supergroup_id);\r\n            if (supergroup) {\r\n                return getSupergroupStatus(supergroup, chatId);\r\n            }\r\n\r\n            break;\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction getChatSubtitle(chatId, showSavedMessages = false) {\r\n    if (isMeChat(chatId) && showSavedMessages) {\r\n        return null;\r\n    }\r\n\r\n    const chatTypingString = getChatTypingString(chatId);\r\n    if (chatTypingString) {\r\n        return chatTypingString;\r\n    }\r\n\r\n    return getChatSubtitleWithoutTyping(chatId);\r\n}\r\n\r\nfunction getChatLetters(chat) {\r\n    if (!chat) return null;\r\n\r\n    let title = chat.title || 'Deleted account';\r\n    if (title.length === 0) return null;\r\n\r\n    let letters = getLetters(title);\r\n    if (letters && letters.length > 0) {\r\n        return letters;\r\n    }\r\n\r\n    return chat.title.charAt(0);\r\n}\r\n\r\nfunction isAccentChatSubtitleWithoutTyping(chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return false;\r\n    if (!chat.type) return false;\r\n\r\n    switch (chat.type['@type']) {\r\n        case 'chatTypeBasicGroup': {\r\n            return false;\r\n        }\r\n        case 'chatTypePrivate':\r\n        case 'chatTypeSecret': {\r\n            const user = UserStore.get(chat.type.user_id);\r\n            if (user) {\r\n                return isUserOnline(user);\r\n            }\r\n\r\n            break;\r\n        }\r\n        case 'chatTypeSupergroup': {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction isAccentChatSubtitle(chatId) {\r\n    const typingString = getChatTypingString(chatId);\r\n    if (typingString) return false;\r\n\r\n    return isAccentChatSubtitleWithoutTyping(chatId);\r\n}\r\n\r\nfunction getChatUsername(chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return null;\r\n    if (!chat.type) return null;\r\n\r\n    switch (chat.type['@type']) {\r\n        case 'chatTypeBasicGroup': {\r\n            return null;\r\n        }\r\n        case 'chatTypePrivate':\r\n        case 'chatTypeSecret': {\r\n            const user = UserStore.get(chat.type.user_id);\r\n            if (user) {\r\n                return user.username;\r\n            }\r\n\r\n            break;\r\n        }\r\n        case 'chatTypeSupergroup': {\r\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\r\n            if (supergroup) {\r\n                return supergroup.username;\r\n            }\r\n            break;\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction getChatPhoneNumber(chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return null;\r\n    if (!chat.type) return null;\r\n\r\n    switch (chat.type['@type']) {\r\n        case 'chatTypeBasicGroup': {\r\n            return null;\r\n        }\r\n        case 'chatTypePrivate':\r\n        case 'chatTypeSecret': {\r\n            const user = UserStore.get(chat.type.user_id);\r\n            if (user) {\r\n                return user.phone_number;\r\n            }\r\n\r\n            break;\r\n        }\r\n        case 'chatTypeSupergroup': {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction getChatBio(chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return null;\r\n    if (!chat.type) return null;\r\n\r\n    switch (chat.type['@type']) {\r\n        case 'chatTypeBasicGroup': {\r\n            return null;\r\n        }\r\n        case 'chatTypePrivate':\r\n        case 'chatTypeSecret': {\r\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\r\n            if (fullInfo) {\r\n                return fullInfo.bio;\r\n            }\r\n\r\n            break;\r\n        }\r\n        case 'chatTypeSupergroup': {\r\n            const fullInfo = SupergroupStore.getFullInfo(chat.type.supergroup_id);\r\n            if (fullInfo) {\r\n                return fullInfo.description;\r\n            }\r\n\r\n            break;\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction isPrivateChat(chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return false;\r\n    if (!chat.type) return false;\r\n\r\n    switch (chat.type['@type']) {\r\n        case 'chatTypeBasicGroup':\r\n        case 'chatTypeSupergroup': {\r\n            return false;\r\n        }\r\n        case 'chatTypePrivate':\r\n        case 'chatTypeSecret': {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction isGroupChat(chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return false;\r\n    if (!chat.type) return false;\r\n\r\n    switch (chat.type['@type']) {\r\n        case 'chatTypeBasicGroup':\r\n        case 'chatTypeSupergroup': {\r\n            return true;\r\n        }\r\n        case 'chatTypePrivate':\r\n        case 'chatTypeSecret': {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction isChannelChat(chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return false;\r\n    if (!chat.type) return false;\r\n\r\n    switch (chat.type['@type']) {\r\n        case 'chatTypeSupergroup': {\r\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\r\n\r\n            return supergroup && supergroup.is_channel;\r\n        }\r\n        case 'chatTypeBasicGroup':\r\n        case 'chatTypePrivate':\r\n        case 'chatTypeSecret': {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction isChatMember(chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return false;\r\n    if (!chat.type) return false;\r\n\r\n    switch (chat.type['@type']) {\r\n        case 'chatTypeSupergroup': {\r\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\r\n            if (supergroup && supergroup.status) {\r\n                switch (supergroup.status['@type']) {\r\n                    case 'chatMemberStatusAdministrator': {\r\n                        return true;\r\n                    }\r\n                    case 'chatMemberStatusBanned': {\r\n                        return false;\r\n                    }\r\n                    case 'chatMemberStatusCreator': {\r\n                        return true;\r\n                    }\r\n                    case 'chatMemberStatusLeft': {\r\n                        return false;\r\n                    }\r\n                    case 'chatMemberStatusMember': {\r\n                        return true;\r\n                    }\r\n                    case 'chatMemberStatusRestricted': {\r\n                        return supergroup.status.is_member;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        case 'chatTypeBasicGroup': {\r\n            const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\r\n            if (basicGroup && basicGroup.status) {\r\n                switch (basicGroup.status['@type']) {\r\n                    case 'chatMemberStatusAdministrator': {\r\n                        return true;\r\n                    }\r\n                    case 'chatMemberStatusBanned': {\r\n                        return false;\r\n                    }\r\n                    case 'chatMemberStatusCreator': {\r\n                        return true;\r\n                    }\r\n                    case 'chatMemberStatusLeft': {\r\n                        return false;\r\n                    }\r\n                    case 'chatMemberStatusMember': {\r\n                        return true;\r\n                    }\r\n                    case 'chatMemberStatusRestricted': {\r\n                        return basicGroup.status.is_member;\r\n                    }\r\n                }\r\n            }\r\n            break;\r\n        }\r\n        case 'chatTypePrivate':\r\n        case 'chatTypeSecret': {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction getChatTitle(chatId, showSavedMessages = false, t = key => key) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return null;\r\n\r\n    if (isMeChat(chatId) && showSavedMessages) {\r\n        return t('SavedMessages');\r\n    }\r\n\r\n    return chat.title || t('HiddenName');\r\n}\r\n\r\nfunction isMeChat(chatId) {\r\n    const fallbackValue = false;\r\n\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return fallbackValue;\r\n\r\n    switch (chat.type['@type']) {\r\n        case 'chatTypeBasicGroup':\r\n        case 'chatTypeSupergroup': {\r\n            return false;\r\n        }\r\n        case 'chatTypeSecret':\r\n        case 'chatTypePrivate': {\r\n            return UserStore.getMyId() === chat.type.user_id;\r\n        }\r\n    }\r\n\r\n    return fallbackValue;\r\n}\r\n\r\nfunction getGroupChatMembers(chatId) {\r\n    const fallbackValue = [];\r\n\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return fallbackValue;\r\n\r\n    switch (chat.type['@type']) {\r\n        case 'chatTypeBasicGroup': {\r\n            const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\r\n            if (fullInfo) {\r\n                return fullInfo.members || fallbackValue;\r\n            }\r\n\r\n            break;\r\n        }\r\n        case 'chatTypeSupergroup': {\r\n            break;\r\n        }\r\n        case 'chatTypeSecret':\r\n        case 'chatTypePrivate': {\r\n            break;\r\n        }\r\n    }\r\n\r\n    return fallbackValue;\r\n}\r\n\r\nfunction getChatFullInfo(chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return;\r\n    if (!chat.type) return;\r\n\r\n    switch (chat.type['@type']) {\r\n        case 'chatTypePrivate': {\r\n            TdLibController.send({\r\n                '@type': 'getUserFullInfo',\r\n                user_id: chat.type.user_id\r\n            });\r\n            break;\r\n        }\r\n        case 'chatTypeSecret': {\r\n            TdLibController.send({\r\n                '@type': 'getUserFullInfo',\r\n                user_id: chat.type.user_id\r\n            });\r\n            break;\r\n        }\r\n        case 'chatTypeBasicGroup': {\r\n            TdLibController.send({\r\n                '@type': 'getBasicGroupFullInfo',\r\n                basic_group_id: chat.type.basic_group_id\r\n            });\r\n            break;\r\n        }\r\n        case 'chatTypeSupergroup': {\r\n            TdLibController.send({\r\n                '@type': 'getSupergroupFullInfo',\r\n                supergroup_id: chat.type.supergroup_id\r\n            });\r\n            break;\r\n        }\r\n    }\r\n}\r\n\r\nfunction hasBasicGroupId(chatId, basicGroupId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return false;\r\n\r\n    const { type } = chat;\r\n\r\n    return type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === basicGroupId;\r\n}\r\n\r\nfunction isSupergroup(chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return false;\r\n\r\n    const { type } = chat;\r\n\r\n    return type && type['@type'] === 'chatTypeSupergroup';\r\n}\r\n\r\nfunction getSupergroupId(chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return false;\r\n\r\n    const { type } = chat;\r\n\r\n    if (type && type['@type'] === 'chatTypeSupergroup') {\r\n        return type.supergroup_id;\r\n    }\r\n\r\n    return 0;\r\n}\r\n\r\nfunction hasSupergroupId(chatId, supergroupId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return false;\r\n\r\n    const { type } = chat;\r\n\r\n    return isSupergroup(chatId) && type.supergroup_id === supergroupId;\r\n}\r\n\r\nfunction hasUserId(chatId, userId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return false;\r\n\r\n    const { type } = chat;\r\n\r\n    return (\r\n        type && (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') && type.user_id === userId\r\n    );\r\n}\r\n\r\nfunction getChatUserId(chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return 0;\r\n\r\n    const { type } = chat;\r\n\r\n    return type && (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') ? type.user_id : 0;\r\n}\r\n\r\nfunction getPhotoFromChat(chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return null;\r\n\r\n    if (isPrivateChat(chatId)) {\r\n        const user = UserStore.get(getChatUserId(chatId));\r\n        if (user) {\r\n            return user.profile_photo;\r\n        }\r\n    }\r\n\r\n    return chat.photo;\r\n}\r\n\r\nfunction canSendFiles(chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return false;\r\n    if (!chat.type) return false;\r\n\r\n    switch (chat.type['@type']) {\r\n        case 'chatTypeBasicGroup': {\r\n            const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\r\n            if (basicGroup && basicGroup.status) {\r\n                switch (basicGroup.status['@type']) {\r\n                    case 'chatMemberStatusAdministrator': {\r\n                        return true;\r\n                    }\r\n                    case 'chatMemberStatusBanned': {\r\n                        return false;\r\n                    }\r\n                    case 'chatMemberStatusCreator': {\r\n                        return true;\r\n                    }\r\n                    case 'chatMemberStatusLeft': {\r\n                        return false;\r\n                    }\r\n                    case 'chatMemberStatusMember': {\r\n                        return true;\r\n                    }\r\n                    case 'chatMemberStatusRestricted': {\r\n                        if (basicGroup.status.can_send_media_messages) {\r\n                            return true;\r\n                        } else {\r\n                            return false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            break;\r\n        }\r\n        case 'chatTypePrivate': {\r\n            return true;\r\n        }\r\n        case 'chatTypeSecret': {\r\n            return true;\r\n        }\r\n        case 'chatTypeSupergroup': {\r\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\r\n            if (supergroup && supergroup.status) {\r\n                switch (supergroup.status['@type']) {\r\n                    case 'chatMemberStatusAdministrator': {\r\n                        return true;\r\n                    }\r\n                    case 'chatMemberStatusBanned': {\r\n                        return false;\r\n                    }\r\n                    case 'chatMemberStatusCreator': {\r\n                        return true;\r\n                    }\r\n                    case 'chatMemberStatusLeft': {\r\n                        return false;\r\n                    }\r\n                    case 'chatMemberStatusMember': {\r\n                        if (supergroup.is_channel) {\r\n                            return false;\r\n                        } else {\r\n                            return true;\r\n                        }\r\n                    }\r\n                    case 'chatMemberStatusRestricted': {\r\n                        if (supergroup.status.can_send_media_messages) {\r\n                            return true;\r\n                        } else {\r\n                            return false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction getChatShortTitle(chatId, showSavedMessages = false) {\r\n    if (isMeChat(chatId) && showSavedMessages) {\r\n        return 'Saved Messages';\r\n    }\r\n\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return null;\r\n    if (!chat.type) return null;\r\n\r\n    switch (chat.type['@type']) {\r\n        case 'chatTypeBasicGroup': {\r\n            return chat.title;\r\n        }\r\n        case 'chatTypeSupergroup': {\r\n            return chat.title;\r\n        }\r\n        case 'chatTypePrivate':\r\n        case 'chatTypeSecret': {\r\n            return getUserShortName(chat.type.user_id);\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction getGroupChatMembersCount(chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return null;\r\n    if (!chat.type) return null;\r\n\r\n    switch (chat.type['@type']) {\r\n        case 'chatTypeBasicGroup': {\r\n            const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\r\n            if (basicGroup) {\r\n                return basicGroup.member_count;\r\n            }\r\n\r\n            return 0;\r\n        }\r\n        case 'chatTypeSupergroup': {\r\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\r\n            if (supergroup) {\r\n                return supergroup.member_count;\r\n            }\r\n\r\n            return 0;\r\n        }\r\n        case 'chatTypePrivate':\r\n        case 'chatTypeSecret': {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    return 0;\r\n}\r\n\r\nfunction canClearHistory(chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return false;\r\n    if (!chat.type) return false;\r\n\r\n    switch (chat.type['@type']) {\r\n        case 'chatTypeBasicGroup': {\r\n            return true;\r\n        }\r\n        case 'chatTypeSupergroup': {\r\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\r\n            if (supergroup) {\r\n                return !Boolean(supergroup.username);\r\n            }\r\n\r\n            return true;\r\n        }\r\n        case 'chatTypePrivate':\r\n        case 'chatTypeSecret': {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction canDeleteChat(chatId) {\r\n    return !isMeChat(chatId);\r\n}\r\n\r\nfunction canSendPhotos(chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return false;\r\n\r\n    const { type } = chat;\r\n    if (!type) return false;\r\n\r\n    switch (chat.type['@type']) {\r\n        case 'chatTypeBasicGroup': {\r\n            return true;\r\n        }\r\n        case 'chatTypePrivate': {\r\n            return true;\r\n        }\r\n        case 'chatTypeSecret': {\r\n            return true;\r\n        }\r\n        case 'chatTypeSupergroup': {\r\n            const supergroup = SupergroupStore.get(type.supergroup_id);\r\n            if (supergroup) {\r\n                const { status } = supergroup;\r\n                if (status) {\r\n                    switch (supergroup.status['@type']) {\r\n                        case 'chatMemberStatusAdministrator': {\r\n                            return true;\r\n                        }\r\n                        case 'chatMemberStatusBanned': {\r\n                            return false;\r\n                        }\r\n                        case 'chatMemberStatusCreator': {\r\n                            return true;\r\n                        }\r\n                        case 'chatMemberStatusLeft': {\r\n                            return false;\r\n                        }\r\n                        case 'chatMemberStatusMember': {\r\n                            return !supergroup.is_channel;\r\n                        }\r\n                        case 'chatMemberStatusRestricted': {\r\n                            return status.can_send_media_messages;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction canSendDocuments(chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return false;\r\n\r\n    const { type } = chat;\r\n    if (!type) return false;\r\n\r\n    switch (chat.type['@type']) {\r\n        case 'chatTypeBasicGroup': {\r\n            return true;\r\n        }\r\n        case 'chatTypePrivate': {\r\n            return true;\r\n        }\r\n        case 'chatTypeSecret': {\r\n            return true;\r\n        }\r\n        case 'chatTypeSupergroup': {\r\n            const supergroup = SupergroupStore.get(type.supergroup_id);\r\n            if (supergroup) {\r\n                const { status } = supergroup;\r\n                if (status) {\r\n                    switch (supergroup.status['@type']) {\r\n                        case 'chatMemberStatusAdministrator': {\r\n                            return true;\r\n                        }\r\n                        case 'chatMemberStatusBanned': {\r\n                            return false;\r\n                        }\r\n                        case 'chatMemberStatusCreator': {\r\n                            return true;\r\n                        }\r\n                        case 'chatMemberStatusLeft': {\r\n                            return false;\r\n                        }\r\n                        case 'chatMemberStatusMember': {\r\n                            return !supergroup.is_channel;\r\n                        }\r\n                        case 'chatMemberStatusRestricted': {\r\n                            return status.can_send_media_messages;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction canSendPolls(chatId) {\r\n    return true;\r\n}\r\n\r\nfunction canSendMessages(chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return false;\r\n\r\n    const { type } = chat;\r\n    if (!type) return false;\r\n\r\n    switch (chat.type['@type']) {\r\n        case 'chatTypeBasicGroup': {\r\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\r\n            if (basicGroup && basicGroup.status) {\r\n                switch (basicGroup.status['@type']) {\r\n                    case 'chatMemberStatusAdministrator': {\r\n                        return true;\r\n                    }\r\n                    case 'chatMemberStatusBanned': {\r\n                        return false;\r\n                    }\r\n                    case 'chatMemberStatusCreator': {\r\n                        return true;\r\n                    }\r\n                    case 'chatMemberStatusLeft': {\r\n                        return false;\r\n                    }\r\n                    case 'chatMemberStatusMember': {\r\n                        return true;\r\n                    }\r\n                    case 'chatMemberStatusRestricted': {\r\n                        if (basicGroup.status.can_send_messages) {\r\n                            return true;\r\n                        } else {\r\n                            return false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            break;\r\n        }\r\n        case 'chatTypePrivate': {\r\n            return true;\r\n        }\r\n        case 'chatTypeSecret': {\r\n            return true;\r\n        }\r\n        case 'chatTypeSupergroup': {\r\n            const supergroup = SupergroupStore.get(type.supergroup_id);\r\n            if (supergroup && supergroup.status) {\r\n                switch (supergroup.status['@type']) {\r\n                    case 'chatMemberStatusAdministrator': {\r\n                        return true;\r\n                    }\r\n                    case 'chatMemberStatusBanned': {\r\n                        return false;\r\n                    }\r\n                    case 'chatMemberStatusCreator': {\r\n                        return true;\r\n                    }\r\n                    case 'chatMemberStatusLeft': {\r\n                        return false;\r\n                    }\r\n                    case 'chatMemberStatusMember': {\r\n                        if (supergroup.is_channel) {\r\n                            return false;\r\n                        } else {\r\n                            return true;\r\n                        }\r\n                    }\r\n                    case 'chatMemberStatusRestricted': {\r\n                        if (supergroup.status.can_send_messages) {\r\n                            return true;\r\n                        } else {\r\n                            return false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction showChatDraft(chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    const draft = getChatDraft(chatId);\r\n\r\n    return draft && chat.unread_count === 0 && chat.unread_mention_count === 0;\r\n}\r\n\r\nfunction getChatDraft(chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n\r\n    if (chat) {\r\n        const { draft_message } = chat;\r\n        if (draft_message) {\r\n            const { input_message_text } = draft_message;\r\n            if (input_message_text) {\r\n                return input_message_text.text;\r\n            }\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction getChatDraftReplyToMessageId(chatId) {\r\n    let replyToMessageId = 0;\r\n    const chat = ChatStore.get(chatId);\r\n    if (chat) {\r\n        const { draft_message } = chat;\r\n        if (draft_message) {\r\n            replyToMessageId = draft_message.reply_to_message_id;\r\n        }\r\n    }\r\n\r\n    console.log('getChatDraft', replyToMessageId);\r\n    return replyToMessageId;\r\n}\r\n\r\nexport {\r\n    showChatDraft,\r\n    getChatDraft,\r\n    getChatDraftReplyToMessageId,\r\n    getChatTypingString,\r\n    getChatUnreadMessageIcon,\r\n    getChatUnreadCount,\r\n    getChatUnreadMentionCount,\r\n    getChatMuteFor,\r\n    getChatSubtitle,\r\n    getChatSubtitleWithoutTyping,\r\n    getLastMessageSenderName,\r\n    getMessageSenderName,\r\n    getMessageSenderFullName,\r\n    getLastMessageContent,\r\n    getLastMessageDate,\r\n    getMessageDate,\r\n    getChatLetters,\r\n    isAccentChatSubtitle,\r\n    isAccentChatSubtitleWithoutTyping,\r\n    isChatMuted,\r\n    getChatUsername,\r\n    getChatPhoneNumber,\r\n    getChatBio,\r\n    isPrivateChat,\r\n    isGroupChat,\r\n    isChannelChat,\r\n    isChatMember,\r\n    getChatTitle,\r\n    getGroupChatMembers,\r\n    getChatFullInfo,\r\n    hasBasicGroupId,\r\n    hasSupergroupId,\r\n    isSupergroup,\r\n    getSupergroupId,\r\n    hasUserId,\r\n    getChatUserId,\r\n    getPhotoFromChat,\r\n    getChatShortTitle,\r\n    getGroupChatMembersCount,\r\n    isMeChat,\r\n    canClearHistory,\r\n    canDeleteChat,\r\n    canSendFiles,\r\n    canSendMessages,\r\n    canSendPhotos,\r\n    canSendDocuments,\r\n    canSendPolls\r\n};\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport ChatStore from '../Stores/ChatStore';\r\n\r\nfunction getBasicGroupStatus(basicGroup, chatId) {\r\n    if (!basicGroup) return null;\r\n\r\n    const { status, member_count: count } = basicGroup;\r\n\r\n    if (status && (status['@type'] === 'chatMemberStatusBanned' || status['@type'] === 'chatMemberStatusLeft')) {\r\n        return 'group is inaccessible';\r\n    }\r\n\r\n    if (!count) return '0 members';\r\n    if (count === 1) return '1 member';\r\n\r\n    const onlineCount = ChatStore.getOnlineMemberCount(chatId);\r\n    if (onlineCount > 1) {\r\n        return `${count} members, ${onlineCount} online`;\r\n    }\r\n\r\n    return `${count} members`;\r\n}\r\n\r\nexport { getBasicGroupStatus };\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport SupergroupStore from '../Stores/SupergroupStore';\r\nimport ChatStore from '../Stores/ChatStore';\r\n\r\nfunction getSupergroupStatus(supergroup, chatId) {\r\n    if (!supergroup) return null;\r\n\r\n    let { status, is_channel, member_count: count } = supergroup;\r\n\r\n    if (status && status['@type'] === 'chatMemberStatusBanned') {\r\n        return is_channel ? 'channel is inaccessible' : 'group is inaccessible';\r\n    }\r\n\r\n    if (!count) {\r\n        const fullInfo = SupergroupStore.getFullInfo(supergroup.id);\r\n        if (fullInfo) {\r\n            count = fullInfo.member_count;\r\n        }\r\n    }\r\n\r\n    if (!count) return '0 members';\r\n    if (count === 1) return '1 member';\r\n\r\n    const onlineCount = ChatStore.getOnlineMemberCount(chatId);\r\n    if (onlineCount > 1) {\r\n        return `${count} members, ${onlineCount} online`;\r\n    }\r\n\r\n    return `${count} members`;\r\n}\r\n\r\nexport { getSupergroupStatus };\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport { EventEmitter } from 'events';\r\nimport TdLibController from '../Controllers/TdLibController';\r\n\r\nclass MessageStore extends EventEmitter {\r\n    constructor() {\r\n        super();\r\n\r\n        this.items = new Map();\r\n        this.selectedItems = new Map();\r\n\r\n        this.addTdLibListener();\r\n        this.setMaxListeners(Infinity);\r\n    }\r\n\r\n    onUpdate = update => {\r\n        switch (update['@type']) {\r\n            case 'updateNewMessage':\r\n                this.set(update.message);\r\n                this.emit('updateNewMessage', update);\r\n                break;\r\n            case 'updateDeleteMessages':\r\n                this.emit('updateDeleteMessages', update);\r\n                break;\r\n            case 'updateMessageEdited': {\r\n                const chat = this.items.get(update.chat_id);\r\n                if (chat) {\r\n                    const message = chat.get(update.message_id);\r\n                    if (message) {\r\n                        message.reply_markup = update.reply_markup;\r\n                        message.edit_date = update.edit_date;\r\n                    }\r\n                }\r\n                this.emit('updateMessageEdited', update);\r\n                break;\r\n            }\r\n            case 'updateMessageViews': {\r\n                const chat = this.items.get(update.chat_id);\r\n                if (chat) {\r\n                    const message = chat.get(update.message_id);\r\n                    if (message && update.views > message.views) {\r\n                        message.views = update.views;\r\n                    }\r\n                }\r\n                this.emit('updateMessageViews', update);\r\n                break;\r\n            }\r\n            case 'updateMessageContent': {\r\n                const chat = this.items.get(update.chat_id);\r\n                if (chat) {\r\n                    const message = chat.get(update.message_id);\r\n                    if (message) {\r\n                        update.old_content = message.content;\r\n                        message.content = update.new_content;\r\n                    }\r\n                }\r\n                this.emit('updateMessageContent', update);\r\n                break;\r\n            }\r\n            case 'updateMessageContentOpened': {\r\n                const { chat_id, message_id } = update;\r\n\r\n                const message = this.get(chat_id, message_id);\r\n                if (message) {\r\n                    const { content } = message;\r\n                    switch (content['@type']) {\r\n                        case 'messageVoiceNote': {\r\n                            message.content.is_listened = true;\r\n                            break;\r\n                        }\r\n                        case 'messageVideoNote': {\r\n                            message.content.is_viewed = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this.emit('updateMessageContentOpened', update);\r\n                break;\r\n            }\r\n            case 'updateMessageSendSucceeded': {\r\n                const chat = this.items.get(update.message.chat_id);\r\n                if (chat) {\r\n                    const message = chat.get(update.old_message_id);\r\n                    if (message) {\r\n                        message.sending_state = update.message.sending_state;\r\n                    }\r\n                    if (update.old_message_id !== update.message.id) {\r\n                        this.set(update.message);\r\n                    }\r\n                }\r\n\r\n                this.set(update.message);\r\n                this.emit('updateMessageSendSucceeded', update);\r\n                break;\r\n            }\r\n            case 'updateMessageSendFailed': {\r\n                if (update.message.sending_state) {\r\n                    update.message.sending_state.error_code = update.error_code;\r\n                    update.message.sending_state.error_message = update.error_message;\r\n                }\r\n\r\n                const chat = this.items.get(update.message.chat_id);\r\n                if (chat) {\r\n                    const message = chat.get(update.old_message_id);\r\n                    if (message) {\r\n                        message.sending_state = update.message.sending_state;\r\n                        if (message.sending_state) {\r\n                            message.sending_state.error_code = update.error_code;\r\n                            message.sending_state.error_message = update.error_message;\r\n                        }\r\n                    }\r\n                    if (update.old_message_id !== update.message.id) {\r\n                        this.set(update.message);\r\n                    }\r\n                }\r\n                this.emit('updateMessageSendFailed', update);\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    onClientUpdate = update => {\r\n        switch (update['@type']) {\r\n            case 'clientUpdateMessageHighlighted': {\r\n                this.emit('clientUpdateMessageHighlighted', update);\r\n                break;\r\n            }\r\n            case 'clientUpdateMessageSelected': {\r\n                if (update.selected) {\r\n                    this.selectedItems.set(`chatId=${update.chatId}_messageId=${update.messageId}`, {\r\n                        chatId: update.chatId,\r\n                        messageId: update.messageId\r\n                    });\r\n                } else {\r\n                    this.selectedItems.delete(`chatId=${update.chatId}_messageId=${update.messageId}`);\r\n                }\r\n\r\n                this.emit('clientUpdateMessageSelected', update);\r\n                break;\r\n            }\r\n            case 'clientUpdateClearSelection': {\r\n                this.selectedItems.clear();\r\n\r\n                this.emit('clientUpdateClearSelection', update);\r\n                break;\r\n            }\r\n            case 'clientUpdateChatId': {\r\n                if (this.selectedItems.size > 0) {\r\n                    this.selectedItems.clear();\r\n\r\n                    this.emit('clientUpdateClearSelection', { '@type': 'clientUpdateClearSelection' });\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'clientUpdateReply': {\r\n                this.emit('clientUpdateReply', update);\r\n                break;\r\n            }\r\n            case 'clientUpdateMessagesInView': {\r\n                this.emit('clientUpdateMessagesInView', update);\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    addTdLibListener = () => {\r\n        TdLibController.addListener('update', this.onUpdate);\r\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\r\n    };\r\n\r\n    removeTdLibListener = () => {\r\n        TdLibController.removeListener('update', this.onUpdate);\r\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\r\n    };\r\n\r\n    load(chatId, messageId) {\r\n        TdLibController.send({\r\n            '@type': 'getMessage',\r\n            chat_id: chatId,\r\n            message_id: messageId\r\n        })\r\n            .then(message => {\r\n                this.set(message);\r\n                this.emit('getMessageResult', message);\r\n            })\r\n            .catch(error => {\r\n                const deletedMessage = {\r\n                    '@type': 'deletedMessage',\r\n                    chat_id: chatId,\r\n                    id: messageId,\r\n                    content: null\r\n                };\r\n                this.set(deletedMessage);\r\n                this.emit('getMessageResult', deletedMessage);\r\n            });\r\n    }\r\n\r\n    get(chatId, messageId) {\r\n        let chat = this.items.get(chatId);\r\n        if (!chat) {\r\n            //this.load(chatId, messageId);\r\n            return null;\r\n        }\r\n\r\n        let message = chat.get(messageId);\r\n        if (!message) {\r\n            //this.load(chatId, messageId);\r\n            return null;\r\n        }\r\n\r\n        return message;\r\n    }\r\n\r\n    set(message) {\r\n        let chat = this.items.get(message.chat_id);\r\n        if (!chat) {\r\n            chat = new Map();\r\n            this.items.set(message.chat_id, chat);\r\n        }\r\n\r\n        chat.set(message.id, message);\r\n    }\r\n\r\n    setItems(messages) {\r\n        for (let i = 0; i < messages.length; i++) {\r\n            this.set(messages[i]);\r\n        }\r\n    }\r\n}\r\n\r\nconst store = new MessageStore();\r\nwindow.message = store;\r\nexport default store;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport UserTileControl from '../../Tile/UserTileControl';\r\nimport { formatPhoneNumber } from '../../../Utils/Common';\r\nimport { getUserFullName } from '../../../Utils/User';\r\nimport UserStore from '../../../Stores/UserStore';\r\nimport './Contact.css';\r\n\r\nclass Contact extends React.Component {\r\n    render() {\r\n        const { contact, openMedia } = this.props;\r\n        if (!contact) return null;\r\n\r\n        const { user_id, first_name, last_name, phone_number } = contact;\r\n\r\n        const user = UserStore.get(user_id) || {\r\n            '@type': 'user',\r\n            type: { '@type': 'userTypeRegular' },\r\n            id: user_id,\r\n            first_name: first_name,\r\n            last_name: last_name\r\n        };\r\n\r\n        const fullName = getUserFullName(user);\r\n        const number = formatPhoneNumber(phone_number);\r\n\r\n        return (\r\n            <div className='contact'>\r\n                <div className='contact-tile'>\r\n                    <UserTileControl userId={user_id} user={user} />\r\n                </div>\r\n                <div className='contact-content'>\r\n                    <div className='contact-name'>\r\n                        {user_id > 0 ? <a onClick={openMedia}>{fullName}</a> : <span>{fullName}</span>}\r\n                    </div>\r\n                    <div className='contact-phone'>{number}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nContact.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    contact: PropTypes.object.isRequired,\r\n    openMedia: PropTypes.func\r\n};\r\n\r\nexport default Contact;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport Photo from './Photo';\r\nimport Animation from './Animation';\r\nimport { accentStyles } from '../../Theme';\r\nimport { getFormattedText } from '../../../Utils/Message';\r\nimport { getFitSize, getSize } from '../../../Utils/Common';\r\nimport { getSrc } from '../../../Utils/File';\r\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport './Game.css';\r\n\r\nconst styles = theme => ({\r\n    ...accentStyles(theme)\r\n});\r\n\r\nclass Game extends React.Component {\r\n    getContent = () => {\r\n        const { chatId, messageId, game, size, displaySize, openMedia } = this.props;\r\n        if (!game) return null;\r\n\r\n        const { photo, animation } = game;\r\n\r\n        if (animation) {\r\n            const animationSrc = getSrc(animation.animation);\r\n            if (animationSrc || animation.thumbnail) {\r\n                return <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />;\r\n            }\r\n        }\r\n\r\n        if (photo) {\r\n            let style = {\r\n                width: 0,\r\n                height: 0\r\n            };\r\n            const photoSize = getSize(photo.sizes, size);\r\n            if (photoSize) {\r\n                const fitPhotoSize = getFitSize(photoSize, displaySize);\r\n                if (fitPhotoSize) {\r\n                    style.width = fitPhotoSize.width;\r\n                    style.height = fitPhotoSize.height;\r\n                }\r\n            }\r\n\r\n            return <Photo chatId={chatId} messageId={messageId} photo={photo} style={style} openMedia={openMedia} />;\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    render() {\r\n        const { classes, game } = this.props;\r\n        if (!game) return null;\r\n\r\n        const { title, text, description } = game;\r\n        const formattedText = getFormattedText(text);\r\n\r\n        return (\r\n            <div className='game'>\r\n                <div className={classNames('game-border', classes.accentBackgroundLight)} />\r\n                <div className='game-wrapper'>\r\n                    {title && <div className={classNames('game-title', classes.accentColorMain)}>{title}</div>}\r\n                    {formattedText && <div className='game-text'>{formattedText}</div>}\r\n                    {description && <div className='game-description'>{description}</div>}\r\n                    {this.getContent()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nGame.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    game: PropTypes.object.isRequired,\r\n    openMedia: PropTypes.func.isRequired,\r\n\r\n    size: PropTypes.number,\r\n    displaySize: PropTypes.number\r\n};\r\n\r\nGame.defaultProps = {\r\n    size: PHOTO_SIZE,\r\n    displaySize: PHOTO_DISPLAY_SIZE\r\n};\r\n\r\nexport default withStyles(styles)(Game);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport RoomIcon from '@material-ui/icons/Room';\r\nimport { getLocationId } from '../../../Utils/Message';\r\nimport { getSrc } from '../../../Utils/File';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport './Location.css';\r\n\r\nclass Location extends React.Component {\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdateLocationBlob', this.onClientUpdateLocationBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.removeListener('clientUpdateLocationBlob', this.onClientUpdateLocationBlob);\r\n    }\r\n\r\n    onClientUpdateLocationBlob = update => {\r\n        const { fileId } = update;\r\n        const { location } = this.props;\r\n\r\n        const locationId = getLocationId(location);\r\n        const file = FileStore.getLocationFile(locationId);\r\n        if (!file) return;\r\n\r\n        if (file.id === fileId) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { location } = this.props;\r\n        if (!location) return null;\r\n\r\n        const locationId = getLocationId(location);\r\n        const file = FileStore.getLocationFile(locationId);\r\n        const src = getSrc(file);\r\n\r\n        const { longitude, latitude } = location;\r\n        const source = `https://maps.google.com/?q=${latitude},${longitude}`;\r\n\r\n        return (\r\n            <a href={source} target='_blank' rel='noopener noreferrer'>\r\n                <div className='location-wrapper'>\r\n                    <img className='location-image' draggable={false} alt={source} src={src} />\r\n                    <div className='location-icon'>\r\n                        <RoomIcon fontSize='large' color='primary' />\r\n                    </div>\r\n                </div>\r\n            </a>\r\n        );\r\n    }\r\n}\r\n\r\nLocation.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    location: PropTypes.object.isRequired,\r\n    openMedia: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Location;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\r\nimport './PollRadio.css';\r\n\r\nconst styles = {\r\n    progressRoot: {\r\n        position: 'absolute',\r\n        top: 8,\r\n        left: 8,\r\n        pointerEvents: 'none'\r\n    },\r\n    radioRoot: {\r\n        padding: 6\r\n    },\r\n    icon: {\r\n        color: 'transparent'\r\n    }\r\n};\r\n\r\nclass PollRadio extends React.Component {\r\n    render() {\r\n        const { classes, chosen, beingChosen, hidden, onChange } = this.props;\r\n\r\n        return (\r\n            <div className={classNames('poll-radio', { 'poll-radio-hidden': hidden })}>\r\n                <Radio\r\n                    classes={{ root: classes.radioRoot }}\r\n                    color='primary'\r\n                    checked={chosen || beingChosen}\r\n                    onChange={onChange}\r\n                    checkedIcon={<RadioButtonCheckedIcon classes={{ root: beingChosen ? classes.icon : null }} />}\r\n                />\r\n                {beingChosen && <CircularProgress size={20} thickness={4.4} classes={{ root: classes.progressRoot }} />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nPollRadio.propTypes = {\r\n    chosen: PropTypes.bool.isRequired,\r\n    beingChosen: PropTypes.bool.isRequired,\r\n    hidden: PropTypes.bool\r\n};\r\n\r\nexport default withStyles(styles)(PollRadio);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { ANIMATION_DURATION_200MS } from './../../../Constants';\r\nimport './PollPercentage.css';\r\n\r\nclass PollPercentage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handle = null;\r\n\r\n        const { value } = props;\r\n\r\n        this.state = {\r\n            from: value,\r\n            to: value,\r\n            animated: value,\r\n\r\n            prevPropsValue: value\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { closed, value } = this.props;\r\n        const { animated } = this.state;\r\n\r\n        if (closed !== nextProps.closed) {\r\n            return true;\r\n        }\r\n\r\n        if (value !== nextProps.value) {\r\n            return true;\r\n        }\r\n\r\n        if (animated !== nextState.animated) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.value !== state.prevPropsValue) {\r\n            return {\r\n                startTime: Date.now(),\r\n                from: state.animated,\r\n                to: props.value,\r\n\r\n                prevPropsValue: props.value\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.value !== this.props.value) {\r\n            this.updateAnimation();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.stopAnimation();\r\n    }\r\n\r\n    updateAnimation = () => {\r\n        this.stopAnimation();\r\n\r\n        this.handle = requestAnimationFrame(this.onAnimationFrame);\r\n    };\r\n\r\n    stopAnimation = () => {\r\n        if (!this.handle) return;\r\n\r\n        cancelAnimationFrame(this.handle);\r\n        this.handle = null;\r\n    };\r\n\r\n    onAnimationFrame = () => {\r\n        const { startTime, from, to } = this.state;\r\n\r\n        const timePassed = Date.now() - startTime;\r\n\r\n        if (timePassed >= ANIMATION_DURATION_200MS) {\r\n            this.setState({ animated: to });\r\n            this.stopAnimation();\r\n        } else {\r\n            const animated = from + Math.floor(((to - from) * timePassed) / ANIMATION_DURATION_200MS);\r\n            this.setState({ animated });\r\n            this.handle = requestAnimationFrame(this.onAnimationFrame);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { chosen, closed, onClick } = this.props;\r\n        const { animated } = this.state;\r\n\r\n        return (\r\n            <div className={classNames('poll-percentage', { 'poll-percentage-subtitle': !chosen })}>\r\n                {!closed && chosen ? (\r\n                    <a className='poll-percentage-action' onClick={onClick}>\r\n                        {animated + '%'}\r\n                    </a>\r\n                ) : (\r\n                    <>{animated + '%'}</>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nPollPercentage.propTypes = {\r\n    value: PropTypes.number.isRequired,\r\n    chosen: PropTypes.bool,\r\n    closed: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default PollPercentage;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { compose } from 'recompose';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport { withTranslation } from 'react-i18next';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport PollRadio from './PollRadio';\r\nimport PollPercentage from './PollPercentage';\r\nimport { borderStyle } from '../../Theme';\r\nimport './PollOption.css';\r\n\r\nconst styles = theme => ({\r\n    progressRoot: {\r\n        backgroundColor: 'transparent',\r\n        margin: '2px 0 0 38px',\r\n        position: 'absolute',\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0\r\n    },\r\n    progressBar: {\r\n        transition: 'transform .2s linear'\r\n    },\r\n    ...borderStyle(theme)\r\n});\r\n\r\nclass PollOption extends React.Component {\r\n    getTitleString = (count, t = key => key) => {\r\n        const { canBeSelected } = this.props;\r\n        if (canBeSelected) return null;\r\n\r\n        if (!count) return t('NoVotes').toLowerCase();\r\n        if (count === 1) return '1 vote';\r\n\r\n        return count + ' votes';\r\n    };\r\n\r\n    handleClick = event => {\r\n        const { canBeSelected, onVote } = this.props;\r\n        if (!canBeSelected) return;\r\n\r\n        event.stopPropagation();\r\n\r\n        onVote();\r\n    };\r\n\r\n    handleCancel = event => {\r\n        const { onUnvote } = this.props;\r\n\r\n        event.stopPropagation();\r\n\r\n        onUnvote();\r\n    };\r\n\r\n    render() {\r\n        const { classes, option, onChange, canBeSelected, closed, maxVoterCount, t } = this.props;\r\n        if (!option) return null;\r\n\r\n        const { text, voter_count, vote_percentage, is_chosen, is_being_chosen } = option;\r\n\r\n        let value = 1.5;\r\n        if (voter_count) {\r\n            value = (voter_count / maxVoterCount) * 100;\r\n        }\r\n\r\n        return (\r\n            <div className='poll-option' onClick={this.handleClick}>\r\n                <div\r\n                    className={classNames(\r\n                        'poll-option-wrapper',\r\n                        canBeSelected ? 'poll-option-unselected' : 'poll-option-selected'\r\n                    )}>\r\n                    <div className='poll-option-text-wrapper' title={this.getTitleString(voter_count, t)}>\r\n                        <PollPercentage\r\n                            value={vote_percentage}\r\n                            chosen={is_chosen}\r\n                            closed={closed}\r\n                            onClick={this.handleCancel}\r\n                        />\r\n                        <PollRadio\r\n                            hidden={!canBeSelected}\r\n                            chosen={is_chosen}\r\n                            beingChosen={is_being_chosen}\r\n                            onChange={onChange}\r\n                        />\r\n                        <div className='poll-option-text'>{text}</div>\r\n                    </div>\r\n                </div>\r\n                <div className={classNames('poll-option-bottom-border', { [classes.borderColor]: canBeSelected })} />\r\n                <LinearProgress\r\n                    classes={{ root: classes.progressRoot, bar: classes.progressBar }}\r\n                    color='primary'\r\n                    variant='determinate'\r\n                    value={canBeSelected ? 0 : Math.max(1.5, value)}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nPollOption.propTypes = {\r\n    option: PropTypes.object.isRequired,\r\n    onVote: PropTypes.func.isRequired,\r\n    onUnvote: PropTypes.func.isRequired,\r\n    canBeSelected: PropTypes.bool,\r\n    closed: PropTypes.bool,\r\n    maxVoterCount: PropTypes.number\r\n};\r\n\r\nconst enhance = compose(\r\n    withStyles(styles, { withTheme: true }),\r\n    withTranslation()\r\n);\r\n\r\nexport default enhance(PollOption);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport PollOption from './PollOption';\r\nimport { cancelPollAnswer, setPollAnswer, stopPoll } from '../../../Actions/Poll';\r\nimport MessageStore from './../../../Stores/MessageStore';\r\nimport './Poll.css';\r\n\r\nclass Poll extends React.Component {\r\n    state = {\r\n        dialog: false,\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0\r\n    };\r\n\r\n    getTotalVoterCountString = (count, t = key => key) => {\r\n        if (!count) return t('NoVotes');\r\n        if (count === 1) return '1 vote';\r\n\r\n        return count + ' votes';\r\n    };\r\n\r\n    handleVote = index => {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        setPollAnswer(chatId, messageId, [index]);\r\n    };\r\n\r\n    handleUnvote = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { chatId, messageId, poll } = this.props;\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.handleCloseContextMenu();\r\n        }\r\n\r\n        const { is_closed } = poll;\r\n        if (is_closed) return;\r\n\r\n        cancelPollAnswer(chatId, messageId);\r\n    };\r\n\r\n    handleStopPoll = event => {\r\n        event.stopPropagation();\r\n\r\n        const { chatId, messageId } = this.props;\r\n        const { dialog } = this.state;\r\n\r\n        if (dialog) {\r\n            this.setState({ dialog: false });\r\n        }\r\n\r\n        stopPoll(chatId, messageId);\r\n    };\r\n\r\n    handleDialog = event => {\r\n        const { dialog } = this.state;\r\n        if (dialog) return;\r\n\r\n        this.setState({\r\n            dialog: true,\r\n            contextMenu: false\r\n        });\r\n    };\r\n\r\n    handleCloseDialog = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ dialog: false });\r\n    };\r\n\r\n    handleContextMenu = event => {\r\n        const { poll } = this.props;\r\n        const { is_closed } = poll;\r\n        if (is_closed) return;\r\n\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            this.setState({\r\n                contextMenu: true,\r\n                left: event.clientX,\r\n                top: event.clientY\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, poll, t } = this.props;\r\n        const { left, top, contextMenu, dialog } = this.state;\r\n        const { question, options, total_voter_count, is_closed } = poll;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const canUnvote = !is_closed && options.some(x => x.is_chosen || x.is_being_chosen);\r\n        const canStopPoll = message && message.can_be_edited;\r\n        const canBeSelected = !is_closed && options.every(x => !x.is_chosen);\r\n        const maxVoterCount = Math.max(...options.map(x => x.voter_count));\r\n\r\n        return (\r\n            <div className='poll' onContextMenu={this.handleContextMenu}>\r\n                <div className='poll-question'>\r\n                    <span className='poll-question-title'>{question}</span>\r\n                    <span className='subtitle'>{is_closed ? t('FinalResults') : t('AnonymousPoll')}</span>\r\n                </div>\r\n                <div className='poll-options'>\r\n                    {options.map((x, index) => (\r\n                        <PollOption\r\n                            key={index}\r\n                            option={x}\r\n                            canBeSelected={canBeSelected}\r\n                            closed={is_closed}\r\n                            maxVoterCount={maxVoterCount}\r\n                            onVote={() => this.handleVote(index)}\r\n                            onUnvote={this.handleUnvote}\r\n                        />\r\n                    ))}\r\n                </div>\r\n                <div className='poll-total-count subtitle'>{this.getTotalVoterCountString(total_voter_count, t)}</div>\r\n                <Popover\r\n                    open={contextMenu && (canUnvote || canStopPoll)}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={{ top, left }}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        {canUnvote && <MenuItem onClick={this.handleUnvote}>{t('Unvote')}</MenuItem>}\r\n                        {canStopPoll && <MenuItem onClick={this.handleDialog}>{t('StopPoll')}</MenuItem>}\r\n                    </MenuList>\r\n                </Popover>\r\n                <Dialog\r\n                    transitionDuration={0}\r\n                    open={dialog}\r\n                    onClose={this.handleCloseDialog}\r\n                    aria-labelledby='form-dialog-title'>\r\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleCloseDialog} color='primary'>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        <Button onClick={this.handleStopPoll} color='primary'>\r\n                            {t('Stop')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nPoll.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    poll: PropTypes.object.isRequired,\r\n    openMedia: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTranslation()(Poll);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport TdLibController from '../Controllers/TdLibController';\r\n\r\nexport function setPollAnswer(chatId, messageId, optionIds) {\r\n    TdLibController.send({\r\n        '@type': 'setPollAnswer',\r\n        chat_id: chatId,\r\n        message_id: messageId,\r\n        option_ids: optionIds\r\n    });\r\n}\r\n\r\nexport function cancelPollAnswer(chatId, messageId) {\r\n    TdLibController.send({\r\n        '@type': 'setPollAnswer',\r\n        chat_id: chatId,\r\n        message_id: messageId,\r\n        option_ids: []\r\n    });\r\n}\r\n\r\nexport function stopPoll(chatId, messageId) {\r\n    TdLibController.send({\r\n        '@type': 'stopPoll',\r\n        chat_id: chatId,\r\n        message_id: messageId,\r\n        reply_markup: null\r\n    });\r\n}\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Location from './Location';\r\nimport './Venue.css';\r\n\r\nclass Venue extends React.Component {\r\n    render() {\r\n        const { chatId, messageId, venue, openMedia } = this.props;\r\n        if (!venue) return null;\r\n\r\n        const { title, address, location } = venue;\r\n        if (!location) return null;\r\n\r\n        const { longitude, latitude } = location;\r\n        const source = `https://maps.google.com/?q=${latitude},${longitude}`;\r\n\r\n        return (\r\n            <div className='venue'>\r\n                <Location chatId={chatId} messageId={messageId} location={location} openMedia={openMedia} />\r\n                <div className='venue-content'>\r\n                    <a href={source} target='_blank' rel='noopener noreferrer'>\r\n                        <div className='venue-title'>{title}</div>\r\n                    </a>\r\n                    <div className='venue-subtitle'>{address}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nVenue.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    venue: PropTypes.object.isRequired,\r\n    openMedia: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Venue;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport dateFormat from 'dateformat';\r\nimport Audio from '../Components/Message/Media/Audio';\r\nimport Animation from '../Components/Message/Media/Animation';\r\nimport Contact from '../Components/Message/Media/Contact';\r\nimport Document from '../Components/Message/Media/Document';\r\nimport Game from '../Components/Message/Media/Game';\r\nimport Location from '../Components/Message/Media/Location';\r\nimport Photo from '../Components/Message/Media/Photo';\r\nimport Poll from '../Components/Message/Media/Poll';\r\nimport Sticker from '../Components/Message/Media/Sticker';\r\nimport Venue from '../Components/Message/Media/Venue';\r\nimport Video from '../Components/Message/Media/Video';\r\nimport VideoNote from '../Components/Message/Media/VideoNote';\r\nimport VoiceNote from '../Components/Message/Media/VoiceNote';\r\nimport { getChatTitle } from './Chat';\r\nimport { openUser } from './../Actions/Client';\r\nimport { getPhotoSize, getSize } from './Common';\r\nimport { download, saveOrDownload } from './File';\r\nimport { getAudioTitle } from './Media';\r\nimport { getServiceMessageContent } from './ServiceMessage';\r\nimport { getUserFullName } from './User';\r\nimport { LOCATION_HEIGHT, LOCATION_SCALE, LOCATION_WIDTH, LOCATION_ZOOM } from '../Constants';\r\nimport ApplicationStore from '../Stores/ApplicationStore';\r\nimport ChatStore from '../Stores/ChatStore';\r\nimport FileStore from '../Stores/FileStore';\r\nimport MessageStore from '../Stores/MessageStore';\r\nimport UserStore from '../Stores/UserStore';\r\nimport TdLibController from '../Controllers/TdLibController';\r\n\r\nfunction getAuthor(message) {\r\n    if (!message) return null;\r\n\r\n    const { forward_info } = message;\r\n\r\n    if (forward_info) {\r\n        switch (forward_info['@type']) {\r\n            case 'messageForwardedFromUser': {\r\n                if (forward_info.sender_user_id > 0) {\r\n                    const user = UserStore.get(forward_info.sender_user_id);\r\n                    if (user) {\r\n                        return getUserFullName(user);\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            case 'messageForwardedPost': {\r\n                const chat = ChatStore.get(forward_info.chat_id);\r\n                if (chat) {\r\n                    return chat.title;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    return getTitle(message);\r\n}\r\n\r\nfunction getTitle(message) {\r\n    if (!message) return null;\r\n\r\n    const { sender_user_id, chat_id } = message;\r\n\r\n    if (sender_user_id) {\r\n        const user = UserStore.get(sender_user_id);\r\n        if (user) {\r\n            return getUserFullName(user);\r\n        }\r\n    }\r\n\r\n    if (chat_id) {\r\n        const chat = ChatStore.get(chat_id);\r\n        if (chat) {\r\n            return chat.title;\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction substring(text, start, end) {\r\n    if (start < 0) start = 0;\r\n    if (start > text.length - 1) start = text.length - 1;\r\n    if (end < start) end = start;\r\n    if (end > text.length) end = text.length;\r\n\r\n    return text.substring(start, end);\r\n}\r\n\r\nfunction stopPropagation(event) {\r\n    event.stopPropagation();\r\n}\r\n\r\nfunction getFormattedText(text) {\r\n    if (text['@type'] !== 'formattedText') return null;\r\n    if (!text.text) return null;\r\n    if (!text.entities) return text.text;\r\n\r\n    let result = [];\r\n    let index = 0;\r\n    for (let i = 0; i < text.entities.length; i++) {\r\n        let beforeEntityText = substring(text.text, index, text.entities[i].offset);\r\n        if (beforeEntityText) {\r\n            result.push(beforeEntityText);\r\n        }\r\n\r\n        let entityText = substring(\r\n            text.text,\r\n            text.entities[i].offset,\r\n            text.entities[i].offset + text.entities[i].length\r\n        );\r\n        switch (text.entities[i].type['@type']) {\r\n            case 'textEntityTypeUrl': {\r\n                let url = entityText.startsWith('http') ? entityText : 'http://' + entityText;\r\n                let decodedUrl;\r\n                try {\r\n                    decodedUrl = decodeURI(entityText);\r\n                } catch (error) {\r\n                    console.error('uri: ' + entityText + '\\n' + error);\r\n                    decodedUrl = entityText;\r\n                }\r\n\r\n                result.push(\r\n                    <a\r\n                        key={text.entities[i].offset}\r\n                        onClick={stopPropagation}\r\n                        href={url}\r\n                        title={url}\r\n                        target='_blank'\r\n                        rel='noopener noreferrer'>\r\n                        {decodedUrl}\r\n                    </a>\r\n                );\r\n                break;\r\n            }\r\n            case 'textEntityTypeTextUrl': {\r\n                let url = text.entities[i].type.url.startsWith('http')\r\n                    ? text.entities[i].type.url\r\n                    : 'http://' + text.entities[i].type.url;\r\n                result.push(\r\n                    <a\r\n                        key={text.entities[i].offset}\r\n                        onClick={stopPropagation}\r\n                        href={url}\r\n                        title={url}\r\n                        target='_blank'\r\n                        rel='noopener noreferrer'>\r\n                        {entityText}\r\n                    </a>\r\n                );\r\n                break;\r\n            }\r\n            case 'textEntityTypeBold':\r\n                result.push(<strong key={text.entities[i].offset}>{entityText}</strong>);\r\n                break;\r\n            case 'textEntityTypeItalic':\r\n                result.push(<em key={text.entities[i].offset}>{entityText}</em>);\r\n                break;\r\n            case 'textEntityTypeCode':\r\n                result.push(<code key={text.entities[i].offset}>{entityText}</code>);\r\n                break;\r\n            case 'textEntityTypePre':\r\n                result.push(\r\n                    <pre key={text.entities[i].offset}>\r\n                        <code>{entityText}</code>\r\n                    </pre>\r\n                );\r\n                break;\r\n            case 'textEntityTypeMention':\r\n                result.push(\r\n                    <a key={text.entities[i].offset} onClick={stopPropagation} href={`#/im?p=${entityText}`}>\r\n                        {entityText}\r\n                    </a>\r\n                );\r\n                break;\r\n            case 'textEntityTypeMentionName':\r\n                result.push(\r\n                    <a\r\n                        key={text.entities[i].offset}\r\n                        onClick={stopPropagation}\r\n                        href={`#/im?p=u${text.entities[i].type.user_id}`}>\r\n                        {entityText}\r\n                    </a>\r\n                );\r\n                break;\r\n            case 'textEntityTypeHashtag':\r\n                let hashtag = entityText.length > 0 && entityText[0] === '#' ? substring(entityText, 1) : entityText;\r\n                result.push(\r\n                    <a\r\n                        key={text.entities[i].offset}\r\n                        onClick={stopPropagation}\r\n                        href={`tg://search_hashtag?hashtag=${hashtag}`}>\r\n                        {entityText}\r\n                    </a>\r\n                );\r\n                break;\r\n            case 'textEntityTypeEmailAddress':\r\n                result.push(\r\n                    <a\r\n                        key={text.entities[i].offset}\r\n                        onClick={stopPropagation}\r\n                        href={`mailto:${entityText}`}\r\n                        target='_blank'\r\n                        rel='noopener noreferrer'>\r\n                        {entityText}\r\n                    </a>\r\n                );\r\n                break;\r\n            case 'textEntityTypeBotCommand':\r\n                let command = entityText.length > 0 && entityText[0] === '/' ? substring(entityText, 1) : entityText;\r\n                result.push(\r\n                    <a\r\n                        key={text.entities[i].offset}\r\n                        onClick={stopPropagation}\r\n                        href={`tg://bot_command?command=${command}&bot=`}>\r\n                        {entityText}\r\n                    </a>\r\n                );\r\n                break;\r\n            default:\r\n                result.push(entityText);\r\n                break;\r\n        }\r\n\r\n        index += beforeEntityText.length + entityText.length;\r\n    }\r\n\r\n    if (index < text.text.length) {\r\n        let afterEntityText = text.text.substring(index);\r\n        if (afterEntityText) {\r\n            result.push(afterEntityText);\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction getText(message) {\r\n    if (!message) return null;\r\n\r\n    let text = [];\r\n\r\n    const { content } = message;\r\n\r\n    if (\r\n        content &&\r\n        content['@type'] === 'messageText' &&\r\n        content.text &&\r\n        content.text['@type'] === 'formattedText' &&\r\n        content.text.text\r\n    ) {\r\n        text = getFormattedText(content.text);\r\n    } else {\r\n        //text.push('[' + message.content['@type'] + ']');//JSON.stringify(x);\r\n        if (content && content.caption && content.caption['@type'] === 'formattedText' && content.caption.text) {\r\n            text.push('\\n');\r\n            let formattedText = getFormattedText(content.caption);\r\n            if (formattedText) {\r\n                text = text.concat(formattedText);\r\n            }\r\n        }\r\n    }\r\n\r\n    return text;\r\n}\r\n\r\nfunction getWebPage(message) {\r\n    if (!message) return null;\r\n    if (!message.content) return null;\r\n\r\n    return message.content.web_page;\r\n}\r\n\r\nfunction getDate(message) {\r\n    if (!message) return null;\r\n    if (!message.date) return null;\r\n\r\n    let date = new Date(message.date * 1000);\r\n\r\n    return dateFormat(date, 'H:MM'); //date.toDateString();\r\n}\r\n\r\nfunction getDateHint(message) {\r\n    if (!message) return null;\r\n    if (!message.date) return null;\r\n\r\n    const date = new Date(message.date * 1000);\r\n    return dateFormat(date, 'H:MM:ss d.mm.yyyy'); //date.toDateString();\r\n}\r\n\r\nfunction getMedia(message, openMedia) {\r\n    if (!message) return null;\r\n\r\n    const { chat_id, id, content } = message;\r\n    if (!content) return null;\r\n\r\n    switch (content['@type']) {\r\n        case 'messageAnimation':\r\n            return <Animation chatId={chat_id} messageId={id} animation={content.animation} openMedia={openMedia} />;\r\n        case 'messageAudio':\r\n            return <Audio chatId={chat_id} messageId={id} audio={content.audio} openMedia={openMedia} />;\r\n        case 'messageContact':\r\n            return <Contact chatId={chat_id} messageId={id} contact={content.contact} openMedia={openMedia} />;\r\n        case 'messageDocument':\r\n            return <Document chatId={chat_id} messageId={id} document={content.document} openMedia={openMedia} />;\r\n        case 'messageGame':\r\n            return <Game chatId={chat_id} messageId={id} game={content.game} openMedia={openMedia} />;\r\n        case 'messageLocation':\r\n            return <Location chatId={chat_id} messageId={id} location={content.location} openMedia={openMedia} />;\r\n        case 'messagePhoto':\r\n            return <Photo chatId={chat_id} messageId={id} photo={content.photo} openMedia={openMedia} />;\r\n        case 'messagePoll':\r\n            return <Poll chatId={chat_id} messageId={id} poll={content.poll} openMedia={openMedia} />;\r\n        case 'messageSticker':\r\n            return <Sticker chatId={chat_id} messageId={id} sticker={content.sticker} openMedia={openMedia} />;\r\n        case 'messageText':\r\n            return null;\r\n        case 'messageVenue':\r\n            return <Venue chatId={chat_id} messageId={id} venue={content.venue} openMedia={openMedia} />;\r\n        case 'messageVideo':\r\n            return <Video chatId={chat_id} messageId={id} video={content.video} openMedia={openMedia} />;\r\n        case 'messageVideoNote':\r\n            return <VideoNote chatId={chat_id} messageId={id} videoNote={content.video_note} openMedia={openMedia} />;\r\n        case 'messageVoiceNote':\r\n            return <VoiceNote chatId={chat_id} messageId={id} voiceNote={content.voice_note} openMedia={openMedia} />;\r\n        default:\r\n            return '[' + content['@type'] + ']';\r\n    }\r\n}\r\n\r\nfunction isForwardOriginHidden(forwardInfo) {\r\n    if (!forwardInfo) return false;\r\n\r\n    const { origin } = forwardInfo;\r\n    if (!origin) return false;\r\n\r\n    switch (origin['@type']) {\r\n        case 'messageForwardOriginUser': {\r\n            return false;\r\n        }\r\n        case 'messageForwardOriginHiddenUser': {\r\n            return true;\r\n        }\r\n        case 'messageForwardOriginChannel': {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction getForwardTitle(forwardInfo, t = key => key) {\r\n    if (!forwardInfo) return '';\r\n\r\n    const { origin } = forwardInfo;\r\n    if (!origin) return '';\r\n\r\n    switch (origin['@type']) {\r\n        case 'messageForwardOriginUser': {\r\n            const { sender_user_id } = origin;\r\n\r\n            const user = UserStore.get(sender_user_id);\r\n            return getUserFullName(user);\r\n        }\r\n        case 'messageForwardOriginHiddenUser': {\r\n            const { sender_name } = origin;\r\n\r\n            return sender_name;\r\n        }\r\n        case 'messageForwardOriginChannel': {\r\n            const { chat_id, author_signature } = origin;\r\n\r\n            return getChatTitle(chat_id, false, t) + (author_signature ? ` (${author_signature})` : '');\r\n        }\r\n    }\r\n\r\n    return '';\r\n}\r\n\r\nfunction getUnread(message) {\r\n    if (!message) return false;\r\n    if (!message.chat_id) return false;\r\n    if (!message.is_outgoing) return false;\r\n\r\n    let chat = ChatStore.get(message.chat_id);\r\n    if (!chat) return false;\r\n\r\n    return chat.last_read_outbox_message_id < message.id;\r\n}\r\n\r\nfunction getSenderUserId(message) {\r\n    if (!message) return null;\r\n\r\n    return message.sender_user_id;\r\n}\r\n\r\nfunction filterMessages(result, history) {\r\n    if (result.messages.length === 0) return;\r\n    if (history.length === 0) return;\r\n\r\n    const map = history.reduce(function(accumulator, current) {\r\n        accumulator.set(current.id, current.id);\r\n        return accumulator;\r\n    }, new Map());\r\n\r\n    result.messages = result.messages.filter(x => !map.has(x.id));\r\n}\r\n\r\nfunction getContent(message, t = key => key) {\r\n    if (!message) return null;\r\n\r\n    const { content } = message;\r\n    if (!content) return null;\r\n\r\n    let caption = '';\r\n    if (content.caption && content.caption.text) {\r\n        caption = `, ${content.caption.text}`;\r\n    }\r\n\r\n    if (message.ttl > 0) {\r\n        return getServiceMessageContent(message);\r\n    }\r\n\r\n    switch (content['@type']) {\r\n        case 'messageAnimation': {\r\n            return t('AttachGif') + caption;\r\n        }\r\n        case 'messageAudio': {\r\n            return t('AttachMusic') + caption;\r\n        }\r\n        case 'messageBasicGroupChatCreate': {\r\n            return getServiceMessageContent(message);\r\n        }\r\n        case 'messageCall': {\r\n            return t('Call') + caption;\r\n        }\r\n        case 'messageChatAddMembers': {\r\n            return getServiceMessageContent(message);\r\n        }\r\n        case 'messageChatChangePhoto': {\r\n            return getServiceMessageContent(message);\r\n        }\r\n        case 'messageChatChangeTitle': {\r\n            return getServiceMessageContent(message);\r\n        }\r\n        case 'messageChatDeleteMember': {\r\n            return getServiceMessageContent(message);\r\n        }\r\n        case 'messageChatDeletePhoto': {\r\n            return getServiceMessageContent(message);\r\n        }\r\n        case 'messageChatJoinByLink': {\r\n            return getServiceMessageContent(message);\r\n        }\r\n        case 'messageChatSetTtl': {\r\n            return getServiceMessageContent(message);\r\n        }\r\n        case 'messageChatUpgradeFrom': {\r\n            return getServiceMessageContent(message);\r\n        }\r\n        case 'messageChatUpgradeTo': {\r\n            return getServiceMessageContent(message);\r\n        }\r\n        case 'messageContact': {\r\n            return t('AttachContact') + caption;\r\n        }\r\n        case 'messageContactRegistered': {\r\n            return getServiceMessageContent(message);\r\n        }\r\n        case 'messageCustomServiceAction': {\r\n            return getServiceMessageContent(message);\r\n        }\r\n        case 'messageDocument': {\r\n            return t('AttachDocument') + caption;\r\n        }\r\n        case 'messageExpiredPhoto': {\r\n            return t('AttachPhoto') + caption;\r\n        }\r\n        case 'messageExpiredVideo': {\r\n            return t('AttachVideo') + caption;\r\n        }\r\n        case 'messageGame': {\r\n            return t('AttachGame') + caption;\r\n        }\r\n        case 'messageGameScore': {\r\n            return getServiceMessageContent(message);\r\n        }\r\n        case 'messageInvoice': {\r\n            return getServiceMessageContent(message);\r\n        }\r\n        case 'messageLocation': {\r\n            return t('AttachLocation') + caption;\r\n        }\r\n        case 'messagePassportDataReceived': {\r\n            return getServiceMessageContent(message);\r\n        }\r\n        case 'messagePassportDataSent': {\r\n            return getServiceMessageContent(message);\r\n        }\r\n        case 'messagePaymentSuccessful': {\r\n            return getServiceMessageContent(message);\r\n        }\r\n        case 'messagePaymentSuccessfulBot': {\r\n            return getServiceMessageContent(message);\r\n        }\r\n        case 'messagePhoto': {\r\n            return t('AttachPhoto') + caption;\r\n        }\r\n        case 'messagePoll': {\r\n            const { poll } = content;\r\n\r\n            return '📊 ' + (poll.question || t('Poll')) + caption;\r\n        }\r\n        case 'messagePinMessage': {\r\n            return getServiceMessageContent(message);\r\n        }\r\n        case 'messageScreenshotTaken': {\r\n            return getServiceMessageContent(message);\r\n        }\r\n        case 'messageSticker': {\r\n            const { sticker } = content;\r\n            let emoji = '';\r\n            if (sticker && sticker.emoji) {\r\n                emoji = sticker.emoji;\r\n            }\r\n\r\n            return t('AttachSticker') + (emoji ? ` ${emoji}` : '') + caption;\r\n        }\r\n        case 'messageSupergroupChatCreate': {\r\n            return getServiceMessageContent(message);\r\n        }\r\n        case 'messageText': {\r\n            return content.text.text + caption;\r\n        }\r\n        case 'messageUnsupported': {\r\n            return getServiceMessageContent(message);\r\n        }\r\n        case 'messageVenue': {\r\n            return t('AttachLocation') + caption;\r\n        }\r\n        case 'messageVideo': {\r\n            return t('AttachVideo') + caption;\r\n        }\r\n        case 'messageVideoNote': {\r\n            return t('AttachRound') + caption;\r\n        }\r\n        case 'messageVoiceNote': {\r\n            return t('AttachAudio') + caption;\r\n        }\r\n        case 'messageWebsiteConnected': {\r\n            return getServiceMessageContent(message);\r\n        }\r\n        default: {\r\n            return t('UnsupportedAttachment');\r\n        }\r\n    }\r\n}\r\n\r\nfunction isMediaContent(content) {\r\n    if (!content) return false;\r\n\r\n    return content['@type'] === 'messagePhoto';\r\n}\r\n\r\nfunction getLocationId(location) {\r\n    if (!location) return null;\r\n\r\n    const { longitude, latitude } = location;\r\n    return `loc=${latitude},${longitude}&size=${LOCATION_WIDTH},${LOCATION_HEIGHT}&scale=${LOCATION_SCALE}&zoom=${LOCATION_ZOOM}`;\r\n}\r\n\r\nfunction isVideoMessage(chatId, messageId) {\r\n    const message = MessageStore.get(chatId, messageId);\r\n    if (!message) return false;\r\n\r\n    const { content } = message;\r\n    if (!content) return false;\r\n\r\n    switch (content['@type']) {\r\n        case 'messageVideo': {\r\n            return true;\r\n        }\r\n        case 'messageText': {\r\n            const { web_page } = content;\r\n            return Boolean(web_page.video);\r\n        }\r\n        default: {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nfunction isLottieMessage(chatId, messageId) {\r\n    const message = MessageStore.get(chatId, messageId);\r\n    if (!message) return false;\r\n\r\n    const { content } = message;\r\n    if (!content) return false;\r\n\r\n    switch (content['@type']) {\r\n        case 'messageDocument': {\r\n            const { document } = content;\r\n            if (!document) return false;\r\n\r\n            const { file_name } = document;\r\n\r\n            return file_name && file_name.toLowerCase().endsWith('.json');\r\n        }\r\n        case 'messageText': {\r\n            const { web_page } = content;\r\n            if (!web_page) return false;\r\n\r\n            const { document } = web_page;\r\n            if (!document) return false;\r\n\r\n            const { file_name } = document;\r\n\r\n            return file_name && file_name.toLowerCase().endsWith('.json');\r\n        }\r\n        default: {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nfunction isAnimationMessage(chatId, messageId) {\r\n    const message = MessageStore.get(chatId, messageId);\r\n    if (!message) return false;\r\n\r\n    const { content } = message;\r\n    if (!content) return false;\r\n\r\n    switch (content['@type']) {\r\n        case 'messageAnimation': {\r\n            return true;\r\n        }\r\n        case 'messageText': {\r\n            const { web_page } = content;\r\n            return Boolean(web_page.animation);\r\n        }\r\n        default: {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nfunction isContentOpened(chatId, messageId) {\r\n    const message = MessageStore.get(chatId, messageId);\r\n    if (!message) return true;\r\n\r\n    const { content } = message;\r\n    if (!content) return true;\r\n\r\n    switch (content['@type']) {\r\n        case 'messageVoiceNote': {\r\n            return content.is_listened;\r\n        }\r\n        case 'messageVideoNote': {\r\n            return content.is_viewed;\r\n        }\r\n        default: {\r\n            return true;\r\n        }\r\n    }\r\n}\r\n\r\nfunction getMediaTitle(message) {\r\n    if (!message) return null;\r\n\r\n    const { content } = message;\r\n    if (!content) return null;\r\n\r\n    switch (content['@type']) {\r\n        case 'messageAudio': {\r\n            const { audio } = content;\r\n            if (audio) {\r\n                return getAudioTitle(audio);\r\n            }\r\n            break;\r\n        }\r\n        case 'messageText': {\r\n            const { web_page } = content;\r\n            if (web_page) {\r\n                const { audio } = web_page;\r\n                if (audio) {\r\n                    return getAudioTitle(audio);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    return getAuthor(message);\r\n}\r\n\r\nfunction hasAudio(chatId, messageId) {\r\n    const message = MessageStore.get(chatId, messageId);\r\n    if (!message) return false;\r\n\r\n    const { content } = message;\r\n    if (!content) return false;\r\n\r\n    switch (content['@type']) {\r\n        case 'messageAudio': {\r\n            const { audio } = content;\r\n            if (audio) {\r\n                return true;\r\n            }\r\n\r\n            break;\r\n        }\r\n        case 'messageText': {\r\n            const { web_page } = content;\r\n            if (web_page) {\r\n                const { audio } = web_page;\r\n                if (audio) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            break;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction hasVideoNote(chatId, messageId) {\r\n    const message = MessageStore.get(chatId, messageId);\r\n    if (!message) return false;\r\n\r\n    const { content } = message;\r\n    if (!content) return false;\r\n\r\n    switch (content['@type']) {\r\n        case 'messageVideoNote': {\r\n            const { video_note } = content;\r\n            if (video_note) {\r\n                return true;\r\n            }\r\n\r\n            break;\r\n        }\r\n        case 'messageText': {\r\n            const { web_page } = content;\r\n            if (web_page) {\r\n                const { video_note } = web_page;\r\n                if (video_note) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            break;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction getSearchMessagesFilter(chatId, messageId) {\r\n    const message = MessageStore.get(chatId, messageId);\r\n    if (!message) return null;\r\n\r\n    const { content } = message;\r\n    if (!content) return null;\r\n\r\n    switch (content['@type']) {\r\n        case 'messageAudio': {\r\n            const { audio } = content;\r\n            if (audio) {\r\n                return {\r\n                    '@type': 'searchMessagesFilterAudio'\r\n                };\r\n            }\r\n            break;\r\n        }\r\n        case 'messageVoiceNote': {\r\n            const { voice_note } = content;\r\n            if (voice_note) {\r\n                return {\r\n                    '@type': 'searchMessagesFilterVoiceNote'\r\n                };\r\n            }\r\n            break;\r\n        }\r\n        case 'messageVideoNote': {\r\n            const { video_note } = content;\r\n            if (video_note) {\r\n                return null;\r\n\r\n                return {\r\n                    '@type': 'searchMessagesFilterVideoNote'\r\n                };\r\n            }\r\n            break;\r\n        }\r\n        case 'messageText': {\r\n            const { web_page } = content;\r\n            if (web_page) {\r\n                const { audio, voice_note, video_note } = web_page;\r\n                if (audio) {\r\n                    return null;\r\n\r\n                    return {\r\n                        '@type': 'searchMessagesFilterAudio'\r\n                    };\r\n                }\r\n\r\n                if (voice_note) {\r\n                    return null;\r\n\r\n                    return {\r\n                        '@type': 'searchMessagesFilterVoiceNote'\r\n                    };\r\n                }\r\n\r\n                if (video_note) {\r\n                    return null;\r\n\r\n                    return {\r\n                        '@type': 'searchMessagesFilterVideoNote'\r\n                    };\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction openAnimation(animation, message, fileCancel) {\r\n    if (!animation) return;\r\n    if (!message) return;\r\n\r\n    const { chat_id, id } = message;\r\n\r\n    let { animation: file } = animation;\r\n    if (!file) return;\r\n\r\n    file = FileStore.get(file.id) || file;\r\n    if (fileCancel && file.local.is_downloading_active) {\r\n        FileStore.cancelGetRemoteFile(file.id, message);\r\n        return;\r\n    } else if (fileCancel && file.remote.is_uploading_active) {\r\n        FileStore.cancelUploadFile(file.id, message);\r\n        return;\r\n    }\r\n\r\n    // download file at loadMediaViewerContent instead\r\n    // download(file, message, FileStore.updateAnimationBlob(chat_id, id, file.id));\r\n\r\n    TdLibController.clientUpdate({\r\n        '@type': 'clientUpdateActiveAnimation',\r\n        chatId: chat_id,\r\n        messageId: id\r\n    });\r\n\r\n    TdLibController.send({\r\n        '@type': 'openMessageContent',\r\n        chat_id: chat_id,\r\n        message_id: id\r\n    });\r\n\r\n    ApplicationStore.setMediaViewerContent({\r\n        chatId: chat_id,\r\n        messageId: id\r\n    });\r\n}\r\n\r\nfunction openAudio(audio, message, fileCancel) {\r\n    if (!audio) return;\r\n    if (!message) return;\r\n\r\n    const { chat_id, id } = message;\r\n\r\n    let { audio: file } = audio;\r\n    if (!file) return;\r\n\r\n    file = FileStore.get(file.id) || file;\r\n    if (fileCancel && file.local.is_downloading_active) {\r\n        FileStore.cancelGetRemoteFile(file.id, message);\r\n        return;\r\n    } else if (fileCancel && file.remote.is_uploading_active) {\r\n        FileStore.cancelUploadFile(file.id, message);\r\n        return;\r\n    } else {\r\n        download(file, message, () => FileStore.updateAudioBlob(chat_id, id, file.id));\r\n    }\r\n\r\n    TdLibController.send({\r\n        '@type': 'openMessageContent',\r\n        chat_id: chat_id,\r\n        message_id: id\r\n    });\r\n\r\n    TdLibController.clientUpdate({\r\n        '@type': 'clientUpdateMediaActive',\r\n        chatId: chat_id,\r\n        messageId: id\r\n    });\r\n}\r\n\r\nfunction openChatPhoto(photo, message, fileCancel) {\r\n    if (!photo) return;\r\n    if (!message) return;\r\n\r\n    const { chat_id, id } = message;\r\n\r\n    const photoSize = getPhotoSize(photo.sizes);\r\n    if (!photoSize) return;\r\n\r\n    let { photo: file } = photoSize;\r\n    if (!file) return;\r\n\r\n    file = FileStore.get(file.id) || file;\r\n    if (fileCancel && file.local.is_downloading_active) {\r\n        FileStore.cancelGetRemoteFile(file.id, message);\r\n        return;\r\n    } else if (fileCancel && file.remote.is_uploading_active) {\r\n        FileStore.cancelUploadFile(file.id, message);\r\n        return;\r\n    }\r\n\r\n    download(file, message, () => FileStore.updatePhotoBlob(chat_id, id, file.id));\r\n\r\n    TdLibController.send({\r\n        '@type': 'openMessageContent',\r\n        chat_id: chat_id,\r\n        message_id: id\r\n    });\r\n\r\n    ApplicationStore.setMediaViewerContent({\r\n        chatId: chat_id,\r\n        messageId: id\r\n    });\r\n}\r\n\r\nfunction openContact(contact, message, fileCancel) {\r\n    if (!contact) return;\r\n    if (!message) return;\r\n\r\n    const { chat_id, id } = message;\r\n\r\n    TdLibController.send({\r\n        '@type': 'openMessageContent',\r\n        chat_id: chat_id,\r\n        message_id: id\r\n    });\r\n\r\n    openUser(contact.userId);\r\n}\r\n\r\nfunction openDocument(document, message, fileCancel) {\r\n    if (!document) return;\r\n    if (!message) return;\r\n\r\n    const { chat_id, id } = message;\r\n\r\n    let { document: file } = document;\r\n    if (!file) return;\r\n\r\n    file = FileStore.get(file.id) || file;\r\n    if (fileCancel && file.local.is_downloading_active) {\r\n        FileStore.cancelGetRemoteFile(file.id, message);\r\n        return;\r\n    } else if (fileCancel && file.remote.is_uploading_active) {\r\n        FileStore.cancelUploadFile(file.id, message);\r\n        return;\r\n    }\r\n\r\n    TdLibController.send({\r\n        '@type': 'openMessageContent',\r\n        chat_id: chat_id,\r\n        message_id: id\r\n    });\r\n\r\n    if (isLottieMessage(chat_id, id)) {\r\n        TdLibController.send({\r\n            '@type': 'openMessageContent',\r\n            chat_id: chat_id,\r\n            message_id: id\r\n        });\r\n\r\n        ApplicationStore.setMediaViewerContent({\r\n            chatId: chat_id,\r\n            messageId: id\r\n        });\r\n    } else {\r\n        saveOrDownload(file, document.file_name, message);\r\n    }\r\n}\r\n\r\nfunction openGame(game, message, fileCancel) {\r\n    if (!game) return;\r\n    if (!message) return;\r\n\r\n    const { chat_id, id } = message;\r\n\r\n    const { animation } = game;\r\n    if (animation) {\r\n        let { animation: file } = animation;\r\n        if (!file) return;\r\n\r\n        file = FileStore.get(file.id) || file;\r\n        if (fileCancel && file.local.is_downloading_active) {\r\n            FileStore.cancelGetRemoteFile(file.id, message);\r\n            return;\r\n        } else if (fileCancel && file.remote.is_uploading_active) {\r\n            FileStore.cancelUploadFile(file.id, message);\r\n            return;\r\n        }\r\n\r\n        download(file, message, () => FileStore.updateAnimationBlob(chat_id, id, file.id));\r\n    }\r\n\r\n    TdLibController.send({\r\n        '@type': 'openMessageContent',\r\n        chat_id: chat_id,\r\n        message_id: id\r\n    });\r\n\r\n    TdLibController.clientUpdate({\r\n        '@type': 'clientUpdateActiveAnimation',\r\n        chatId: chat_id,\r\n        messageId: id\r\n    });\r\n}\r\n\r\nfunction openPhoto(photo, message, fileCancel) {\r\n    if (!photo) return;\r\n    if (!message) return;\r\n\r\n    const { chat_id, id } = message;\r\n\r\n    const photoSize = getPhotoSize(photo.sizes);\r\n    if (!photoSize) return;\r\n\r\n    let { photo: file } = photoSize;\r\n    if (!file) return;\r\n\r\n    file = FileStore.get(file.id) || file;\r\n    if (fileCancel && file.local.is_downloading_active) {\r\n        FileStore.cancelGetRemoteFile(file.id, message);\r\n        return;\r\n    } else if (fileCancel && file.remote.is_uploading_active) {\r\n        FileStore.cancelUploadFile(file.id, message);\r\n        return;\r\n    }\r\n\r\n    download(file, message, () => FileStore.updatePhotoBlob(chat_id, id, file.id));\r\n\r\n    TdLibController.send({\r\n        '@type': 'openMessageContent',\r\n        chat_id: chat_id,\r\n        message_id: id\r\n    });\r\n\r\n    ApplicationStore.setMediaViewerContent({\r\n        chatId: chat_id,\r\n        messageId: id\r\n    });\r\n}\r\n\r\nasync function openSticker(sticker, message, fileCancel) {\r\n    if (!sticker) return;\r\n    if (!message) return;\r\n\r\n    const { chat_id, id } = message;\r\n\r\n    TdLibController.send({\r\n        '@type': 'openMessageContent',\r\n        chat_id: chat_id,\r\n        message_id: id\r\n    });\r\n\r\n    const { set_id } = sticker;\r\n    if (!set_id) return;\r\n\r\n    const stickerSet = await TdLibController.send({\r\n        '@type': 'getStickerSet',\r\n        set_id\r\n    });\r\n\r\n    if (!stickerSet) return;\r\n\r\n    TdLibController.clientUpdate({\r\n        '@type': 'clientUpdateStickerSet',\r\n        stickerSet\r\n    });\r\n}\r\n\r\nfunction openVideo(video, message, fileCancel) {\r\n    if (!video) return;\r\n    if (!message) return;\r\n\r\n    const { chat_id, id } = message;\r\n\r\n    let { video: file } = video;\r\n    if (!file) return;\r\n\r\n    file = FileStore.get(file.id) || file;\r\n    if (fileCancel && file.local.is_downloading_active) {\r\n        FileStore.cancelGetRemoteFile(file.id, message);\r\n        return;\r\n    } else if (fileCancel && file.remote.is_uploading_active) {\r\n        FileStore.cancelUploadFile(file.id, message);\r\n        return;\r\n    }\r\n\r\n    TdLibController.send({\r\n        '@type': 'openMessageContent',\r\n        chat_id: chat_id,\r\n        message_id: id\r\n    });\r\n\r\n    ApplicationStore.setMediaViewerContent({\r\n        chatId: chat_id,\r\n        messageId: id\r\n    });\r\n}\r\n\r\nfunction openVideoNote(videoNote, message, fileCancel) {\r\n    if (!videoNote) return;\r\n    if (!message) return;\r\n\r\n    const { chat_id, id } = message;\r\n\r\n    let { video: file } = videoNote;\r\n    if (!file) return;\r\n\r\n    file = FileStore.get(file.id) || file;\r\n    if (fileCancel && file.local.is_downloading_active) {\r\n        FileStore.cancelGetRemoteFile(file.id, message);\r\n        return;\r\n    } else if (fileCancel && file.remote.is_uploading_active) {\r\n        FileStore.cancelUploadFile(file.id, message);\r\n        return;\r\n    }\r\n\r\n    download(file, message, () => FileStore.updateVideoNoteBlob(chat_id, id, file.id));\r\n\r\n    TdLibController.send({\r\n        '@type': 'openMessageContent',\r\n        chat_id: chat_id,\r\n        message_id: id\r\n    });\r\n\r\n    TdLibController.clientUpdate({\r\n        '@type': 'clientUpdateMediaActive',\r\n        chatId: chat_id,\r\n        messageId: id\r\n    });\r\n}\r\n\r\nfunction openVoiceNote(voiceNote, message, fileCancel) {\r\n    if (!voiceNote) return;\r\n    if (!message) return;\r\n\r\n    const { chat_id, id } = message;\r\n\r\n    let { voice: file } = voiceNote;\r\n    if (!file) return;\r\n\r\n    file = FileStore.get(file.id) || file;\r\n    if (fileCancel && file.local.is_downloading_active) {\r\n        FileStore.cancelGetRemoteFile(file.id, message);\r\n        return;\r\n    } else if (fileCancel && file.remote.is_uploading_active) {\r\n        FileStore.cancelUploadFile(file.id, message);\r\n        return;\r\n    } else {\r\n        download(file, message, () => FileStore.updateVoiceNoteBlob(chat_id, id, file.id));\r\n    }\r\n\r\n    TdLibController.send({\r\n        '@type': 'openMessageContent',\r\n        chat_id: chat_id,\r\n        message_id: id\r\n    });\r\n\r\n    TdLibController.clientUpdate({\r\n        '@type': 'clientUpdateMediaActive',\r\n        chatId: chat_id,\r\n        messageId: id\r\n    });\r\n}\r\n\r\nfunction openMedia(chatId, messageId, fileCancel = true) {\r\n    const message = MessageStore.get(chatId, messageId);\r\n    if (!message) return;\r\n\r\n    const { content } = message;\r\n    if (!content) return null;\r\n\r\n    switch (content['@type']) {\r\n        case 'messageAnimation': {\r\n            const { animation } = content;\r\n            if (animation) {\r\n                openAnimation(animation, message, fileCancel);\r\n            }\r\n\r\n            break;\r\n        }\r\n        case 'messageAudio': {\r\n            const { audio } = content;\r\n            if (audio) {\r\n                openAudio(audio, message, fileCancel);\r\n            }\r\n\r\n            break;\r\n        }\r\n        case 'messageChatChangePhoto': {\r\n            const { photo } = content;\r\n            if (photo) {\r\n                openChatPhoto(photo, message, fileCancel);\r\n            }\r\n\r\n            break;\r\n        }\r\n        case 'messageContact': {\r\n            const { contact } = content;\r\n            if (contact) {\r\n                openContact(contact, message, fileCancel);\r\n            }\r\n\r\n            break;\r\n        }\r\n        case 'messageDocument': {\r\n            const { document } = content;\r\n            if (document) {\r\n                openDocument(document, message, fileCancel);\r\n            }\r\n\r\n            break;\r\n        }\r\n        case 'messageGame': {\r\n            const { game } = content;\r\n            if (game) {\r\n                openGame(game, message, fileCancel);\r\n            }\r\n\r\n            break;\r\n        }\r\n        case 'messagePhoto': {\r\n            const { photo } = content;\r\n            if (photo) {\r\n                openPhoto(photo, message, fileCancel);\r\n            }\r\n\r\n            break;\r\n        }\r\n        case 'messageSticker': {\r\n            const { sticker } = content;\r\n            if (sticker) {\r\n                openSticker(sticker, message, fileCancel);\r\n            }\r\n\r\n            break;\r\n        }\r\n        case 'messageText': {\r\n            const { web_page } = content;\r\n            if (web_page) {\r\n                const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\r\n\r\n                if (animation) {\r\n                    openAnimation(animation, message, fileCancel);\r\n                }\r\n\r\n                if (audio) {\r\n                    openAudio(audio, message, fileCancel);\r\n                }\r\n\r\n                if (document) {\r\n                    openDocument(document, message, fileCancel);\r\n                }\r\n\r\n                if (sticker) {\r\n                    openSticker(sticker, message, fileCancel);\r\n                }\r\n\r\n                if (video) {\r\n                    openVideo(video, message, fileCancel);\r\n                }\r\n\r\n                if (video_note) {\r\n                    openVideoNote(video_note, message, fileCancel);\r\n                }\r\n\r\n                if (voice_note) {\r\n                    openVoiceNote(voice_note, message, fileCancel);\r\n                }\r\n\r\n                if (photo) {\r\n                    openPhoto(photo, message, fileCancel);\r\n                }\r\n            }\r\n\r\n            break;\r\n        }\r\n        case 'messageVideo': {\r\n            const { video } = content;\r\n            if (video) {\r\n                openVideo(video, message, fileCancel);\r\n            }\r\n\r\n            break;\r\n        }\r\n        case 'messageVideoNote': {\r\n            const { video_note } = content;\r\n            if (video_note) {\r\n                openVideoNote(video_note, message, fileCancel);\r\n            }\r\n\r\n            break;\r\n        }\r\n        case 'messageVoiceNote': {\r\n            const { voice_note } = content;\r\n            if (voice_note) {\r\n                openVoiceNote(voice_note, message, fileCancel);\r\n            }\r\n\r\n            break;\r\n        }\r\n    }\r\n}\r\n\r\nfunction isDeletedMessage(message) {\r\n    return message && message['@type'] === 'deletedMessage';\r\n}\r\n\r\nfunction getReplyPhotoSize(chatId, messageId) {\r\n    const message = MessageStore.get(chatId, messageId);\r\n    if (!message) return;\r\n\r\n    const { content } = message;\r\n    if (!content) return null;\r\n\r\n    switch (content['@type']) {\r\n        case 'messageAnimation': {\r\n            const { animation } = content;\r\n            if (!animation) return null;\r\n\r\n            const { thumbnail } = animation;\r\n            return thumbnail || null;\r\n        }\r\n        case 'messageAudio': {\r\n            const { audio } = content;\r\n            if (!audio) return null;\r\n\r\n            const { album_cover_thumbnail } = audio;\r\n            return album_cover_thumbnail || null;\r\n        }\r\n        case 'messageChatChangePhoto': {\r\n            const { photo } = content;\r\n            if (!photo) return null;\r\n\r\n            return getPhotoSize(photo.sizes);\r\n        }\r\n        case 'messageDocument': {\r\n            const { document } = content;\r\n            if (!document) return null;\r\n\r\n            const { thumbnail } = document;\r\n            return thumbnail || null;\r\n        }\r\n        case 'messageGame': {\r\n            const { game } = content;\r\n            if (!game) return null;\r\n\r\n            const { animation, photo } = game;\r\n            if (animation) {\r\n                const { thumbnail } = animation;\r\n                if (thumbnail) {\r\n                    return thumbnail;\r\n                }\r\n            }\r\n\r\n            if (photo) {\r\n                return getPhotoSize(photo.sizes);\r\n            }\r\n\r\n            return null;\r\n        }\r\n        case 'messagePhoto': {\r\n            const { photo } = content;\r\n            if (!photo) return null;\r\n\r\n            return getPhotoSize(photo.sizes);\r\n        }\r\n        case 'messageSticker': {\r\n            const { sticker } = content;\r\n            if (!sticker) return null;\r\n\r\n            const { thumbnail } = sticker;\r\n            return thumbnail || null;\r\n        }\r\n        case 'messageText': {\r\n            const { web_page } = content;\r\n            if (web_page) {\r\n                const { animation, audio, document, photo, sticker, video, video_note } = web_page;\r\n                if (photo) {\r\n                    return getPhotoSize(photo.sizes);\r\n                }\r\n                if (animation) {\r\n                    const { thumbnail } = animation;\r\n                    return thumbnail || null;\r\n                }\r\n                if (audio) {\r\n                    const { album_cover_thumbnail } = audio;\r\n                    return album_cover_thumbnail || null;\r\n                }\r\n                if (document) {\r\n                    const { thumbnail } = document;\r\n                    return thumbnail || null;\r\n                }\r\n                if (sticker) {\r\n                    const { thumbnail } = sticker;\r\n                    return thumbnail || null;\r\n                }\r\n                if (video) {\r\n                    const { thumbnail } = video;\r\n                    return thumbnail || null;\r\n                }\r\n                if (video_note) {\r\n                    const { thumbnail } = video_note;\r\n                    return thumbnail || null;\r\n                }\r\n            }\r\n\r\n            break;\r\n        }\r\n        case 'messageVideo': {\r\n            const { video } = content;\r\n            if (!video) return null;\r\n\r\n            const { thumbnail } = video;\r\n            return thumbnail || null;\r\n        }\r\n        case 'messageVideoNote': {\r\n            const { video_note } = content;\r\n            if (!video_note) return null;\r\n\r\n            const { thumbnail } = video_note;\r\n            return thumbnail || null;\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport {\r\n    getAuthor,\r\n    getTitle,\r\n    getText,\r\n    getFormattedText,\r\n    getWebPage,\r\n    getContent,\r\n    getDate,\r\n    getDateHint,\r\n    getMedia,\r\n    isForwardOriginHidden,\r\n    getForwardTitle,\r\n    getUnread,\r\n    getSenderUserId,\r\n    filterMessages,\r\n    isMediaContent,\r\n    isDeletedMessage,\r\n    isVideoMessage,\r\n    isAnimationMessage,\r\n    isLottieMessage,\r\n    getLocationId,\r\n    isContentOpened,\r\n    getMediaTitle,\r\n    hasAudio,\r\n    hasVideoNote,\r\n    getSearchMessagesFilter,\r\n    openMedia,\r\n    getReplyPhotoSize\r\n};\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport { EventEmitter } from 'events';\r\nimport Cookies from 'universal-cookie';\r\nimport { getSearchMessagesFilter, openMedia } from '../Utils/Message';\r\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_VOLUME_NORMAL } from '../Constants';\r\nimport MessageStore from './MessageStore';\r\nimport TdLibController from '../Controllers/TdLibController';\r\nimport { getRandomInt } from '../Utils/Common';\r\n\r\nconst RepeatEnum = Object.freeze({\r\n    NONE: 'NONE',\r\n    REPEAT: 'REPEAT',\r\n    REPEAT_ONE: 'REPEAT_ONE'\r\n});\r\n\r\nexport { RepeatEnum };\r\n\r\nclass PlayerStore extends EventEmitter {\r\n    constructor() {\r\n        super();\r\n\r\n        const cookies = new Cookies();\r\n        let playbackRate = cookies.get('playbackRate');\r\n        let volume = cookies.get('volume');\r\n        playbackRate =\r\n            playbackRate && Number(playbackRate) >= 1 && Number(playbackRate) <= 2\r\n                ? Number(playbackRate)\r\n                : PLAYER_PLAYBACKRATE_NORMAL;\r\n        volume = volume && Number(volume) >= 0 && Number(volume) <= 1 ? Number(volume) : PLAYER_VOLUME_NORMAL;\r\n\r\n        this.playbackRate = playbackRate;\r\n        this.volume = volume;\r\n        this.repeat = RepeatEnum.NONE;\r\n        this.shuffle = false;\r\n\r\n        this.playlist = null;\r\n        this.message = null;\r\n        this.time = null;\r\n        this.videoStream = null;\r\n\r\n        this.addTdLibListener();\r\n        this.setMaxListeners(Infinity);\r\n    }\r\n\r\n    addTdLibListener = () => {\r\n        TdLibController.addListener('update', this.onUpdate);\r\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\r\n    };\r\n\r\n    removeTdLibListener = () => {\r\n        TdLibController.removeListener('update', this.onUpdate);\r\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\r\n    };\r\n\r\n    onUpdate = async update => {\r\n        switch (update['@type']) {\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    close = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaClose'\r\n        });\r\n    };\r\n\r\n    onClientUpdate = update => {\r\n        switch (update['@type']) {\r\n            case 'clientUpdateMediaClose': {\r\n                this.playlist = null;\r\n                this.message = null;\r\n                this.time = null;\r\n                this.videoStream = null;\r\n\r\n                this.emit(update['@type'], update);\r\n                break;\r\n            }\r\n            case 'clientUpdateMediaActive': {\r\n                const { chatId, messageId } = update;\r\n\r\n                const message = MessageStore.get(chatId, messageId);\r\n                if (!message) return;\r\n\r\n                this.message = message;\r\n\r\n                this.emit(update['@type'], update);\r\n\r\n                this.getPlaylist(chatId, messageId);\r\n                break;\r\n            }\r\n            case 'clientUpdateMediaVolume': {\r\n                const { volume } = update;\r\n\r\n                this.volume = volume;\r\n\r\n                const cookies = new Cookies();\r\n                cookies.set('volume', volume);\r\n\r\n                this.emit(update['@type'], update);\r\n                break;\r\n            }\r\n            case 'clientUpdateMediaRepeat': {\r\n                const { repeat } = update;\r\n\r\n                this.repeat = repeat;\r\n\r\n                this.emit(update['@type'], update);\r\n                break;\r\n            }\r\n            case 'clientUpdateMediaShuffle': {\r\n                const { shuffle } = update;\r\n\r\n                this.shuffle = shuffle;\r\n\r\n                this.emit(update['@type'], update);\r\n                break;\r\n            }\r\n            case 'clientUpdateMediaPlaybackRate': {\r\n                const { playbackRate } = update;\r\n\r\n                this.playbackRate = playbackRate;\r\n\r\n                const cookies = new Cookies();\r\n                cookies.set('playbackRate', playbackRate);\r\n\r\n                this.emit(update['@type'], update);\r\n                break;\r\n            }\r\n            case 'clientUpdateMediaPlay': {\r\n                this.playing = true;\r\n\r\n                this.emit(update['@type'], update);\r\n                break;\r\n            }\r\n            case 'clientUpdateMediaTitleMouseOver': {\r\n                this.emit(update['@type'], update);\r\n                break;\r\n            }\r\n            case 'clientUpdateMediaPause': {\r\n                this.playing = false;\r\n\r\n                this.emit(update['@type'], update);\r\n                break;\r\n            }\r\n            case 'clientUpdateMediaStop': {\r\n                this.emit(update['@type'], update);\r\n                break;\r\n            }\r\n            case 'clientUpdateMediaNext': {\r\n                this.emit(update['@type'], update);\r\n\r\n                this.moveToNextMedia(false);\r\n                break;\r\n            }\r\n            case 'clientUpdateMediaPrev': {\r\n                this.emit(update['@type'], update);\r\n\r\n                this.moveToPrevMedia();\r\n                break;\r\n            }\r\n            case 'clientUpdateMediaEnding': {\r\n                this.emit(update['@type'], update);\r\n                break;\r\n            }\r\n            case 'clientUpdateMediaEnd': {\r\n                this.emit(update['@type'], update);\r\n\r\n                if (update.moveNext) {\r\n                    if (this.moveToNextMedia(true)) {\r\n                    } else {\r\n                        this.close();\r\n                    }\r\n                } else {\r\n                    this.close();\r\n                }\r\n                break;\r\n            }\r\n            case 'clientUpdateMediaTime': {\r\n                const { duration, currentTime, timestamp } = update;\r\n\r\n                this.time = {\r\n                    currentTime: currentTime,\r\n                    duration: duration,\r\n                    timestamp: timestamp\r\n                };\r\n\r\n                this.emit(update['@type'], update);\r\n                break;\r\n            }\r\n            case 'clientUpdateMediaCaptureStream': {\r\n                this.videoStream = update.stream;\r\n\r\n                this.emit(update['@type'], update);\r\n                break;\r\n            }\r\n            case 'clientUpdateMediaViewerPlay': {\r\n                this.emit(update['@type'], update);\r\n                break;\r\n            }\r\n            case 'clientUpdateMediaViewerPause': {\r\n                this.emit(update['@type'], update);\r\n                break;\r\n            }\r\n            case 'clientUpdateMediaViewerEnded': {\r\n                this.emit(update['@type'], update);\r\n                break;\r\n            }\r\n            case 'clientUpdateMediaPlaylistLoading': {\r\n                this.emit(update['@type'], update);\r\n                break;\r\n            }\r\n            case 'clientUpdateMediaPlaylistPrev': {\r\n                this.emit(update['@type'], update);\r\n                break;\r\n            }\r\n            case 'clientUpdateMediaPlaylist': {\r\n                this.emit(update['@type'], update);\r\n                break;\r\n            }\r\n            case 'clientUpdateMediaPlaylistNext': {\r\n                this.emit(update['@type'], update);\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    moveToPrevMedia = () => {\r\n        if (!this.playlist) return;\r\n        if (!this.message) return;\r\n\r\n        const { chat_id, id } = this.message;\r\n        const { messages } = this.playlist;\r\n        if (!messages) return;\r\n\r\n        const index = messages.findIndex(x => x.chat_id === chat_id && x.id === id);\r\n        if (index === -1) return;\r\n\r\n        if (index + 1 < messages.length) {\r\n            const message = messages[index + 1];\r\n\r\n            openMedia(message.chat_id, message.id, false);\r\n        }\r\n    };\r\n\r\n    moveToNextMedia = useRepeatShuffle => {\r\n        if (!this.playlist) return false;\r\n        if (!this.message) return false;\r\n\r\n        const { chat_id, id } = this.message;\r\n        const { messages } = this.playlist;\r\n        if (!messages) return false;\r\n\r\n        const index = messages.findIndex(x => x.chat_id === chat_id && x.id === id);\r\n        if (index === -1) return false;\r\n\r\n        let nextIndex = -1;\r\n        if (!useRepeatShuffle) {\r\n            nextIndex = index - 1;\r\n        } else {\r\n            switch (this.repeat) {\r\n                case RepeatEnum.NONE: {\r\n                    if (this.shuffle) {\r\n                        nextIndex = getRandomInt(0, messages.length);\r\n                    } else {\r\n                        nextIndex = index - 1;\r\n                    }\r\n                    break;\r\n                }\r\n                case RepeatEnum.REPEAT_ONE: {\r\n                    nextIndex = index;\r\n                    break;\r\n                }\r\n                case RepeatEnum.REPEAT: {\r\n                    if (this.shuffle) {\r\n                        nextIndex = getRandomInt(0, messages.length);\r\n                    } else {\r\n                        nextIndex = index - 1 >= 0 ? index - 1 : messages.length - 1;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (nextIndex >= 0) {\r\n            const message = messages[nextIndex];\r\n\r\n            openMedia(message.chat_id, message.id, false);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    getPlaylist = async (chatId, messageId) => {\r\n        const { playlist: currentPlaylist } = this;\r\n\r\n        if (currentPlaylist) {\r\n            const { messages } = currentPlaylist;\r\n            if (messages && messages.findIndex(x => x.chat_id === chatId && x.id === messageId) !== -1) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaPlaylistLoading',\r\n            chatId: chatId,\r\n            messageId: messageId\r\n        });\r\n\r\n        const filter = getSearchMessagesFilter(chatId, messageId);\r\n        if (!filter) {\r\n            this.playlist = {\r\n                chatId: chatId,\r\n                messageId: messageId,\r\n                totalCount: 1,\r\n                messages: [MessageStore.get(chatId, messageId)]\r\n            };\r\n\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaPlaylist',\r\n                playlist: this.playlist\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: chatId,\r\n            query: '',\r\n            sender_user_id: 0,\r\n            from_message_id: messageId,\r\n            offset: -50,\r\n            limit: 100,\r\n            filter: filter\r\n        });\r\n\r\n        MessageStore.setItems(result.messages);\r\n\r\n        const { total_count, messages } = result;\r\n\r\n        this.playlist = {\r\n            chatId: chatId,\r\n            messageId: messageId,\r\n            totalCount: total_count,\r\n            messages: messages\r\n        };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaPlaylist',\r\n            playlist: this.playlist\r\n        });\r\n    };\r\n}\r\n\r\nconst store = new PlayerStore();\r\nwindow.player = store;\r\nexport default store;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport TdLibController from '../Controllers/TdLibController';\r\n\r\nexport function openUser(userId, popup = false) {\r\n    TdLibController.clientUpdate({\r\n        '@type': 'clientUpdateOpenUser',\r\n        userId,\r\n        popup\r\n    });\r\n}\r\n\r\nexport function openChat(chatId, messageId = null, popup = false) {\r\n    TdLibController.clientUpdate({\r\n        '@type': 'clientUpdateOpenChat',\r\n        chatId,\r\n        messageId,\r\n        popup\r\n    });\r\n}\r\n\r\nexport function highlightMessage(chatId, messageId) {\r\n    TdLibController.clientUpdate({\r\n        '@type': 'clientUpdateMessageHighlighted',\r\n        chatId,\r\n        messageId\r\n    });\r\n}\r\n\r\nexport function selectMessage(chatId, messageId, selected) {\r\n    TdLibController.clientUpdate({\r\n        '@type': 'clientUpdateMessageSelected',\r\n        chatId,\r\n        messageId,\r\n        selected\r\n    });\r\n}\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport dateFormat from 'dateformat';\r\nimport { getLetters, getSize } from './Common';\r\nimport { PROFILE_PHOTO_BIG_SIZE, PROFILE_PHOTO_SMALL_SIZE, SERVICE_NOTIFICATIONS_USER_ID } from '../Constants';\r\nimport UserStore from '../Stores/UserStore';\r\n\r\nfunction getUserStatus(user) {\r\n    if (!user) return null;\r\n    if (!user.status) return null;\r\n\r\n    if (user.id === SERVICE_NOTIFICATIONS_USER_ID) {\r\n        return 'service notifications';\r\n    }\r\n\r\n    if (user.type && user.type['@type'] === 'userTypeBot') {\r\n        return 'bot';\r\n    }\r\n\r\n    switch (user.status['@type']) {\r\n        case 'userStatusEmpty': {\r\n            return 'last seen a long time ago';\r\n        }\r\n        case 'userStatusLastMonth': {\r\n            return 'last seen within a month';\r\n        }\r\n        case 'userStatusLastWeek': {\r\n            return 'last seen within a week';\r\n        }\r\n        case 'userStatusOffline': {\r\n            let { was_online } = user.status;\r\n            if (!was_online) return 'offline';\r\n\r\n            const now = new Date();\r\n            const wasOnline = new Date(was_online * 1000);\r\n            if (wasOnline > now) {\r\n                return 'last seen just now';\r\n            }\r\n\r\n            let diff = new Date(now - wasOnline);\r\n\r\n            // within a minute\r\n            if (diff.getTime() / 1000 < 60) {\r\n                return 'last seen just now';\r\n            }\r\n\r\n            // within an hour\r\n            if (diff.getTime() / 1000 < 60 * 60) {\r\n                const minutes = Math.floor(diff.getTime() / 1000 / 60);\r\n                return `last seen ${minutes === 1 ? '1 minute' : minutes + ' minutes'} ago`;\r\n            }\r\n\r\n            // today\r\n            const today = new Date();\r\n            today.setHours(0, 0, 0, 0);\r\n            if (wasOnline > today) {\r\n                // up to 6 hours ago\r\n                if (diff.getTime() / 1000 < 6 * 60 * 60) {\r\n                    const hours = Math.floor(diff.getTime() / 1000 / 60 / 60);\r\n                    return `last seen ${hours === 1 ? '1 hour' : hours + ' hours'} ago`;\r\n                }\r\n\r\n                // other\r\n                return `last seen today at ${dateFormat(wasOnline, 'H:MM')}`;\r\n            }\r\n\r\n            // yesterday\r\n            let yesterday = new Date();\r\n            yesterday.setDate(now.getDate() - 1);\r\n            today.setHours(0, 0, 0, 0);\r\n            if (wasOnline > yesterday) {\r\n                return `last seen yesterday at ${dateFormat(wasOnline, 'H:MM')}`;\r\n            }\r\n\r\n            return `last seen ${dateFormat(wasOnline, 'dd.mm.yyyy')}`;\r\n        }\r\n        case 'userStatusOnline': {\r\n            return 'online';\r\n        }\r\n        case 'userStatusRecently': {\r\n            return 'last seen recently';\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction isUserOnline(user) {\r\n    if (!user) return false;\r\n\r\n    const { id, status, type } = user;\r\n    if (!status) return false;\r\n    if (!type) return false;\r\n    if (id === SERVICE_NOTIFICATIONS_USER_ID) return false;\r\n\r\n    return status['@type'] === 'userStatusOnline' && type['@type'] !== 'userTypeBot';\r\n}\r\n\r\nfunction getUserFullName(user) {\r\n    if (!user) return null;\r\n    if (!user.type) return null;\r\n\r\n    switch (user.type['@type']) {\r\n        case 'userTypeBot':\r\n        case 'userTypeRegular': {\r\n            if (user.first_name && user.last_name) return `${user.first_name} ${user.last_name}`;\r\n            if (user.first_name) return user.first_name;\r\n            if (user.last_name) return user.last_name;\r\n        }\r\n        case 'userTypeDeleted':\r\n        case 'userTypeUnknown': {\r\n            return 'Deleted account';\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction getUserShortName(userId) {\r\n    const user = UserStore.get(userId);\r\n    if (!user) return null;\r\n    if (!user.type) return null;\r\n\r\n    switch (user.type['@type']) {\r\n        case 'userTypeBot':\r\n        case 'userTypeRegular': {\r\n            if (user.first_name) return user.first_name;\r\n            if (user.last_name) return user.last_name;\r\n        }\r\n        case 'userTypeDeleted':\r\n        case 'userTypeUnknown': {\r\n            return 'Deleted account';\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction isUserBlocked(userId) {\r\n    const fullInfo = UserStore.getFullInfo(userId);\r\n    if (fullInfo) {\r\n        return fullInfo.is_blocked;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction getUserLetters(user) {\r\n    if (!user) return null;\r\n\r\n    let title = getUserFullName(user);\r\n    let letters = getLetters(title);\r\n    if (letters && letters.length > 0) {\r\n        return letters;\r\n    }\r\n\r\n    return user.first_name ? user.first_name.charAt(0) : user.last_name ? user.last_name.charAt(0) : '';\r\n}\r\n\r\nfunction getUserStatusOrder(user) {\r\n    if (!user) return 0;\r\n    if (!user.status) return 0;\r\n    if (user.type['@type'] === 'userTypeBot') return 0;\r\n\r\n    switch (user.status['@type']) {\r\n        case 'userStatusEmpty': {\r\n            return 1;\r\n        }\r\n        case 'userStatusLastMonth': {\r\n            return 10;\r\n        }\r\n        case 'userStatusLastWeek': {\r\n            return 100;\r\n        }\r\n        case 'userStatusOffline': {\r\n            return user.status.was_online;\r\n        }\r\n        case 'userStatusOnline': {\r\n            return user.status.expires;\r\n        }\r\n        case 'userStatusRecently': {\r\n            return 1000;\r\n        }\r\n    }\r\n}\r\n\r\nfunction getProfilePhoto(userProfilePhoto) {\r\n    if (!userProfilePhoto) return null;\r\n\r\n    const { id, sizes } = userProfilePhoto;\r\n    if (!sizes) return null;\r\n    if (!sizes.length) return null;\r\n\r\n    const smallPhotoSize = getSize(sizes, PROFILE_PHOTO_SMALL_SIZE);\r\n    const bigPhotoSize = getSize(sizes, PROFILE_PHOTO_BIG_SIZE);\r\n\r\n    return {\r\n        '@type': 'profilePhoto',\r\n        id: id,\r\n        small: smallPhotoSize.photo,\r\n        big: bigPhotoSize.photo\r\n    };\r\n}\r\n\r\nfunction getProfilePhotoDateHint(userProfilePhoto) {\r\n    if (!userProfilePhoto) return null;\r\n\r\n    const { added_date } = userProfilePhoto;\r\n    if (!added_date) return null;\r\n\r\n    const date = new Date(added_date * 1000);\r\n    return dateFormat(date, 'H:MM:ss d.mm.yyyy');\r\n}\r\n\r\nexport {\r\n    getUserStatus,\r\n    isUserOnline,\r\n    getUserFullName,\r\n    isUserBlocked,\r\n    getUserLetters,\r\n    getUserStatusOrder,\r\n    getProfilePhoto,\r\n    getProfilePhotoDateHint,\r\n    getUserShortName\r\n};\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport { EventEmitter } from 'events';\r\nimport TdLibController from '../Controllers/TdLibController';\r\n\r\nclass SupergroupStore extends EventEmitter {\r\n    constructor() {\r\n        super();\r\n\r\n        this.items = new Map();\r\n        this.fullInfoItems = new Map();\r\n\r\n        this.addTdLibListener();\r\n        this.setMaxListeners(Infinity);\r\n    }\r\n\r\n    onUpdate = update => {\r\n        switch (update['@type']) {\r\n            case 'updateSupergroup':\r\n                this.set(update.supergroup);\r\n\r\n                this.emit(update['@type'], update);\r\n                break;\r\n            case 'updateSupergroupFullInfo':\r\n                this.setFullInfo(update.supergroup_id, update.supergroup_full_info);\r\n\r\n                this.emit(update['@type'], update);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    onClientUpdate = update => {};\r\n\r\n    addTdLibListener = () => {\r\n        TdLibController.addListener('update', this.onUpdate);\r\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\r\n    };\r\n\r\n    removeTdLibListener = () => {\r\n        TdLibController.removeListener('update', this.onUpdate);\r\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\r\n    };\r\n\r\n    get(id) {\r\n        return this.items.get(id);\r\n    }\r\n\r\n    set(supergroup) {\r\n        this.items.set(supergroup.id, supergroup);\r\n    }\r\n\r\n    getFullInfo(id) {\r\n        return this.fullInfoItems.get(id);\r\n    }\r\n\r\n    setFullInfo(id, fullInfo) {\r\n        this.fullInfoItems.set(id, fullInfo);\r\n    }\r\n}\r\n\r\nconst store = new SupergroupStore();\r\nwindow.supergroup = store;\r\nexport default store;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport { THUMBNAIL_BLURRED_SIZE } from '../Constants';\r\n\r\nfunction isBlurredThumbnail(thumbnail) {\r\n    if (!thumbnail) return false;\r\n\r\n    return Math.max(thumbnail.width, thumbnail.height) < THUMBNAIL_BLURRED_SIZE;\r\n}\r\n\r\nfunction getAudioTitle(audio) {\r\n    if (!audio) return null;\r\n\r\n    const { file_name, title, performer } = audio;\r\n    const trimmedTitle = title ? title.trim() : '';\r\n    const trimmedPerformer = performer ? performer.trim() : '';\r\n\r\n    return trimmedTitle || trimmedPerformer\r\n        ? `${trimmedPerformer || 'Unknown Artist'} — ${trimmedTitle || 'Unknown Track'}`\r\n        : file_name;\r\n}\r\n\r\nfunction getStickers(sets) {\r\n    return sets.reduce((stickers, set) => stickers.concat(set.stickers), []);\r\n}\r\n\r\nfunction getNeighborStickersFromSets(sticker, sets, stickersPerRow) {\r\n    const result = [];\r\n    const [row, column] = toRowColumn(sticker, sets, stickersPerRow);\r\n    if (row === -1) return [];\r\n    if (column === -1) return [];\r\n\r\n    const prevPrevRow = row - 2;\r\n    const prevRow = row - 1;\r\n    const nextRow = row + 1;\r\n    const nextNextRow = row + 2;\r\n\r\n    const prevColumn = column - 1;\r\n    const nextColumn = column + 1;\r\n\r\n    let skipPrevRow = prevRow < 0;\r\n    let skipPrePrevRow = prevPrevRow < 0;\r\n    if (!skipPrevRow) {\r\n        if (prevColumn >= 0) {\r\n            let index = toIndex(prevRow, prevColumn, sets, stickersPerRow);\r\n            if (index === -1) {\r\n                skipPrevRow = true;\r\n                index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, prevColumn, sets, stickersPerRow);\r\n                skipPrePrevRow = index === -1;\r\n            }\r\n            if (index !== -1) {\r\n                result.push(index);\r\n            }\r\n        }\r\n\r\n        let index = skipPrevRow ? -1 : toIndex(prevRow, column, sets, stickersPerRow);\r\n        if (index === -1) {\r\n            skipPrevRow = true;\r\n            index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, column, sets, stickersPerRow);\r\n            skipPrePrevRow = index === -1;\r\n        }\r\n        if (index !== -1) {\r\n            result.push(index);\r\n        }\r\n\r\n        if (nextColumn < stickersPerRow) {\r\n            let index = skipPrevRow ? -1 : toIndex(prevRow, nextColumn, sets, stickersPerRow);\r\n            if (index === -1) {\r\n                index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, nextColumn, sets, stickersPerRow);\r\n            }\r\n            if (index !== -1) {\r\n                result.push(index);\r\n            }\r\n        }\r\n    }\r\n\r\n    if (prevColumn >= 0) {\r\n        const index = toIndex(row, prevColumn, sets, stickersPerRow);\r\n        if (index !== -1) {\r\n            result.push(index);\r\n        }\r\n    }\r\n\r\n    if (nextColumn < stickersPerRow) {\r\n        const index = toIndex(row, nextColumn, sets, stickersPerRow);\r\n        if (index !== -1) {\r\n            result.push(index);\r\n        }\r\n    }\r\n\r\n    let totalRows = sets.reduce((totalRows, set) => totalRows + Math.ceil(set.stickers.length / stickersPerRow), 0);\r\n    let skipNextRow = nextRow >= totalRows;\r\n    let skipNextNextRow = nextRow >= totalRows;\r\n    if (!skipNextRow) {\r\n        if (prevColumn >= 0) {\r\n            let index = toIndex(nextRow, prevColumn, sets, stickersPerRow);\r\n            if (index === -1) {\r\n                skipNextRow = true;\r\n                index = skipNextNextRow ? -1 : toIndex(nextNextRow, prevColumn, sets, stickersPerRow);\r\n                skipNextNextRow = index === -1;\r\n            }\r\n            if (index !== -1) {\r\n                result.push(index);\r\n            }\r\n        }\r\n\r\n        let index = skipNextRow ? -1 : toIndex(nextRow, column, sets, stickersPerRow);\r\n        if (index === -1) {\r\n            skipNextRow = true;\r\n            index = skipNextNextRow ? -1 : toIndex(nextNextRow, column, sets, stickersPerRow);\r\n            skipNextNextRow = index === -1;\r\n        }\r\n        if (index !== -1) {\r\n            result.push(index);\r\n        }\r\n\r\n        if (nextColumn < stickersPerRow) {\r\n            let index = skipNextRow ? -1 : toIndex(nextRow, nextColumn, sets, stickersPerRow);\r\n            if (index === -1) {\r\n                index = skipNextNextRow ? -1 : toIndex(nextNextRow, nextColumn, sets, stickersPerRow);\r\n            }\r\n            if (index !== -1) {\r\n                result.push(index);\r\n            }\r\n        }\r\n    }\r\n\r\n    const items = getStickers(sets);\r\n    return result.map(x => items[x]);\r\n}\r\n\r\nfunction toRowColumn(sticker, sets, stickersPerRow) {\r\n    const setIndex = sets.findIndex(x => x.id === sticker.set_id);\r\n    if (setIndex === -1) return [-1, -1];\r\n\r\n    const stickerIndex = sets[setIndex].stickers.findIndex(x => x.sticker.id === sticker.sticker.id);\r\n    if (stickerIndex === -1) return [-1, -1];\r\n\r\n    let prevRows = 0;\r\n    for (let i = 0; i < setIndex; i++) {\r\n        prevRows += Math.ceil(sets[i].stickers.length / stickersPerRow);\r\n    }\r\n\r\n    return [prevRows + Math.floor(stickerIndex / stickersPerRow), stickerIndex % stickersPerRow];\r\n}\r\n\r\nfunction toIndex(row, column, sets, stickersPerRow) {\r\n    let index = -1;\r\n    let totalRows = 0;\r\n    let setIndex = -1;\r\n    for (let i = 0; i < sets.length; i++) {\r\n        let setRows = Math.ceil(sets[i].stickers.length / stickersPerRow);\r\n        totalRows += setRows;\r\n        if (totalRows > row) {\r\n            setIndex = i;\r\n            break;\r\n        }\r\n    }\r\n    if (setIndex === -1) return index;\r\n\r\n    let setRow = row;\r\n    let setColumn = column;\r\n    for (let i = 0; i < setIndex; i++) {\r\n        let setRows = Math.ceil(sets[i].stickers.length / stickersPerRow);\r\n        setRow -= setRows;\r\n    }\r\n\r\n    index = stickersPerRow * setRow + setColumn;\r\n\r\n    if (index >= sets[setIndex].stickers.length) return -1;\r\n\r\n    for (let i = 0; i < setIndex; i++) {\r\n        index += sets[i].stickers.length;\r\n    }\r\n\r\n    return index;\r\n}\r\n\r\nexport { getAudioTitle, getNeighborStickersFromSets, getStickers, isBlurredThumbnail };\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './FileProgress.css';\r\n\r\nconst circleStyle = { circle: 'file-progress-circle' };\r\n\r\nclass FileProgress extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.completeAnimation = false;\r\n        const { file } = this.props;\r\n        this.state = {\r\n            prevPropsFile: file,\r\n            prevFile: null,\r\n            file: FileStore.get(file.id) || file\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { file } = props;\r\n        const { prevPropsFile } = state;\r\n\r\n        if (file && prevPropsFile && file.id !== prevPropsFile.id) {\r\n            return {\r\n                prevPropsFile: file,\r\n                prevFile: null,\r\n                file: FileStore.get(file.id) || file\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { download, upload, icon, thumbnailSrc } = this.props;\r\n\r\n        if (nextProps.thumbnailSrc !== thumbnailSrc) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.icon !== icon) {\r\n            return true;\r\n        }\r\n\r\n        if (this.isDownloading(nextState.file, nextState.prevFile) && !download) {\r\n            return false;\r\n        }\r\n\r\n        if (this.isUploading(nextState.file, nextState.prevFile) && !upload) {\r\n            return false;\r\n        }\r\n\r\n        const nextLocal = nextState.file ? nextState.file.local : null;\r\n        const nextIdbKey = nextState.file ? nextState.file.idb_key : null;\r\n        const prevLocal = this.state.prevFile ? this.state.prevFile.local : null;\r\n        const prevIdbKey = this.state.prevFile ? this.state.prevFile.idb_key : null;\r\n        const isDownloadingCompleted =\r\n            prevLocal && nextLocal && !prevLocal.is_downloading_completed && nextLocal.is_downloading_completed;\r\n        const receiveIdbKey = nextIdbKey && !prevIdbKey;\r\n\r\n        if (nextState.file.id === this.state.file.id && isDownloadingCompleted && receiveIdbKey) {\r\n            return false;\r\n        }\r\n\r\n        if (nextState.file !== this.state.file) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.prevFile !== this.state.prevFile) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mount = true;\r\n        FileStore.on('updateFile', this.onUpdateFile);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mount = false;\r\n        FileStore.removeListener('updateFile', this.onUpdateFile);\r\n    }\r\n\r\n    onUpdateFile = update => {\r\n        const currentFile = this.state.file;\r\n        const nextFile = update.file;\r\n\r\n        if (currentFile && currentFile.id === nextFile.id) {\r\n            this.setState({ file: nextFile, prevFile: currentFile });\r\n        }\r\n    };\r\n\r\n    isDownloading = (file, prevFile) => {\r\n        if (!this.props.download) return false;\r\n\r\n        const wasActive = prevFile && prevFile.local && prevFile.local.is_downloading_active;\r\n        const isActive = file && file.local && file.local.is_downloading_active;\r\n\r\n        return wasActive || isActive;\r\n    };\r\n\r\n    isUploading = (file, prevFile) => {\r\n        if (!this.props.upload) return false;\r\n\r\n        const wasActive = prevFile && prevFile.remote && prevFile.remote.is_uploading_active;\r\n        const isActive = file && file.remote && file.remote.is_uploading_active;\r\n\r\n        return wasActive || isActive;\r\n    };\r\n\r\n    getProgressParams = (file, prevFile) => {\r\n        const { local, remote } = file;\r\n\r\n        let wasActive = false;\r\n        let isActive = false;\r\n        let isCompleted = false;\r\n        let progressSize = 0;\r\n        let size = 0;\r\n        if (this.isDownloading(file, prevFile)) {\r\n            wasActive = prevFile && prevFile.local && prevFile.local.is_downloading_active;\r\n            isActive = local.is_downloading_active;\r\n            isCompleted = local.is_downloading_completed;\r\n            progressSize = local.downloaded_size;\r\n            size = file.size;\r\n            // console.log(\r\n            //     `FileProgress.getProgressParams isDownloading id=${\r\n            //         file.id\r\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\r\n            //     file,\r\n            //     prevFile\r\n            // );\r\n        } else if (this.isUploading(file, prevFile)) {\r\n            wasActive = prevFile && prevFile.remote && prevFile.remote.is_uploading_active;\r\n            isActive = remote.is_uploading_active;\r\n            isCompleted = remote.is_uploading_completed;\r\n            progressSize = remote.uploaded_size;\r\n            size = file.size;\r\n            // console.log(\r\n            //     `FileProgress.getProgressParams isUploading id=${\r\n            //         file.id\r\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\r\n            //     file,\r\n            //     prevFile\r\n            // );\r\n        } else {\r\n            // console.log(\r\n            //     `FileProgress.getProgressParams none id=${file.id} download=${this.props.download} upload=${\r\n            //         this.props.upload\r\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\r\n            //     file,\r\n            //     prevFile\r\n            // );\r\n        }\r\n\r\n        return [wasActive, isActive, isCompleted, progressSize, size];\r\n    };\r\n\r\n    render() {\r\n        let { thumbnailSrc, cancelButton, zIndex, icon, completeIcon } = this.props;\r\n        const { file, prevFile } = this.state;\r\n        if (!file) return null;\r\n\r\n        const [wasActive, isActive, isCompleted, progressSize, size] = this.getProgressParams(file, prevFile);\r\n\r\n        let inProgress = isActive;\r\n        let progress = 0;\r\n        if (isActive) {\r\n            progress = progressSize && size ? 100 - ((size - progressSize) / size) * 100 : 1;\r\n        }\r\n\r\n        const startCompleteAnimation = wasActive && !isActive;\r\n        if (startCompleteAnimation) {\r\n            this.completeAnimation = true;\r\n            // console.log('FileProgress.render animationComplete=true');\r\n            progress = isCompleted ? 100 : 0;\r\n            inProgress = true;\r\n            setTimeout(() => {\r\n                this.completeAnimation = false;\r\n                if (!this.mount) return;\r\n                // console.log('FileProgress.render animationComplete=false');\r\n\r\n                this.setState({ prevFile: null });\r\n            }, ANIMATION_DURATION_300MS);\r\n        }\r\n\r\n        const style = {\r\n            zIndex: zIndex,\r\n            background: !thumbnailSrc && typeof thumbnailSrc !== 'undefined' ? null : 'rgba(0, 0, 0, 0.25)'\r\n        };\r\n\r\n        const isDownloadingCompleted =\r\n            file &&\r\n            file.local &&\r\n            (file.local.is_downloading_completed || file.idb_key || file.local.is_uploading_completed) &&\r\n            !this.completeAnimation &&\r\n            !isActive;\r\n\r\n        // console.log(\r\n        //     `FileProgress.render \\\\\r\n        //     id=${file.id} showProgress=${inProgress} progress=${progress} \\\\\r\n        //     was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} \\\\\r\n        //     progress_size=${progressSize} size=${size} complete_animation=${this.completeAnimation} \\\\\r\n        //     is_downloading_completed=${isDownloadingCompleted}\r\n        //     completeIcon=${completeIcon}`,\r\n        //     file,\r\n        //     prevFile\r\n        // );\r\n        //cancelButton = true;\r\n        //inProgress = true;\r\n\r\n        if (isDownloadingCompleted) {\r\n            // console.log('FileProgress.render completeIcon');\r\n            if (completeIcon) {\r\n                return (\r\n                    <div className='file-progress' style={style}>\r\n                        <div className='file-progress-icon'>{completeIcon}</div>\r\n                    </div>\r\n                );\r\n            }\r\n\r\n            return null;\r\n        }\r\n\r\n        if (inProgress || this.completeAnimation) {\r\n            // console.log('FileProgress.render inProgressIcon');\r\n            return (\r\n                <div className='file-progress' style={style}>\r\n                    <div className='file-progress-indicator'>\r\n                        <CircularProgress\r\n                            classes={circleStyle}\r\n                            variant='static'\r\n                            value={progress}\r\n                            size={42}\r\n                            thickness={2}\r\n                        />\r\n                    </div>\r\n                    {cancelButton && (\r\n                        <div className='file-progress-icon'>\r\n                            <CloseIcon />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (icon) {\r\n            // console.log('FileProgress.render icon');\r\n            return (\r\n                <div className='file-progress' style={style}>\r\n                    <div className='file-progress-icon'>{icon}</div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n\r\nFileProgress.propTypes = {\r\n    file: PropTypes.object.isRequired,\r\n    thumbnailSrc: PropTypes.object,\r\n    cancelButton: PropTypes.bool,\r\n    download: PropTypes.bool,\r\n    upload: PropTypes.bool,\r\n    zIndex: PropTypes.number,\r\n\r\n    icon: PropTypes.node,\r\n    completeIcon: PropTypes.node\r\n};\r\n\r\nFileProgress.defaultProps = {\r\n    cancelButton: false,\r\n    download: true,\r\n    upload: false\r\n};\r\n\r\nexport default FileProgress;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { isBlurredThumbnail } from '../../../Utils/Media';\r\nimport { getFitSize } from '../../../Utils/Common';\r\nimport { getSrc } from '../../../Utils/File';\r\nimport { STICKER_DISPLAY_SIZE } from '../../../Constants';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport './Sticker.css';\r\n\r\nclass Sticker extends React.Component {\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdateStickerThumbnailBlob);\r\n        FileStore.on('clientUpdateStickerBlob', this.onClientUpdateStickerBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.removeListener('clientUpdateStickerThumbnailBlob', this.onClientUpdateStickerThumbnailBlob);\r\n        FileStore.removeListener('clientUpdateStickerBlob', this.onClientUpdateStickerBlob);\r\n    }\r\n\r\n    onClientUpdateStickerBlob = update => {\r\n        const { sticker } = this.props.sticker;\r\n        const { fileId } = update;\r\n\r\n        if (!sticker) return;\r\n\r\n        if (sticker.id === fileId) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onClientUpdateStickerThumbnailBlob = update => {\r\n        const { thumbnail } = this.props.sticker;\r\n        if (!thumbnail) return;\r\n\r\n        const { fileId } = update;\r\n\r\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { className, displaySize, blur, sticker: source, style, openMedia, preview } = this.props;\r\n        const { thumbnail, sticker, width, height } = source;\r\n\r\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\r\n        const src = getSrc(sticker);\r\n        const isBlurred = isBlurredThumbnail(thumbnail);\r\n\r\n        const fitSize = getFitSize({ width: width, height: height }, displaySize);\r\n        if (!fitSize) return null;\r\n\r\n        const stickerStyle = {\r\n            width: fitSize.width,\r\n            height: fitSize.height,\r\n            ...style\r\n        };\r\n\r\n        return (\r\n            <div className={classNames('sticker', className)} style={stickerStyle} onClick={openMedia}>\r\n                {src && !preview ? (\r\n                    <img className='sticker-image' draggable={false} src={src} alt='' />\r\n                ) : (\r\n                    <img\r\n                        className={classNames('sticker-image', { 'media-blurred': isBlurred && blur })}\r\n                        draggable={false}\r\n                        src={thumbnailSrc}\r\n                        alt=''\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSticker.propTypes = {\r\n    chatId: PropTypes.number,\r\n    messageId: PropTypes.number,\r\n    sticker: PropTypes.object.isRequired,\r\n    openMedia: PropTypes.func,\r\n    blur: PropTypes.bool,\r\n    displaySize: PropTypes.number\r\n};\r\n\r\nSticker.defaultProps = {\r\n    chatId: 0,\r\n    messageId: 0,\r\n    openMedia: () => {},\r\n    blur: true,\r\n    displaySize: STICKER_DISPLAY_SIZE\r\n};\r\n\r\nexport default Sticker;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport { EventEmitter } from 'events';\r\nimport TdLibController from '../Controllers/TdLibController';\r\n\r\nclass BasicGroupStore extends EventEmitter {\r\n    constructor() {\r\n        super();\r\n\r\n        this.items = new Map();\r\n        this.fullInfoItems = new Map();\r\n\r\n        this.addTdLibListener();\r\n        this.setMaxListeners(Infinity);\r\n    }\r\n\r\n    onUpdate = update => {\r\n        switch (update['@type']) {\r\n            case 'updateBasicGroup': {\r\n                this.set(update.basic_group);\r\n\r\n                this.emit(update['@type'], update);\r\n                break;\r\n            }\r\n            case 'updateBasicGroupFullInfo':\r\n                this.setFullInfo(update.basic_group_id, update.basic_group_full_info);\r\n\r\n                this.emit(update['@type'], update);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    onClientUpdate = update => {};\r\n\r\n    addTdLibListener = () => {\r\n        TdLibController.addListener('update', this.onUpdate);\r\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\r\n    };\r\n\r\n    removeTdLibListener = () => {\r\n        TdLibController.removeListener('update', this.onUpdate);\r\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\r\n    };\r\n\r\n    get(groupId) {\r\n        return this.items.get(groupId);\r\n    }\r\n\r\n    set(group) {\r\n        this.items.set(group.id, group);\r\n    }\r\n\r\n    getFullInfo(id) {\r\n        return this.fullInfoItems.get(id);\r\n    }\r\n\r\n    setFullInfo(id, fullInfo) {\r\n        this.fullInfoItems.set(id, fullInfo);\r\n    }\r\n}\r\n\r\nconst store = new BasicGroupStore();\r\nwindow.basicgroup = store;\r\nexport default store;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { getUserLetters } from '../../Utils/User';\r\nimport { loadChatContent } from '../../Utils/File';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './UserTileControl.css';\r\n\r\nclass UserTileControl extends Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if (nextProps.userId !== this.props.userId) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\r\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\r\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\r\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateUserBlob);\r\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateChatBlob);\r\n        ChatStore.removeListener('updateChatPhoto', this.onUpdateChatPhoto);\r\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\r\n    }\r\n\r\n    onClientUpdateUserBlob = update => {\r\n        const { userId } = this.props;\r\n\r\n        if (userId === update.userId) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onClientUpdateChatBlob = update => {\r\n        const { userId } = this.props;\r\n\r\n        const chat = ChatStore.get(update.chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        switch (chat.type['@type']) {\r\n            case 'chatTypeBasicGroup':\r\n            case 'chatTypeSupergroup': {\r\n                return;\r\n            }\r\n            case 'chatTypePrivate':\r\n            case 'chatTypeSecret': {\r\n                if (chat.type.user_id === userId) {\r\n                    //console.log('UserTileControl.onClientUpdateChatBlob user_id=' + userId);\r\n                    this.forceUpdate();\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    onUpdateChatPhoto = update => {\r\n        const { userId } = this.props;\r\n\r\n        const chat = ChatStore.get(update.chat_id);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        switch (chat.type['@type']) {\r\n            case 'chatTypeBasicGroup':\r\n            case 'chatTypeSupergroup': {\r\n                return;\r\n            }\r\n            case 'chatTypePrivate':\r\n            case 'chatTypeSecret': {\r\n                if (chat.type.user_id === userId) {\r\n                    if (!update.photo) {\r\n                        //console.log('UserTileControl.onUpdateChatPhoto user_id=' + userId);\r\n                        this.forceUpdate();\r\n                    } else {\r\n                        const store = FileStore.getStore();\r\n                        loadChatContent(store, chat);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    onUpdateChatTitle = update => {\r\n        const { userId } = this.props;\r\n\r\n        const chat = ChatStore.get(update.chat_id);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        switch (chat.type['@type']) {\r\n            case 'chatTypeBasicGroup':\r\n            case 'chatTypeSupergroup': {\r\n                return;\r\n            }\r\n            case 'chatTypePrivate':\r\n            case 'chatTypeSecret': {\r\n                if (chat.type.user_id === userId && !chat.photo) {\r\n                    //console.log('UserTileControl.onUpdateChatTitle user_id=' + userId);\r\n                    this.forceUpdate();\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    handleSelect = event => {\r\n        const { userId, onSelect } = this.props;\r\n        if (!onSelect) return;\r\n\r\n        event.stopPropagation();\r\n        onSelect(userId);\r\n    };\r\n\r\n    render() {\r\n        const { userId, onSelect } = this.props;\r\n        let { user } = this.props;\r\n        if (!userId && !user) return null;\r\n\r\n        user = UserStore.get(userId) || user;\r\n        if (!user) return null;\r\n\r\n        const { profile_photo } = user;\r\n\r\n        const letters = getUserLetters(user);\r\n        const blob = profile_photo && profile_photo.small ? FileStore.getBlob(profile_photo.small.id) : null;\r\n        const src = FileStore.getBlobUrl(blob);\r\n        const tileColor = `tile_color_${(Math.abs(userId) % 8) + 1}`;\r\n        const className = classNames('tile-photo', { [tileColor]: !blob }, { pointer: onSelect });\r\n\r\n        return src ? (\r\n            <img className={className} src={src} draggable={false} alt='' onClick={this.handleSelect} />\r\n        ) : (\r\n            <div className={className} onClick={this.handleSelect}>\r\n                <span className='tile-text'>{letters}</span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nUserTileControl.propTypes = {\r\n    userId: PropTypes.number.isRequired,\r\n    user: PropTypes.object,\r\n    onSelect: PropTypes.func\r\n};\r\n\r\nexport default UserTileControl;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport { EventEmitter } from 'events';\r\nimport TdLibController from '../Controllers/TdLibController';\r\n\r\nclass StickerStore extends EventEmitter {\r\n    constructor() {\r\n        super();\r\n\r\n        this.stickerSet = null;\r\n        this.hint = null;\r\n\r\n        this.addTdLibListener();\r\n        this.setMaxListeners(Infinity);\r\n    }\r\n\r\n    onUpdate = update => {\r\n        switch (update['@type']) {\r\n            case 'updateInstalledStickerSets': {\r\n                const { sticker_set_ids } = update;\r\n                if (this.stickerSet) {\r\n                    const { id, is_installed } = this.stickerSet;\r\n                    if (is_installed !== sticker_set_ids.some(x => x === id)) {\r\n                        this.stickerSet = Object.assign({}, this.stickerSet, { is_installed: !is_installed });\r\n                    }\r\n                }\r\n\r\n                this.emit('updateInstalledStickerSets', update);\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    onClientUpdate = update => {\r\n        switch (update['@type']) {\r\n            case 'clientUpdateStickerSend': {\r\n                this.emit('clientUpdateStickerSend', update);\r\n                break;\r\n            }\r\n            case 'clientUpdateLocalStickersHint': {\r\n                const { hint } = update;\r\n\r\n                this.hint = hint;\r\n\r\n                this.emit('clientUpdateLocalStickersHint', update);\r\n                break;\r\n            }\r\n            case 'clientUpdateRemoteStickersHint': {\r\n                const { hint } = update;\r\n\r\n                if (this.hint && this.hint.timestamp === hint.timestamp) {\r\n                    this.hint = Object.assign({}, this.hint, { foundStickers: hint.stickers });\r\n                }\r\n\r\n                this.emit('clientUpdateRemoteStickersHint', update);\r\n                break;\r\n            }\r\n            case 'clientUpdateStickerSet': {\r\n                const { stickerSet } = update;\r\n\r\n                this.stickerSet = stickerSet;\r\n\r\n                this.emit('clientUpdateStickerSet', update);\r\n                break;\r\n            }\r\n            case 'clientUpdateStickerSetPosition': {\r\n                this.emit('clientUpdateStickerSetPosition', update);\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    addTdLibListener = () => {\r\n        TdLibController.addListener('update', this.onUpdate);\r\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\r\n    };\r\n\r\n    removeTdLibListener = () => {\r\n        TdLibController.removeListener('update', this.onUpdate);\r\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\r\n    };\r\n}\r\n\r\nconst store = new StickerStore();\r\nwindow.sticker = store;\r\nexport default store;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport FileProgress from '../../Viewer/FileProgress';\r\nimport { getSize, getFitSize } from '../../../Utils/Common';\r\nimport { getSrc, getBlob, download } from '../../../Utils/File';\r\nimport { isBlurredThumbnail } from '../../../Utils/Media';\r\nimport { PHOTO_SIZE, PHOTO_DISPLAY_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport './Photo.css';\r\n\r\nclass Photo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { photo, size, thumbnailSize } = props;\r\n        const photoSize = getSize(photo.sizes, size);\r\n        const thumbnail = getSize(photo.sizes, thumbnailSize);\r\n\r\n        this.state = {\r\n            photoSize: photoSize,\r\n            thumbnail: thumbnail\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\r\n    }\r\n\r\n    onClientUpdatePhotoBlob = update => {\r\n        const { photoSize } = this.state;\r\n        const { fileId } = update;\r\n\r\n        if (!photoSize) return;\r\n\r\n        if (photoSize.photo.id === fileId) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { displaySize, openMedia, showProgress, style } = this.props;\r\n        const { thumbnail, photoSize } = this.state;\r\n\r\n        if (!photoSize) return null;\r\n\r\n        const src = getSrc(photoSize.photo);\r\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\r\n        const isBlurred = isBlurredThumbnail(thumbnail);\r\n\r\n        const fitPhotoSize = getFitSize(photoSize, displaySize);\r\n        if (!fitPhotoSize) return null;\r\n\r\n        const photoStyle = {\r\n            width: fitPhotoSize.width,\r\n            height: fitPhotoSize.height,\r\n            ...style\r\n        };\r\n\r\n        return (\r\n            <div className='photo' style={photoStyle} onClick={openMedia}>\r\n                {src ? (\r\n                    <img className='photo-image' draggable={false} src={src} alt='' />\r\n                ) : (\r\n                    <img\r\n                        className={classNames('photo-image', { 'media-blurred': isBlurred })}\r\n                        draggable={false}\r\n                        src={thumbnailSrc}\r\n                        alt=''\r\n                    />\r\n                )}\r\n\r\n                {showProgress && <FileProgress file={photoSize.photo} download upload cancelButton />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nPhoto.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    photo: PropTypes.object.isRequired,\r\n    openMedia: PropTypes.func,\r\n    showProgress: PropTypes.bool,\r\n\r\n    size: PropTypes.number,\r\n    thumbnailSize: PropTypes.number,\r\n    displaySize: PropTypes.number,\r\n    style: PropTypes.object\r\n};\r\n\r\nPhoto.defaultProps = {\r\n    size: PHOTO_SIZE,\r\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE,\r\n    displaySize: PHOTO_DISPLAY_SIZE,\r\n    showProgress: true\r\n};\r\n\r\nexport default Photo;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport classNames from 'classnames';\r\nimport { getUserFullName } from '../../Utils/User';\r\nimport { getChatTitle, isPrivateChat } from '../../Utils/Chat';\r\nimport { openUser as openUserCommand, openChat as openChatCommand } from '../../Actions/Client';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport './MessageAuthor.css';\r\n\r\nclass MessageAuthor extends React.Component {\r\n    handleSelect = event => {\r\n        const { chatId, userId, openUser, openChat } = this.props;\r\n\r\n        if (openUser && userId) {\r\n            event.stopPropagation();\r\n\r\n            openUserCommand(userId, true);\r\n            return;\r\n        }\r\n\r\n        if (openChat && chatId) {\r\n            event.stopPropagation();\r\n\r\n            openChatCommand(chatId, null, true);\r\n            return;\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { t, chatId, userId, openUser, openChat } = this.props;\r\n\r\n        const user = UserStore.get(userId);\r\n        if (user) {\r\n            const tileColor = isPrivateChat(chatId)\r\n                ? 'message-author-color'\r\n                : `user_color_${(Math.abs(userId) % 8) + 1}`;\r\n            const className = classNames([tileColor], 'message-author');\r\n\r\n            const fullName = getUserFullName(user);\r\n\r\n            return openUser ? (\r\n                <a className={className} onClick={this.handleSelect}>\r\n                    {fullName}\r\n                </a>\r\n            ) : (\r\n                <>{fullName}</>\r\n            );\r\n        }\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (chat) {\r\n            const className = classNames('message-author-color', 'message-author');\r\n\r\n            const fullName = getChatTitle(chatId, false, t);\r\n\r\n            return openChat ? (\r\n                <a className={className} onClick={this.handleSelect}>\r\n                    {fullName}\r\n                </a>\r\n            ) : (\r\n                <>{fullName}</>\r\n            );\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n\r\nMessageAuthor.propTypes = {\r\n    chatId: PropTypes.number,\r\n    userId: PropTypes.number,\r\n    openUser: PropTypes.bool,\r\n    openChat: PropTypes.bool\r\n};\r\n\r\nMessageAuthor.defaultProps = {\r\n    openUser: false,\r\n    openChat: false\r\n};\r\n\r\nexport default withTranslation()(MessageAuthor);\r\n","\r\n/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nclass Currency{\r\n    constructor(){\r\n        this.list = new Map([\r\n            [\"AED\", \"د.إ\"],\r\n            [\"AFN\", \"؋\"],\r\n            [\"ARS\", \"$\"],\r\n            [\"AUD\", \"$\"],\r\n            [\"AZN\", \"₼\"],\r\n            [\"BND\", \"B$\"],\r\n            [\"BRL\", \"R$\"],\r\n            [\"CAD\", \"$\"],\r\n            [\"CHF\", \"Fr\"],\r\n            [\"CLP\", \"$\"],\r\n            [\"CNY\", \"¥\"],\r\n            [\"COP\", \"$\"],\r\n            [\"EGP\", \"E£\"],\r\n            [\"EUR\", \"€\"],\r\n            [\"GBP\", \"£\"],\r\n            [\"HKD\", \"$\"],\r\n            [\"IDR\", \"Rp\"],\r\n            [\"ILS\", \"₪\"],\r\n            [\"INR\", \"₹\"],\r\n            [\"ISK\", \"kr\"],\r\n            [\"JPY\", \"¥\"],\r\n            [\"KRW\", \"₩\"],\r\n            [\"KZT\", \"₸\"],\r\n            [\"MXN\", \"$\"],\r\n            [\"MYR\", \"RM\"],\r\n            [\"NOK\", \"kr\"],\r\n            [\"NZD\", \"$\"],\r\n            [\"PHP\", \"₱\"],\r\n            [\"RUB\", \"₽\"],\r\n            [\"SAR\", \"SR\"],\r\n            [\"SEK\", \"kr\"],\r\n            [\"SGD\", \"$\"],\r\n            [\"TRY\", \"₺\"],\r\n            [\"TTD\", \"$\"],\r\n            [\"TWD\", \"$\"],\r\n            [\"TZS\", \"TSh\"],\r\n            [\"UAH\", \"₴\"],\r\n            [\"UGX\", \"USh\"],\r\n            [\"USD\", \"$\"],\r\n            [\"UYU\", \"$\"],\r\n            [\"VND\", \"₫\"],\r\n            [\"YER\", \"﷼\"],\r\n            [\"ZAR\", \"R\"],\r\n            [\"IRR\", \"﷼\"],\r\n            [\"IQD\", \"ع.د\"],\r\n            [\"VEF\", \"Bs.F.\"]\r\n        ]);\r\n    }\r\n\r\n    get(currency){\r\n        return this.list.get(currency);\r\n    }\r\n\r\n    set(currency, symbol){\r\n        this.list.set(currency, symbol);\r\n    }\r\n\r\n    getPow(currency){\r\n        if (currency === 'CLF'){\r\n            return 4;\r\n        }\r\n        if (['BHD', 'IQD', 'JOD', 'KWD', 'LYD', 'OMR', 'TND'].includes(currency)){\r\n            return 3;\r\n        }\r\n        if (['BIF', 'BYR', 'CLP', 'CVE', 'DJF', 'GNF', 'ISK', 'JPY', 'KMF', 'KRW', 'MGA', 'PYG', 'RWF', 'UGX', 'UYI', 'VND', 'VUV', 'XAF', 'XOF', 'XPF'].includes(currency)){\r\n            return 0;\r\n        }\r\n        if (currency === 'MRO'){\r\n            return 1;\r\n        }\r\n\r\n        return 2;\r\n    }\r\n\r\n    getString(totalAmount, currency){\r\n        const amount = (totalAmount/Math.pow(10.0, this.getPow(currency))).toFixed(2);\r\n        return `${amount} ${this.get(currency)}`;\r\n    }\r\n}\r\n\r\nlet currency = new Currency();\r\nexport default currency;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport Currency from './Currency';\r\nimport MessageAuthor from '../Components/Message/MessageAuthor';\r\nimport ChatStore from '../Stores/ChatStore';\r\nimport UserStore from '../Stores/UserStore';\r\nimport SupergroupStore from '../Stores/SupergroupStore';\r\nimport MessageStore from '../Stores/MessageStore';\r\n\r\nlet serviceMap = new Map();\r\nserviceMap.set('messageBasicGroupChatCreate', 'messageBasicGroupChatCreate');\r\nserviceMap.set('messageChatAddMembers', 'messageChatAddMembers');\r\nserviceMap.set('messageChatChangePhoto', 'messageChatChangePhoto');\r\nserviceMap.set('messageChatChangeTitle', 'messageChatChangeTitle');\r\nserviceMap.set('messageChatDeleteMember', 'messageChatDeleteMember');\r\nserviceMap.set('messageChatDeletePhoto', 'messageChatDeletePhoto');\r\nserviceMap.set('messageChatJoinByLink', 'messageChatJoinByLink');\r\nserviceMap.set('messageChatSetTtl', 'messageChatSetTtl');\r\nserviceMap.set('messageChatUpgradeFrom', 'messageChatUpgradeFrom');\r\nserviceMap.set('messageChatUpgradeTo', 'messageChatUpgradeTo');\r\nserviceMap.set('messageContactRegistered', 'messageContactRegistered');\r\nserviceMap.set('messageCustomServiceAction', 'messageCustomServiceAction');\r\nserviceMap.set('messageGameScore', 'messageGameScore');\r\nserviceMap.set('messagePassportDataReceived', 'messagePassportDataReceived');\r\nserviceMap.set('messagePassportDataSent', 'messagePassportDataSent');\r\nserviceMap.set('messagePaymentSuccessful', 'messagePaymentSuccessful');\r\nserviceMap.set('messagePaymentSuccessfulBot', 'messagePaymentSuccessfulBot');\r\nserviceMap.set('messagePinMessage', 'messagePinMessage');\r\nserviceMap.set('messageScreenshotTaken', 'messageScreenshotTaken');\r\nserviceMap.set('messageSupergroupChatCreate', 'messageSupergroupChatCreate');\r\nserviceMap.set('messageUnsupported', 'messageUnsupported');\r\nserviceMap.set('messageWebsiteConnected', 'messageWebsiteConnected');\r\n\r\nfunction isServiceMessage(message) {\r\n    if (!message) return false;\r\n    if (!message.content) return false;\r\n\r\n    return serviceMap.has(message.content['@type']) || message.ttl > 0;\r\n}\r\n\r\nfunction getTTLString(ttl) {\r\n    if (ttl < 60) {\r\n        const seconds = ttl === 1 ? 'second' : 'seconds';\r\n        return `${ttl} ${seconds}`;\r\n    }\r\n    if (ttl < 60 * 60) {\r\n        const minutes = Math.floor(ttl / 60) === 1 ? 'minute' : 'minutes';\r\n        return `${ttl} ${minutes}`;\r\n    }\r\n    if (ttl < 24 * 60 * 60) {\r\n        const hours = Math.floor(ttl / 60 / 60) === 1 ? 'hour' : 'hours';\r\n        return `${ttl} ${hours}`;\r\n    }\r\n    if (ttl < 7 * 24 * 60 * 60) {\r\n        const days = Math.floor(ttl / 60 / 60 / 24) === 1 ? 'day' : 'days';\r\n        return `${ttl} ${days}`;\r\n    }\r\n    if (ttl === 7 * 24 * 60 * 60) {\r\n        return '1 week';\r\n    }\r\n\r\n    return `${ttl} seconds`;\r\n}\r\n\r\nfunction getPassportElementTypeString(type) {\r\n    switch (type['@type']) {\r\n        case 'passportElementTypeAddress': {\r\n            return 'Address';\r\n        }\r\n        case 'passportElementTypeBankStatement': {\r\n            return 'Bank Statement';\r\n        }\r\n        case 'passportElementTypeDriverLicense': {\r\n            return 'Driver Licence';\r\n        }\r\n        case 'passportElementTypeEmailAddress': {\r\n            return 'Email';\r\n        }\r\n        case 'passportElementTypeIdentityCard': {\r\n            return 'Identity Card';\r\n        }\r\n        case 'passportElementTypeInternalPassport': {\r\n            return 'Internal Passport';\r\n        }\r\n        case 'passportElementTypePassport': {\r\n            return 'Passport';\r\n        }\r\n        case 'passportElementTypePassportRegistration': {\r\n            return 'Passport Registration';\r\n        }\r\n        case 'passportElementTypePersonalDetails': {\r\n            return 'Personal details';\r\n        }\r\n        case 'passportElementTypePhoneNumber': {\r\n            return 'Phone Number';\r\n        }\r\n        case 'passportElementTypeRentalAgreement': {\r\n            return 'Tenancy Agreement';\r\n        }\r\n        case 'passportElementTypeTemporaryRegistration': {\r\n            return 'Temporary Registration';\r\n        }\r\n        case 'passportElementTypeUtilityBill': {\r\n            return 'Utility Bill';\r\n        }\r\n    }\r\n\r\n    return '';\r\n}\r\n\r\nfunction getMessageAuthor(message, openUser) {\r\n    if (!message) return null;\r\n\r\n    const { chat_id, sender_user_id } = message;\r\n\r\n    if (sender_user_id !== 0) {\r\n        return <MessageAuthor userId={sender_user_id} openUser={openUser} />;\r\n    }\r\n\r\n    const chat = ChatStore.get(chat_id);\r\n    if (!chat) return null;\r\n\r\n    return chat.title;\r\n}\r\n\r\nfunction getServiceMessageContent(message, openUser = false) {\r\n    if (!message) return null;\r\n    if (!message.content) return null;\r\n\r\n    const isOutgoing = message.sender_user_id === UserStore.getMyId();\r\n    const chat = ChatStore.get(message.chat_id);\r\n    const isChannel = chat.type['@type'] === 'chatTypeSupergroup' && chat.type.is_channel;\r\n\r\n    const { ttl, sender_user_id, content } = message;\r\n    if (ttl > 0) {\r\n        switch (content['@type']) {\r\n            case 'messagePhoto': {\r\n                if (isOutgoing) {\r\n                    return 'You sent a self-destructing photo. Please view it on your mobile';\r\n                }\r\n\r\n                return (\r\n                    <>\r\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\r\n                        {' sent a self-destructing photo. Please view it on your mobile'}\r\n                    </>\r\n                );\r\n            }\r\n            case 'messageVideo': {\r\n                if (isOutgoing) {\r\n                    return 'You sent a self-destructing video. Please view it on your mobile';\r\n                }\r\n\r\n                return (\r\n                    <>\r\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\r\n                        {' sent a self-destructing video. Please view it on your mobile'}\r\n                    </>\r\n                );\r\n            }\r\n            default: {\r\n                if (isOutgoing) {\r\n                    return 'You sent a self-destructing message. Please view it on your mobile';\r\n                }\r\n\r\n                return (\r\n                    <>\r\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\r\n                        {' sent a self-destructing message. Please view it on your mobile'}\r\n                    </>\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    switch (content['@type']) {\r\n        case 'messageBasicGroupChatCreate': {\r\n            const { title } = ChatStore.get(message.chat_id);\r\n\r\n            if (isOutgoing) {\r\n                return `You created group «${title}»`;\r\n            }\r\n\r\n            return (\r\n                <>\r\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\r\n                    {` created group «${title}»`}\r\n                </>\r\n            );\r\n        }\r\n        case 'messageChatAddMembers': {\r\n            const members = content.member_user_ids\r\n                .map(x => <MessageAuthor key={x} userId={x} openUser={openUser} />)\r\n                .reduce((accumulator, current, index, array) => {\r\n                    const separator = index === array.length - 1 ? ' and ' : ', ';\r\n                    return accumulator === null ? [current] : [...accumulator, separator, current];\r\n                }, null);\r\n\r\n            if (isOutgoing) {\r\n                return content.member_user_ids.length === 1 && content.member_user_ids[0] === UserStore.getMyId() ? (\r\n                    'You joined the group'\r\n                ) : (\r\n                    <>\r\n                        {'You added '}\r\n                        {members}\r\n                    </>\r\n                );\r\n            }\r\n\r\n            return content.member_user_ids.length === 1 && content.member_user_ids[0] === message.sender_user_id ? (\r\n                <>\r\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\r\n                    {' joined the group'}\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\r\n                    {' added '}\r\n                    {members}\r\n                </>\r\n            );\r\n        }\r\n        case 'messageChatChangePhoto': {\r\n            if (isChannel) {\r\n                return 'Channel photo updated';\r\n            }\r\n\r\n            if (isOutgoing) {\r\n                return 'You updated group photo';\r\n            }\r\n\r\n            return (\r\n                <>\r\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\r\n                    {` updated group photo`}\r\n                </>\r\n            );\r\n        }\r\n        case 'messageChatChangeTitle': {\r\n            const { title } = content;\r\n\r\n            if (isChannel) {\r\n                return `Channel name was changed to «${title}»`;\r\n            }\r\n\r\n            if (isOutgoing) {\r\n                return `You changed group name to «${title}»`;\r\n            }\r\n\r\n            return (\r\n                <>\r\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\r\n                    {` changed group name to «${title}»`}\r\n                </>\r\n            );\r\n        }\r\n        case 'messageChatDeleteMember': {\r\n            if (isOutgoing) {\r\n                return content.user_id === UserStore.getMyId() ? (\r\n                    'You left the group'\r\n                ) : (\r\n                    <>\r\n                        {'You removed '}\r\n                        <MessageAuthor userId={content.user_id} openUser={openUser} />\r\n                    </>\r\n                );\r\n            }\r\n\r\n            return content.user_id === sender_user_id ? (\r\n                <>\r\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\r\n                    {' left the group'}\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\r\n                    {' removed '}\r\n                    <MessageAuthor userId={content.user_id} openUser={openUser} />\r\n                </>\r\n            );\r\n        }\r\n        case 'messageChatDeletePhoto': {\r\n            if (isChannel) {\r\n                return 'Channel photo removed';\r\n            }\r\n\r\n            if (isOutgoing) {\r\n                return 'You removed group photo';\r\n            }\r\n\r\n            return (\r\n                <>\r\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\r\n                    {' removed group photo'}\r\n                </>\r\n            );\r\n        }\r\n        case 'messageChatJoinByLink': {\r\n            if (isOutgoing) {\r\n                return 'You joined the group via invite link';\r\n            }\r\n\r\n            return (\r\n                <>\r\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\r\n                    {' joined the group via invite link'}\r\n                </>\r\n            );\r\n        }\r\n        case 'messageChatSetTtl': {\r\n            const { ttl } = content;\r\n            const ttlString = getTTLString(ttl);\r\n\r\n            if (ttl <= 0) {\r\n                if (isOutgoing) {\r\n                    return 'You disabled the self-destruct timer';\r\n                }\r\n\r\n                return (\r\n                    <>\r\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\r\n                        {' disabled the self-destruct timer'}\r\n                    </>\r\n                );\r\n            }\r\n\r\n            if (isOutgoing) {\r\n                return `You set the self-destruct timer to ${ttlString}`;\r\n            }\r\n\r\n            return (\r\n                <>\r\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\r\n                    {` set the self-destruct timer to ${ttlString}`}\r\n                </>\r\n            );\r\n        }\r\n        case 'messageChatUpgradeFrom': {\r\n            return 'The group was upgraded to a supergroup';\r\n        }\r\n        case 'messageChatUpgradeTo': {\r\n            return 'Group migrated to a supergroup';\r\n        }\r\n        case 'messageContactRegistered': {\r\n            return (\r\n                <>\r\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\r\n                    {' just joined Telegram'}\r\n                </>\r\n            );\r\n        }\r\n        case 'messageCustomServiceAction': {\r\n            return content.text;\r\n        }\r\n        case 'messageGameScore': {\r\n            const messageGame = MessageStore.get(message.chat_id, content.game_message_id);\r\n            if (\r\n                messageGame &&\r\n                messageGame.content &&\r\n                messageGame.content['@type'] === 'messageGame' &&\r\n                messageGame.content.game\r\n            ) {\r\n                const { game } = messageGame.content;\r\n\r\n                if (isOutgoing) {\r\n                    return `You scored ${content.score} in «${game.title}»`;\r\n                }\r\n\r\n                return (\r\n                    <>\r\n                        <MessageAuthor userId={messageGame.sender_user_id} openUser={openUser} />\r\n                        {` scored ${content.score} in «${game.title}»`}\r\n                    </>\r\n                );\r\n            }\r\n\r\n            if (isOutgoing) {\r\n                return `You scored ${content.score}`;\r\n            }\r\n\r\n            return (\r\n                <>\r\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\r\n                    {` scored ${content.score}`}\r\n                </>\r\n            );\r\n        }\r\n        case 'messagePassportDataReceived': {\r\n            return 'Telegram Passport data received';\r\n        }\r\n        case 'messagePassportDataSent': {\r\n            const chat = ChatStore.get(message.chat_id);\r\n\r\n            const passportElementTypes = content.types\r\n                .map(x => getPassportElementTypeString(x))\r\n                .reduce((accumulator, current) => {\r\n                    return accumulator === null ? [current] : [...accumulator, ', ', current];\r\n                }, null);\r\n\r\n            return (\r\n                <>\r\n                    <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\r\n                    {' received the following documents: '}\r\n                    {passportElementTypes}\r\n                </>\r\n            );\r\n        }\r\n        case 'messagePaymentSuccessful': {\r\n            const chat = ChatStore.get(message.chat_id);\r\n\r\n            const messageInvoice = MessageStore.get(message.chat_id, content.invoice_message_id);\r\n            if (\r\n                messageInvoice &&\r\n                messageInvoice.content &&\r\n                messageInvoice.content['@type'] === 'messageInvoice' &&\r\n                messageInvoice.content.invoice\r\n            ) {\r\n                const { invoice } = messageInvoice.content;\r\n\r\n                return (\r\n                    <>\r\n                        {`You have just successfully transferred ${Currency.getString(\r\n                            content.total_amount,\r\n                            content.currency\r\n                        )} to `}\r\n                        <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\r\n                        {` for ${invoice.title}`}\r\n                    </>\r\n                );\r\n            }\r\n\r\n            return (\r\n                <>\r\n                    {`You have just successfully transferred ${Currency.getString(\r\n                        content.total_amount,\r\n                        content.currency\r\n                    )} to `}\r\n                    <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\r\n                </>\r\n            );\r\n        }\r\n        case 'messagePaymentSuccessfulBot': {\r\n            return 'Payment successful';\r\n        }\r\n        case 'messagePinMessage': {\r\n            const author = getMessageAuthor(message, openUser);\r\n            const pinnedMessage = MessageStore.get(message.chat_id, content.message_id);\r\n            if (!pinnedMessage || !pinnedMessage.content) {\r\n                return (\r\n                    <>\r\n                        {author}\r\n                        {' pinned a message'}\r\n                    </>\r\n                );\r\n            }\r\n\r\n            let pinnedContent = ' pinned a message';\r\n            if (isServiceMessage(pinnedMessage)) {\r\n                pinnedContent = ' pinned a service message';\r\n            } else {\r\n                switch (pinnedMessage.content['@type']) {\r\n                    case 'messageAnimation': {\r\n                        pinnedContent = ' pinned a GIF';\r\n                        break;\r\n                    }\r\n                    case 'messageAudio': {\r\n                        pinnedContent = ' pinned a track';\r\n                        break;\r\n                    }\r\n                    case 'messageCall': {\r\n                        pinnedContent = ' pinned a call';\r\n                        break;\r\n                    }\r\n                    case 'messageContact': {\r\n                        pinnedContent = ' pinned a contact';\r\n                        break;\r\n                    }\r\n                    case 'messageDocument': {\r\n                        pinnedContent = ' pinned a file';\r\n                        break;\r\n                    }\r\n                    case 'messageExpiredPhoto': {\r\n                        pinnedContent = ' pinned a photo';\r\n                        break;\r\n                    }\r\n                    case 'messageExpiredVideo': {\r\n                        pinnedContent = ' pinned a video';\r\n                        break;\r\n                    }\r\n                    case 'messageGame': {\r\n                        pinnedContent = ' pinned a game';\r\n                        break;\r\n                    }\r\n                    case 'messageInvoice': {\r\n                        pinnedContent = ' pinned an invoice';\r\n                        break;\r\n                    }\r\n                    case 'messageLocation': {\r\n                        pinnedContent = ' pinned a map';\r\n                        break;\r\n                    }\r\n                    case 'messagePhoto': {\r\n                        pinnedContent = ' pinned a photo';\r\n                        break;\r\n                    }\r\n                    case 'messagePoll': {\r\n                        pinnedContent = ' pinned a poll';\r\n                        break;\r\n                    }\r\n                    case 'messageSticker': {\r\n                        pinnedContent = ' pinned a sticker';\r\n                        break;\r\n                    }\r\n                    case 'messageText': {\r\n                        const maxLength = 16;\r\n                        const text = pinnedMessage.content.text.text;\r\n                        if (text.length <= maxLength) {\r\n                            pinnedContent = ` pinned «${text}»`;\r\n                        } else {\r\n                            pinnedContent = ` pinned «${text.substring(0, maxLength)}...»`;\r\n                        }\r\n\r\n                        break;\r\n                    }\r\n                    case 'messageUnsupported': {\r\n                        pinnedContent = ' pinned unsupported message';\r\n                        break;\r\n                    }\r\n                    case 'messageVenue': {\r\n                        pinnedContent = ' pinned a venue';\r\n                        break;\r\n                    }\r\n                    case 'messageVideo': {\r\n                        pinnedContent = ' pinned a video';\r\n                        break;\r\n                    }\r\n                    case 'messageVideoNote': {\r\n                        pinnedContent = ' pinned a video message';\r\n                        break;\r\n                    }\r\n                    case 'messageVoiceNote': {\r\n                        pinnedContent = ' pinned a voice message';\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return (\r\n                <>\r\n                    {author}\r\n                    {pinnedContent}\r\n                </>\r\n            );\r\n        }\r\n        case 'messageScreenshotTaken': {\r\n            if (isOutgoing) {\r\n                return 'You took a screenshot!';\r\n            }\r\n\r\n            return (\r\n                <>\r\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\r\n                    {' took a screenshot!'}\r\n                </>\r\n            );\r\n        }\r\n        case 'messageSupergroupChatCreate': {\r\n            const { title } = content;\r\n\r\n            if (isChannel) {\r\n                return 'Channel created';\r\n            }\r\n\r\n            if (isOutgoing) {\r\n                return `You created group «${title}»`;\r\n            }\r\n\r\n            return (\r\n                <>\r\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\r\n                    {` created group «${title}»`}\r\n                </>\r\n            );\r\n        }\r\n        case 'messageUnsupported': {\r\n            return 'Unsupported message';\r\n        }\r\n        case 'messageWebsiteConnected': {\r\n            return `You allowed this bot to message you when you logged in on ${content.domain_name}.`;\r\n        }\r\n    }\r\n\r\n    return `[${message.content['@type']}]`;\r\n}\r\n\r\nexport { isServiceMessage, getServiceMessageContent };\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport FileProgress from '../../Components/Viewer/FileProgress';\r\nimport { getSrc } from '../../Utils/File';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './DocumentTile.css';\r\n\r\nconst styles = theme => ({\r\n    background: {\r\n        background: theme.palette.primary.main,\r\n        borderRadius: '50%',\r\n        width: 48,\r\n        height: 48\r\n    }\r\n});\r\n\r\nclass DocumentTile extends React.Component {\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\r\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.removeListener('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\r\n        FileStore.removeListener('clientUpdateAudioThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\r\n    }\r\n\r\n    onClientUpdateDocumentThumbnailBlob = update => {\r\n        const { thumbnail } = this.props;\r\n        if (!thumbnail) return;\r\n\r\n        const file = thumbnail.photo;\r\n        if (!file) return;\r\n\r\n        const { fileId } = update;\r\n\r\n        if (file.id === fileId) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { classes, thumbnail, file, icon, completeIcon, openMedia } = this.props;\r\n\r\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\r\n        const className = classNames('tile-photo', { 'document-tile-background': !thumbnailSrc });\r\n\r\n        return (\r\n            <div className='document-tile' onClick={openMedia}>\r\n                {thumbnailSrc ? (\r\n                    <img className={className} src={thumbnailSrc} draggable={false} alt='' />\r\n                ) : (\r\n                    <div className={classes.background} />\r\n                )}\r\n                {file && (\r\n                    <FileProgress\r\n                        file={file}\r\n                        thumbnailSrc={thumbnailSrc}\r\n                        download\r\n                        upload\r\n                        cancelButton\r\n                        zIndex={1}\r\n                        icon={icon}\r\n                        completeIcon={completeIcon}\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDocumentTile.propTypes = {\r\n    thumbnail: PropTypes.object,\r\n    file: PropTypes.object,\r\n    openMedia: PropTypes.func,\r\n    icon: PropTypes.node,\r\n    completeIcon: PropTypes.node\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(DocumentTile);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport FileProgress from '../../Viewer/FileProgress';\r\nimport { getFitSize } from '../../../Utils/Common';\r\nimport { isBlurredThumbnail } from '../../../Utils/Media';\r\nimport { getFileSize, getSrc, isGifMimeType } from '../../../Utils/File';\r\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport ApplicationStore from '../../../Stores/ApplicationStore';\r\nimport './Animation.css';\r\n\r\nclass Animation extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.videoRef = React.createRef();\r\n\r\n        this.focused = window.hasFocus;\r\n        this.inView = false;\r\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\r\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\r\n    }\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateAnimationThumbnailBlob);\r\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateAnimationBlob);\r\n        ApplicationStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\r\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\r\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdateAnimationThumbnailBlob);\r\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateAnimationBlob);\r\n        ApplicationStore.removeListener('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\r\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n        ApplicationStore.removeListener(\r\n            'clientUpdateProfileMediaViewerContent',\r\n            this.onClientUpdateProfileMediaViewerContent\r\n        );\r\n        MessageStore.removeListener('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\r\n    }\r\n\r\n    startStopPlayer = () => {\r\n        const player = this.videoRef.current;\r\n        if (player) {\r\n            if (this.inView && this.focused && !this.openMediaViewer && !this.openProfileMediaViewer) {\r\n                //console.log('clientUpdate player play message_id=' + this.props.messageId);\r\n                player.play();\r\n            } else {\r\n                //console.log('clientUpdate player pause message_id=' + this.props.messageId);\r\n                player.pause();\r\n            }\r\n        }\r\n    };\r\n\r\n    onClientUpdateProfileMediaViewerContent = update => {\r\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\r\n\r\n        this.startStopPlayer();\r\n    };\r\n\r\n    onClientUpdateMediaViewerContent = update => {\r\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\r\n\r\n        this.startStopPlayer();\r\n    };\r\n\r\n    onClientUpdateFocusWindow = update => {\r\n        this.focused = update.focused;\r\n\r\n        this.startStopPlayer();\r\n    };\r\n\r\n    onClientUpdateMessagesInView = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const key = `${chatId}_${messageId}`;\r\n\r\n        this.inView = update.messages.has(key);\r\n\r\n        this.startStopPlayer();\r\n    };\r\n\r\n    onClientUpdateAnimationBlob = update => {\r\n        const { animation } = this.props.animation;\r\n        const { fileId } = update;\r\n\r\n        if (!animation) return;\r\n\r\n        if (animation.id === fileId) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onClientUpdateAnimationThumbnailBlob = update => {\r\n        const { thumbnail } = this.props.animation;\r\n        if (!thumbnail) return;\r\n\r\n        const { fileId } = update;\r\n\r\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { displaySize, openMedia, t } = this.props;\r\n        const { thumbnail, animation, mime_type, width, height } = this.props.animation;\r\n\r\n        const fitPhotoSize = getFitSize(thumbnail || { width: width, height: height }, displaySize);\r\n        if (!fitPhotoSize) return null;\r\n\r\n        const style = {\r\n            width: fitPhotoSize.width,\r\n            height: fitPhotoSize.height\r\n        };\r\n\r\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\r\n        const src = getSrc(animation);\r\n\r\n        const isBlurred = isBlurredThumbnail(thumbnail);\r\n        const isGif = isGifMimeType(mime_type);\r\n\r\n        return (\r\n            <div className='animation' style={style} onClick={openMedia}>\r\n                {src ? (\r\n                    isGif ? (\r\n                        <img className='media-viewer-content-image' style={style} src={src} alt='' />\r\n                    ) : (\r\n                        <video\r\n                            ref={this.videoRef}\r\n                            className='media-viewer-content-image'\r\n                            src={src}\r\n                            poster={thumbnailSrc}\r\n                            muted\r\n                            autoPlay\r\n                            loop\r\n                            playsInline\r\n                            width={style.width}\r\n                            height={style.height}\r\n                        />\r\n                    )\r\n                ) : (\r\n                    <>\r\n                        <img\r\n                            className={classNames('animation-preview', { 'media-blurred': isBlurred })}\r\n                            style={style}\r\n                            src={thumbnailSrc}\r\n                            alt=''\r\n                        />\r\n                        <div className='animation-meta'>{getFileSize(animation)}</div>\r\n                    </>\r\n                )}\r\n                <FileProgress\r\n                    file={animation}\r\n                    download\r\n                    upload\r\n                    cancelButton\r\n                    icon={<div className='animation-play'>{t('AttachGif')}</div>}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAnimation.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    animation: PropTypes.object.isRequired,\r\n    openMedia: PropTypes.func.isRequired,\r\n    size: PropTypes.number,\r\n    displaySize: PropTypes.number\r\n};\r\n\r\nAnimation.defaultProps = {\r\n    size: PHOTO_SIZE,\r\n    displaySize: PHOTO_DISPLAY_SIZE\r\n};\r\n\r\nexport default withTranslation()(Animation);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Sticker from '../Message/Media/Sticker';\r\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './StickerPreview.css';\r\n\r\nclass StickerPreview extends React.Component {\r\n    state = {\r\n        emoji: null,\r\n        prevPropsSticker: null\r\n    };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { sticker } = props;\r\n        const { prevPropsSticker } = state;\r\n\r\n        if (sticker && prevPropsSticker) {\r\n            return {\r\n                prevPropsSticker: sticker,\r\n                emoji: null\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { sticker } = this.props;\r\n\r\n        if (sticker && sticker !== prevProps.sticker) {\r\n            this.loadStickerEmojis(sticker);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { sticker } = this.props;\r\n\r\n        if (sticker) {\r\n            this.loadStickerEmojis(sticker);\r\n        }\r\n    }\r\n\r\n    loadStickerEmojis = sticker => {\r\n        const { sticker: file } = sticker;\r\n        const { id } = file;\r\n\r\n        TdLibController.send({\r\n            '@type': 'getStickerEmojis',\r\n            sticker: { '@type': 'inputFileId', id }\r\n        }).then(result => {\r\n            if (this.props.sticker === sticker) {\r\n                this.setState({\r\n                    emoji: result.emojis.join(' ')\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { sticker } = this.props;\r\n        const { emoji } = this.state;\r\n\r\n        if (!sticker) return null;\r\n\r\n        return (\r\n            <div className='sticker-preview'>\r\n                <div className='sticker-preview-emoji'>{emoji}</div>\r\n                <Sticker sticker={sticker} displaySize={STICKER_PREVIEW_DISPLAY_SIZE} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nStickerPreview.propTypes = {\r\n    sticker: PropTypes.object\r\n};\r\n\r\nexport default StickerPreview;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getDownloadedSize, getUploadedSize, getFileSize } from '../../../Utils/File';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport './DocumentAction.css';\r\n\r\nclass DocumentAction extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { file } = this.props;\r\n        this.state = {\r\n            prevPropsFile: file,\r\n            prevFile: null,\r\n            file: FileStore.get(file.id) || file\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        FileStore.on('updateFile', this.onUpdateFile);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.removeListener('updateFile', this.onUpdateFile);\r\n    }\r\n\r\n    onUpdateFile = update => {\r\n        const currentFile = this.state.file;\r\n        const nextFile = update.file;\r\n\r\n        if (currentFile && currentFile.id === nextFile.id) {\r\n            this.setState({ file: nextFile, prevFile: currentFile });\r\n        }\r\n    };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { file } = props;\r\n        const { prevPropsFile } = state;\r\n\r\n        if (file && prevPropsFile && file.id !== prevPropsFile.id) {\r\n            return {\r\n                prevPropsFile: file,\r\n                prevFile: null,\r\n                file: FileStore.get(file.id) || file\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { file, prevFile } = this.state;\r\n\r\n        if (nextState.file !== file) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.prevFile !== prevFile) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        const { file } = this.state;\r\n        if (!file) return null;\r\n\r\n        const isDownloadingActive = file.local && file.local.is_downloading_active;\r\n        const isUploadingActive = file.remote && file.remote.is_uploading_active;\r\n\r\n        const size = getFileSize(file);\r\n        let progressSize = null;\r\n        if (isDownloadingActive) {\r\n            progressSize = getDownloadedSize(file);\r\n        } else if (isUploadingActive) {\r\n            progressSize = getUploadedSize(file);\r\n        }\r\n\r\n        const sizeString = progressSize ? `${progressSize}/${size}` : `${size}`;\r\n\r\n        return (\r\n            <div className='document-action'>\r\n                <span>{sizeString}</span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDocumentAction.propTypes = {\r\n    file: PropTypes.object.isRequired\r\n};\r\n\r\nexport default DocumentAction;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport DocumentTile from '../../Tile/DocumentTile';\r\nimport DocumentAction from './DocumentAction';\r\nimport { getExtension } from '../../../Utils/File';\r\nimport './Document.css';\r\n\r\nclass Document extends React.Component {\r\n    render() {\r\n        const { document, openMedia } = this.props;\r\n        if (!document) return null;\r\n\r\n        const { thumbnail, file_name } = document;\r\n        const file = document.document;\r\n\r\n        return (\r\n            <div className='document'>\r\n                <DocumentTile\r\n                    thumbnail={thumbnail}\r\n                    file={file}\r\n                    openMedia={openMedia}\r\n                    icon={<ArrowDownwardIcon />}\r\n                    completeIcon={<InsertDriveFileIcon />}\r\n                />\r\n                <div className='document-content'>\r\n                    <div className='document-title'>\r\n                        <a\r\n                            className='document-name'\r\n                            onClick={openMedia}\r\n                            title={file_name}\r\n                            data-name={file_name}\r\n                            data-ext={'.' + getExtension(file_name)}>\r\n                            {file_name}\r\n                        </a>\r\n                    </div>\r\n                    <DocumentAction file={file} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDocument.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    document: PropTypes.object.isRequired,\r\n    openMedia: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Document;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport DocumentTile from '../../Tile/DocumentTile';\r\nimport AudioAction from './AudioAction';\r\nimport FileProgress from '../../Viewer/FileProgress';\r\nimport { getAudioTitle } from '../../../Utils/Media';\r\nimport PlayerStore from '../../../Stores/PlayerStore';\r\nimport './Audio.css';\r\nimport InsertDriveFileIcon from './Document';\r\n\r\nclass Audio extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId, messageId } = props;\r\n\r\n        const { time, message, playing } = PlayerStore;\r\n        const active = message && message.chat_id === chatId && message.id === messageId;\r\n\r\n        this.state = {\r\n            active: active,\r\n            playing: active ? playing : false,\r\n            currentTime: active && time ? time.currentTime : 0,\r\n            duration: active && time ? time.duration : 0\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { active, playing, currentTime, duration } = this.state;\r\n\r\n        if (nextState.active !== active) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.playing !== playing) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.currentTime !== currentTime) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.duration !== duration) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.on('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\r\n        PlayerStore.on('clientUpdateMediaPause', this.onClientUpdateMediaPause);\r\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.removeListener('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\r\n        PlayerStore.removeListener('clientUpdateMediaPause', this.onClientUpdateMediaPause);\r\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\r\n    }\r\n\r\n    onClientUpdateMediaEnd = update => {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            this.setState({\r\n                active: false,\r\n                playing: false,\r\n                currentTime: 0\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaPlay = update => {\r\n        const { chatId, messageId, playing } = this.props;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            this.setState({ playing: true });\r\n        } else {\r\n            this.setState({ playing: false });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaPause = update => {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            this.setState({ playing: false });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaActive = update => {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            if (!this.state.active) {\r\n                this.setState({\r\n                    active: true,\r\n                    currentTime: 0,\r\n                    playing: true\r\n                });\r\n            }\r\n        } else if (this.state.active) {\r\n            this.setState({\r\n                active: false,\r\n                currentTime: 0,\r\n                playing: false\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, audio, openMedia } = this.props;\r\n        const { playing } = this.state;\r\n        if (!audio) return null;\r\n\r\n        const { album_cover_thumbnail, duration, audio: file } = audio;\r\n\r\n        const title = getAudioTitle(audio);\r\n\r\n        return (\r\n            <div className='document'>\r\n                <DocumentTile\r\n                    thumbnail={album_cover_thumbnail}\r\n                    file={file}\r\n                    openMedia={openMedia}\r\n                    icon={<ArrowDownwardIcon />}\r\n                    completeIcon={playing ? <PauseIcon /> : <PlayArrowIcon />}\r\n                />\r\n                <div className='document-content'>\r\n                    <div className='document-title'>\r\n                        <a className='document-name' onClick={openMedia} title={title}>\r\n                            {title}\r\n                        </a>\r\n                    </div>\r\n                    <AudioAction chatId={chatId} messageId={messageId} duration={duration} file={file} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAudio.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    audio: PropTypes.object.isRequired,\r\n    openMedia: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Audio;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getDownloadedSize, getUploadedSize, getFileSize } from '../../../Utils/File';\r\nimport { getDurationString } from '../../../Utils/Common';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport PlayerStore from '../../../Stores/PlayerStore';\r\nimport './AudioAction.css';\r\n\r\nclass AudioAction extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { message, time } = PlayerStore;\r\n        const { chatId, messageId, duration, file } = this.props;\r\n\r\n        const active = message && message.chat_id === chatId && message.id === messageId;\r\n        const currentTime = active && time ? time.currentTime : 0;\r\n        const audioDuration = active && time && time.duration ? time.duration : duration;\r\n        const currentFile = FileStore.get(file.id) || file;\r\n\r\n        this.state = {\r\n            active: active,\r\n            currentTime: currentTime,\r\n            duration: audioDuration,\r\n            timeString: this.getTimeString(currentTime, duration, active, currentFile),\r\n\r\n            prevFile: null,\r\n            file: currentFile\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { active, timeString, file, prevFile } = this.state;\r\n\r\n        if (nextState.timeString !== timeString) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.active !== active) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.file !== file) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.prevFile !== prevFile) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        FileStore.on('updateFile', this.onUpdateFile);\r\n\r\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\r\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.removeListener('updateFile', this.onUpdateFile);\r\n\r\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\r\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\r\n    }\r\n\r\n    onClientUpdateMediaEnd = update => {\r\n        const { chatId, messageId, duration } = this.props;\r\n        const { active, file } = this.state;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            this.setState({\r\n                active: false,\r\n                currentTime: 0,\r\n                timeString: this.getTimeString(0, duration, false, file)\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaTime = update => {\r\n        const { chatId, messageId, duration } = this.props;\r\n        const { active, file } = this.state;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            this.setState({\r\n                currentTime: update.currentTime,\r\n                duration: update.duration || duration,\r\n                timeString: this.getTimeString(update.currentTime, update.duration || duration, active, file)\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaActive = update => {\r\n        const { chatId, messageId, duration } = this.props;\r\n        const { active, currentTime, file } = this.state;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            this.setState({\r\n                active: true,\r\n                currentTime: active ? currentTime : 0,\r\n                timeString: this.getTimeString(active ? currentTime : 0, duration, true, file)\r\n            });\r\n        } else if (active) {\r\n            this.setState({\r\n                active: false,\r\n                currentTime: 0,\r\n                timeString: this.getTimeString(0, duration, false, file)\r\n            });\r\n        }\r\n    };\r\n\r\n    onUpdateFile = update => {\r\n        const currentFile = this.state.file;\r\n        const nextFile = update.file;\r\n\r\n        if (currentFile && currentFile.id === nextFile.id) {\r\n            this.setState({ file: nextFile, prevFile: currentFile });\r\n        }\r\n    };\r\n\r\n    getTimeString = (currentTime, duration, active, file) => {\r\n        const isDownloadingCompleted = file.local && file.local.is_downloading_completed;\r\n        const isUploadingCompleted = file.remote && file.remote.is_uploading_completed;\r\n\r\n        const durationString = getDurationString(Math.floor(duration || 0));\r\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\r\n\r\n        return active && isDownloadingCompleted ? `${currentTimeString}/${durationString}` : `${durationString}`;\r\n    };\r\n\r\n    render() {\r\n        const { file, timeString } = this.state;\r\n        if (!file) return null;\r\n\r\n        const isDownloadingActive = file.local && file.local.is_downloading_active;\r\n        const isUploadingActive = file.remote && file.remote.is_uploading_active;\r\n        const isDownloadingCompleted = file.local && file.local.is_downloading_completed;\r\n        const isUploadingCompleted = file.remote && file.remote.is_uploading_completed;\r\n\r\n        const size = getFileSize(file);\r\n        let progressSize = null;\r\n        if (isDownloadingActive) {\r\n            progressSize = getDownloadedSize(file);\r\n        } else if (isUploadingActive) {\r\n            progressSize = getUploadedSize(file);\r\n        }\r\n        const sizeString = progressSize ? `${progressSize}/${size}` : `${size}`;\r\n\r\n        return (\r\n            <div className='audio-action'>\r\n                {!isDownloadingCompleted && <span>{`${sizeString}, `}</span>}\r\n                <span>{timeString}</span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAudioAction.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    duration: PropTypes.number.isRequired,\r\n    file: PropTypes.object.isRequired\r\n};\r\n\r\nexport default AudioAction;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport { getFitSize, getDurationString } from '../../../Utils/Common';\r\nimport { getFileSize } from '../../../Utils/File';\r\nimport { isBlurredThumbnail } from '../../../Utils/Media';\r\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport './Video.css';\r\n\r\nclass Video extends React.Component {\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\r\n    }\r\n\r\n    onClientUpdateVideoThumbnailBlob = update => {\r\n        const { thumbnail } = this.props.video;\r\n        const { fileId } = update;\r\n\r\n        if (!thumbnail) return;\r\n\r\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { displaySize, openMedia } = this.props;\r\n        const { thumbnail, video, width, height, duration } = this.props.video;\r\n\r\n        const fitPhotoSize = getFitSize(thumbnail || { width: width, height: height }, displaySize);\r\n        if (!fitPhotoSize) return null;\r\n\r\n        const style = {\r\n            width: fitPhotoSize.width,\r\n            height: fitPhotoSize.height\r\n        };\r\n\r\n        const file = thumbnail ? thumbnail.photo : null;\r\n        const blob = file ? FileStore.getBlob(file.id) || file.blob : null;\r\n        const src = FileStore.getBlobUrl(blob);\r\n        const isBlurred = isBlurredThumbnail(thumbnail);\r\n\r\n        return (\r\n            <div className='video' style={style} onClick={openMedia}>\r\n                <img\r\n                    className={classNames('video-preview', { 'media-blurred': isBlurred })}\r\n                    style={style}\r\n                    src={src}\r\n                    alt=''\r\n                />\r\n                <div className='video-play'>\r\n                    <PlayArrowIcon />\r\n                </div>\r\n                <div className='video-meta'>{getDurationString(duration) + ' ' + getFileSize(video)}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nVideo.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    video: PropTypes.object.isRequired,\r\n    openMedia: PropTypes.func.isRequired,\r\n    size: PropTypes.number,\r\n    displaySize: PropTypes.number\r\n};\r\n\r\nVideo.defaultProps = {\r\n    size: PHOTO_SIZE,\r\n    displaySize: PHOTO_DISPLAY_SIZE\r\n};\r\n\r\nexport default Video;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport FileProgress from '../../Viewer/FileProgress';\r\nimport MediaStatus from './MediaStatus';\r\nimport { getFileSize, getSrc } from '../../../Utils/File';\r\nimport { isBlurredThumbnail } from '../../../Utils/Media';\r\nimport { getDurationString } from '../../../Utils/Common';\r\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\r\nimport PlayerStore from '../../../Stores/PlayerStore';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport ApplicationStore from '../../../Stores/ApplicationStore';\r\nimport './VideoNote.css';\r\n\r\nconst circleStyle = {\r\n    circle: 'video-note-progress-circle'\r\n};\r\n\r\nclass VideoNote extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.videoRef = React.createRef();\r\n\r\n        const { chatId, messageId } = props;\r\n        const { video } = props.videoNote;\r\n\r\n        const { time, message, videoStream } = PlayerStore;\r\n        const active = message && message.chat_id === chatId && message.id === messageId;\r\n\r\n        this.state = {\r\n            active: active,\r\n            srcObject: active ? videoStream : null,\r\n            src: getSrc(video),\r\n            currentTime: active && time ? time.currentTime : 0.0,\r\n            videoDuration: active && time ? time.duration : 0.0\r\n        };\r\n\r\n        this.focused = window.hasFocus;\r\n        this.inView = false;\r\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\r\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\r\n    }\r\n\r\n    updateVideoSrc() {\r\n        const { srcObject, src } = this.state;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        if (srcObject) {\r\n            //player.scr = null;\r\n            player.srcObject = srcObject;\r\n            return;\r\n        }\r\n\r\n        const stream = player.srcObject;\r\n        if (stream) {\r\n            //console.log('clientUpdate release srcObject');\r\n            const tracks = stream.getTracks();\r\n\r\n            tracks.forEach(track => {\r\n                //console.log('clientUpdate release track');\r\n                track.stop();\r\n            });\r\n        }\r\n\r\n        if (player.srcObject) {\r\n            //console.log('clientUpdate release video.srcObject');\r\n            player.srcObject = null;\r\n        }\r\n        if (player.src !== src) {\r\n            player.src = src;\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateVideoSrc();\r\n\r\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateVideoNoteThumbnailBlob);\r\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateVideoNoteBlob);\r\n\r\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\r\n\r\n        ApplicationStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\r\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\r\n\r\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.on('clientUpdateMediaCaptureStream', this.onClientUpdateMediaCaptureStream);\r\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\r\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.removeListener('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateVideoNoteThumbnailBlob);\r\n        FileStore.removeListener('clientUpdateVideoNoteBlob', this.onClientUpdateVideoNoteBlob);\r\n\r\n        MessageStore.removeListener('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\r\n\r\n        ApplicationStore.removeListener('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\r\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n        ApplicationStore.removeListener(\r\n            'clientUpdateProfileMediaViewerContent',\r\n            this.onClientUpdateProfileMediaViewerContent\r\n        );\r\n\r\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.removeListener('clientUpdateMediaCaptureStream', this.onClientUpdateMediaCaptureStream);\r\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\r\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\r\n    }\r\n\r\n    startStopPlayer = () => {\r\n        const player = this.videoRef.current;\r\n        if (player) {\r\n            if (this.inView && this.focused && !this.openMediaViewer && !this.openProfileMediaViewer) {\r\n                //console.log('clientUpdate player play message_id=' + this.props.messageId);\r\n                player.play();\r\n            } else {\r\n                if (this.state.active) {\r\n                    return;\r\n                }\r\n\r\n                //console.log('clientUpdate player pause message_id=' + this.props.messageId);\r\n                player.pause();\r\n            }\r\n        }\r\n    };\r\n\r\n    onClientUpdateProfileMediaViewerContent = update => {\r\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\r\n\r\n        this.startStopPlayer();\r\n    };\r\n\r\n    onClientUpdateMediaViewerContent = update => {\r\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\r\n\r\n        this.startStopPlayer();\r\n    };\r\n\r\n    onClientUpdateFocusWindow = update => {\r\n        this.focused = update.focused;\r\n\r\n        this.startStopPlayer();\r\n    };\r\n\r\n    onClientUpdateMessagesInView = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const key = `${chatId}_${messageId}`;\r\n\r\n        this.inView = update.messages.has(key);\r\n\r\n        this.startStopPlayer();\r\n    };\r\n\r\n    onClientUpdateMediaCaptureStream = update => {\r\n        const { chatId, messageId } = this.props;\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            const player = this.videoRef.current;\r\n            if (player) {\r\n                this.setState({ srcObject: update.stream }, () => {\r\n                    this.updateVideoSrc();\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaTime = update => {\r\n        const { chatId, messageId } = this.props;\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            const player = this.videoRef.current;\r\n            if (player) {\r\n                this.setState({\r\n                    currentTime: update.currentTime,\r\n                    videoDuration: update.duration\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaEnd = update => {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            this.setState(\r\n                {\r\n                    active: false,\r\n                    srcObject: null,\r\n                    currentTime: 0\r\n                },\r\n                () => {\r\n                    const player = this.videoRef.current;\r\n                    if (!player) return;\r\n\r\n                    this.updateVideoSrc();\r\n\r\n                    if (!window.hasFocus) {\r\n                        player.pause();\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaActive = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { video } = this.props.videoNote;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            if (this.state.active) {\r\n            } else {\r\n                this.setState({\r\n                    active: true,\r\n                    currentTime: null\r\n                });\r\n            }\r\n        } else if (this.state.active) {\r\n            this.setState(\r\n                {\r\n                    active: false,\r\n                    srcObject: null,\r\n                    currentTime: 0\r\n                },\r\n                () => {\r\n                    const player = this.videoRef.current;\r\n                    if (!player) return;\r\n\r\n                    this.updateVideoSrc();\r\n\r\n                    if (!window.hasFocus) {\r\n                        player.pause();\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    };\r\n\r\n    onClientUpdateVideoNoteBlob = update => {\r\n        const { video } = this.props.videoNote;\r\n        const { fileId } = update;\r\n\r\n        if (!video) return;\r\n\r\n        if (video.id === fileId) {\r\n            this.setState(\r\n                {\r\n                    src: getSrc(video)\r\n                },\r\n                () => {\r\n                    this.updateVideoSrc();\r\n                }\r\n            );\r\n        }\r\n    };\r\n\r\n    onClientUpdateVideoNoteThumbnailBlob = update => {\r\n        const { thumbnail } = this.props.videoNote;\r\n        if (!thumbnail) return;\r\n\r\n        const { fileId } = update;\r\n\r\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    handleCanPlay = () => {\r\n        // const player = this.videoRef.current;\r\n        // if (player){\r\n        //     if (this.state.active){\r\n        //         player.muted = false;\r\n        //     }\r\n        //     else{\r\n        //         player.muted = true;\r\n        //     }\r\n        // }\r\n    };\r\n\r\n    render() {\r\n        const { displaySize, chatId, messageId, openMedia } = this.props;\r\n        const { active, currentTime, videoDuration } = this.state;\r\n        const { thumbnail, video, duration } = this.props.videoNote;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const style = { width: 200, height: 200 };\r\n        if (!style) return null;\r\n\r\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\r\n        const src = getSrc(video);\r\n        const isBlurred = isBlurredThumbnail(thumbnail);\r\n\r\n        let progress = 0;\r\n        if (videoDuration && currentTime) {\r\n            const progressTime = currentTime + 0.25;\r\n            progress = (progressTime / videoDuration) * 100;\r\n        }\r\n\r\n        return (\r\n            <div\r\n                className={classNames('video-note', { 'video-note-playing': active })}\r\n                style={style}\r\n                onClick={openMedia}>\r\n                {src ? (\r\n                    <>\r\n                        <video\r\n                            ref={this.videoRef}\r\n                            className={classNames('media-viewer-content-image', 'video-note-round')}\r\n                            poster={thumbnailSrc}\r\n                            muted\r\n                            autoPlay\r\n                            loop\r\n                            playsInline\r\n                            width={style.width}\r\n                            height={style.height}\r\n                            onCanPlay={this.handleCanPlay}\r\n                        />\r\n                        <div className='video-note-player'>\r\n                            <div className='video-note-progress'>\r\n                                <CircularProgress\r\n                                    classes={circleStyle}\r\n                                    variant='static'\r\n                                    value={progress}\r\n                                    size={200}\r\n                                    thickness={1}\r\n                                />\r\n                            </div>\r\n                            <div className='animation-meta'>\r\n                                {getDurationString(active ? Math.floor(currentTime) : duration)}\r\n                                <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\r\n                            </div>\r\n                            <div className='video-note-muted'>\r\n                                <VolumeOffIcon />\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <div className='video-note-round'>\r\n                            <img\r\n                                className={classNames('animation-preview', { 'media-blurred': isBlurred })}\r\n                                style={style}\r\n                                src={thumbnailSrc}\r\n                                alt=''\r\n                            />\r\n                        </div>\r\n                        <div className='animation-meta'>\r\n                            {getDurationString(duration) + ' ' + getFileSize(video)}\r\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\r\n                        </div>\r\n                        <div className='video-note-muted'>\r\n                            <VolumeOffIcon />\r\n                        </div>\r\n                    </>\r\n                )}\r\n                <FileProgress file={video} download upload cancelButton icon={<ArrowDownwardIcon />} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nVideoNote.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    videoNote: PropTypes.object.isRequired,\r\n    openMedia: PropTypes.func.isRequired,\r\n    size: PropTypes.number,\r\n    displaySize: PropTypes.number\r\n};\r\n\r\nVideoNote.defaultProps = {\r\n    size: PHOTO_SIZE,\r\n    displaySize: PHOTO_DISPLAY_SIZE\r\n};\r\n\r\nexport default VideoNote;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { isContentOpened } from '../../../Utils/Message';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\n\r\nclass MediaStatus extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        this.state = {\r\n            isOpened: isContentOpened(chatId, messageId)\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('updateMessageContentOpened', this.onUpdateMessageContentOpened);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.removeListener('updateMessageContentOpened', this.onUpdateMessageContentOpened);\r\n    }\r\n\r\n    onUpdateMessageContentOpened = update => {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (chatId === update.chat_id && messageId === update.message_id) {\r\n            this.setState({ isOpened: isContentOpened(chatId, messageId) });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { icon, openedIcon } = this.props;\r\n        const { isOpened } = this.state;\r\n\r\n        return isOpened ? openedIcon : icon;\r\n    }\r\n}\r\n\r\nMediaStatus.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    icon: PropTypes.node,\r\n    openedIcon: PropTypes.node\r\n};\r\n\r\nMediaStatus.defaultProps = {\r\n    icon: null,\r\n    openedIcon: null\r\n};\r\n\r\nexport default MediaStatus;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { compose } from 'recompose';\r\nimport { withTranslation } from 'react-i18next';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport ReplyTile from '../Tile/ReplyTile';\r\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize } from '../../Utils/Message';\r\nimport { accentStyles } from '../Theme';\r\nimport { openChat } from '../../Actions/Client';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\nimport './Reply.css';\r\n\r\nconst styles = theme => ({\r\n    ...accentStyles(theme)\r\n});\r\n\r\nclass Reply extends React.Component {\r\n    componentDidMount() {\r\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.removeListener('getMessageResult', this.onGetMessageResult);\r\n    }\r\n\r\n    onGetMessageResult = result => {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (chatId === result.chat_id && messageId === result.id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    handleClick = event => {\r\n        event.stopPropagation();\r\n    };\r\n\r\n    handleOpen = event => {\r\n        event.stopPropagation();\r\n\r\n        const { chatId, messageId, parentChatId, parentMessageId } = this.props;\r\n        ApplicationStore.setPrevChatId(parentChatId);\r\n        ApplicationStore.setPrevMessageId(parentMessageId);\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n        if (isDeletedMessage(message)) return null;\r\n\r\n        openChat(chatId, messageId);\r\n    };\r\n\r\n    render() {\r\n        const { classes, t, chatId, messageId } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n\r\n        let title = !message ? null : getTitle(message);\r\n        let content = !message ? t('Loading') : getContent(message, t);\r\n        const photoSize = getReplyPhotoSize(chatId, messageId);\r\n\r\n        if (isDeletedMessage(message)) {\r\n            title = null;\r\n            content = t('DeletedMessage');\r\n        }\r\n\r\n        return (\r\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\r\n                <div className='reply-wrapper'>\r\n                    <div className={classNames('reply-border', classes.accentBackgroundLight)} />\r\n                    {photoSize && <ReplyTile chatId={chatId} messageId={messageId} photoSize={photoSize} />}\r\n                    <div className='reply-content'>\r\n                        {title && (\r\n                            <div className={classNames('reply-content-title', classes.accentColorMain)}>{title}</div>\r\n                        )}\r\n                        <div className='reply-content-subtitle'>{content}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nReply.propTypes = {\r\n    chatId: PropTypes.number,\r\n    messageId: PropTypes.number\r\n};\r\n\r\nconst enhance = compose(\r\n    withStyles(styles, { withTheme: true }),\r\n    withTranslation()\r\n);\r\n\r\nexport default enhance(Reply);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { getSrc } from '../../Utils/File';\r\nimport { isBlurredThumbnail } from '../../Utils/Media';\r\nimport { hasVideoNote } from '../../Utils/Message';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './ReplyTile.css';\r\n\r\nclass ReplyTile extends React.Component {\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.removeListener('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.removeListener('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.removeListener('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.removeListener('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n    }\r\n\r\n    onClientUpdatePhotoBlob = update => {\r\n        const { chatId, messageId, photoSize } = this.props;\r\n        if (!photoSize) return;\r\n\r\n        const { photo } = photoSize;\r\n        if (!photo) return;\r\n\r\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, photoSize } = this.props;\r\n        if (!photoSize) return null;\r\n\r\n        const { photo } = photoSize;\r\n        if (!photo) return null;\r\n\r\n        const src = getSrc(photo);\r\n        const isBlurred = isBlurredThumbnail(photo);\r\n        const isVideoNote = hasVideoNote(chatId, messageId);\r\n\r\n        return (\r\n            <div className='reply-tile'>\r\n                <img\r\n                    className={classNames(\r\n                        'reply-tile-photo',\r\n                        { 'reply-tile-photo-round': isVideoNote },\r\n                        { 'reply-tile-photo-loading': !src },\r\n                        { 'media-blurred': isBlurred }\r\n                    )}\r\n                    draggable={false}\r\n                    src={src}\r\n                    alt=''\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nReplyTile.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    photoSize: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ReplyTile;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { isChatMuted } from '../../Utils/Chat';\r\nimport { debounce } from '../../Utils/Common';\r\nimport {\r\n    MUTED_VALUE_MAX,\r\n    NOTIFICATIONS_DEBOUNCE_DELAY_MS,\r\n    MUTED_VALUE_MIN\r\n} from '../../Constants';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\n\r\nclass NotificationsControl extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId } = props;\r\n        const chat = ChatStore.get(chatId);\r\n        const isMuted = isChatMuted(chat);\r\n\r\n        this.state = {\r\n            prevChatId: chatId,\r\n            isMuted: isMuted\r\n        };\r\n\r\n        this.debouncedSetChatNotificationSettings = debounce(this.setChatNotificationSettings, NOTIFICATIONS_DEBOUNCE_DELAY_MS);\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.chatId !== state.prevChatId) {\r\n            const { chatId } = props;\r\n            const chat = ChatStore.get(chatId);\r\n            const isMuted = isChatMuted(chat);\r\n\r\n            return {\r\n                prevChatId: props.chatId,\r\n                isMuted: isMuted\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\r\n        ApplicationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.removeListener('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\r\n        ApplicationStore.removeListener('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\r\n    }\r\n\r\n    onUpdateChatNotificationSettings = (update) => {\r\n        const { chatId } = this.props;\r\n        if (!update.chat_id) return;\r\n        if (update.chat_id !== chatId) return;\r\n\r\n        const chat = ChatStore.get(update.chat_id);\r\n        if (!chat) return;\r\n\r\n        this.setState({ isMuted: isChatMuted(chat) });\r\n    };\r\n\r\n    onUpdateScopeNotificationSettings = (update) => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        switch (update.scope['@type']) {\r\n            case 'notificationSettingsScopeGroupChats': {\r\n                if (\r\n                    chat.type['@type'] === 'chatTypeBasicGroup' ||\r\n                    chat.type['@type'] === 'chatTypeSupergroup'\r\n                ) {\r\n                    this.setState({ isMuted: isChatMuted(chat) });\r\n                }\r\n                break;\r\n            }\r\n            case 'notificationSettingsScopePrivateChats': {\r\n                if (\r\n                    chat.type['@type'] === 'chatTypePrivate' ||\r\n                    chat.type['@type'] === 'chatTypeSecret'\r\n                ) {\r\n                    this.setState({ isMuted: isChatMuted(chat) });\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    handleSetChatNotifications = () => {\r\n        this.setState({ isMuted: !this.state.isMuted });\r\n        this.debouncedSetChatNotificationSettings();\r\n    };\r\n\r\n    setChatNotificationSettings = () => {\r\n        const { chatId } = this.props;\r\n        const { isMuted } = this.state;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.notification_settings) return;\r\n\r\n        const isMutedPrev = isChatMuted(chat);\r\n        if (isMutedPrev === isMuted) {\r\n            return;\r\n        }\r\n\r\n        const muteFor = isMuted ? MUTED_VALUE_MAX : MUTED_VALUE_MIN;\r\n        const newNotificationSettings = {\r\n            ...chat.notification_settings,\r\n            use_default_mute_for: false,\r\n            mute_for: muteFor\r\n        };\r\n\r\n        TdLibController.send({\r\n            '@type': 'setChatNotificationSettings',\r\n            chat_id: chatId,\r\n            notification_settings: newNotificationSettings\r\n        });\r\n    };\r\n}\r\n\r\nexport default NotificationsControl;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from 'recompose';\r\nimport { withTranslation } from 'react-i18next';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport PhotoIcon from '@material-ui/icons/Photo';\r\nimport PollIcon from '@material-ui/icons/Poll';\r\nimport { canSendDocuments, canSendPhotos, canSendPolls, isPrivateChat } from '../../Utils/Chat';\r\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\r\n\r\nconst styles = {\r\n    iconButton: {\r\n        margin: '8px 0'\r\n    }\r\n};\r\n\r\nclass AttachButton extends React.Component {\r\n    state = {\r\n        anchorEl: null\r\n    };\r\n\r\n    handleMenuClick = event => {\r\n        this.setState({ anchorEl: event.currentTarget });\r\n    };\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleAttachPhoto = () => {\r\n        this.handleMenuClose();\r\n\r\n        const { onAttachPhoto } = this.props;\r\n        if (!onAttachPhoto) return;\r\n\r\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\r\n    };\r\n\r\n    handleAttachDocument = () => {\r\n        this.handleMenuClose();\r\n\r\n        const { onAttachDocument } = this.props;\r\n        if (!onAttachDocument) return;\r\n\r\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\r\n    };\r\n\r\n    handleAttachPoll = () => {\r\n        this.handleMenuClose();\r\n\r\n        const { onAttachPoll } = this.props;\r\n        if (!onAttachPoll) return;\r\n\r\n        onAttachPoll();\r\n    };\r\n\r\n    render() {\r\n        const { classes, t, chatId } = this.props;\r\n        const { anchorEl } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <IconButton\r\n                    className={classes.iconButton}\r\n                    aria-label='Attach'\r\n                    open={Boolean(anchorEl)}\r\n                    onClick={this.handleMenuClick}>\r\n                    <AttachFileIcon className='inputbox-attach-icon' />\r\n                </IconButton>\r\n                <Menu\r\n                    id='attach-menu'\r\n                    anchorEl={anchorEl}\r\n                    open={Boolean(anchorEl)}\r\n                    getContentAnchorEl={null}\r\n                    disableAutoFocusItem\r\n                    disableRestoreFocus={true}\r\n                    anchorOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    onClose={this.handleMenuClose}>\r\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendPhotos(chatId)}>\r\n                        <ListItemIcon>\r\n                            <PhotoIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('AttachPhoto')} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendDocuments(chatId)}>\r\n                        <ListItemIcon>\r\n                            <InsertDriveFileIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('AttachDocument')} />\r\n                    </MenuItem>\r\n                    {!isPrivateChat(chatId) && (\r\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\r\n                            <ListItemIcon>\r\n                                <PollIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Poll')} />\r\n                        </MenuItem>\r\n                    )}\r\n                </Menu>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nAttachButton.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    onAttachDocument: PropTypes.func.isRequired,\r\n    onAttachPhoto: PropTypes.func.isRequired,\r\n    onAttachPoll: PropTypes.func.isRequired\r\n};\r\n\r\nconst enhance = compose(\r\n    withStyles(styles, { withTheme: true }),\r\n    withTranslation()\r\n);\r\n\r\nexport default enhance(AttachButton);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nexport function focusNode(node, toEnd = false) {\r\n    if (!node) return;\r\n\r\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\r\n        const lastNode = node.childNodes[node.childNodes.length - 1];\r\n        const range = document.createRange();\r\n        range.setStart(lastNode, lastNode.length);\r\n        range.collapse(true);\r\n\r\n        const selection = window.getSelection();\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n\r\n        node.scrollTop = node.scrollHeight;\r\n    }\r\n\r\n    node.focus();\r\n}\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nconst keys = {\r\n    backspace: 8,\r\n    shift: 16,\r\n    ctrl: 17,\r\n    alt: 18,\r\n    delete: 46,\r\n    cmd: 91,\r\n    leftArrow: 37,\r\n    upArrow: 38,\r\n    rightArrow: 39,\r\n    downArrow: 40\r\n};\r\n\r\nexport const utils = {\r\n    special: {},\r\n    navigational: {},\r\n    isSpecial(e) {\r\n        return typeof this.special[e.keyCode] !== 'undefined';\r\n    },\r\n    isNavigational(e) {\r\n        return typeof this.navigational[e.keyCode] !== 'undefined';\r\n    }\r\n};\r\n\r\nutils.special[keys['backspace']] = true;\r\nutils.special[keys['shift']] = true;\r\nutils.special[keys['ctrl']] = true;\r\nutils.special[keys['alt']] = true;\r\nutils.special[keys['delete']] = true;\r\n\r\nutils.navigational[keys['upArrow']] = true;\r\nutils.navigational[keys['downArrow']] = true;\r\nutils.navigational[keys['leftArrow']] = true;\r\nutils.navigational[keys['rightArrow']] = true;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { compose } from 'recompose';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport { withTranslation } from 'react-i18next';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/es/Typography/Typography';\r\nimport { focusNode } from '../../Utils/Component';\r\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\r\nimport { utils } from '../../Utils/Key';\r\nimport { borderStyle } from '../Theme';\r\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './CreatePollOption.css';\r\n\r\nconst styles = theme => ({\r\n    iconButton: {\r\n        padding: 4\r\n    },\r\n    counterRoot: {\r\n        position: 'absolute',\r\n        right: 24,\r\n        bottom: 6,\r\n        minWidth: 28,\r\n        userSelect: 'none'\r\n    },\r\n    ...borderStyle(theme)\r\n});\r\n\r\nclass CreatePollOption extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.optionTextRef = React.createRef();\r\n\r\n        this.state = {\r\n            remainLength: POLL_OPTION_MAX_LENGTH\r\n        };\r\n    }\r\n\r\n    getText = () => {\r\n        return this.optionTextRef.current.innerText;\r\n    };\r\n\r\n    focus = (toEnd = false) => {\r\n        const node = this.optionTextRef.current;\r\n\r\n        focusNode(node, toEnd);\r\n    };\r\n\r\n    handleDelete = () => {\r\n        const { option, onDelete } = this.props;\r\n        if (!option) return;\r\n        if (!onDelete) return;\r\n\r\n        onDelete(option.id);\r\n    };\r\n\r\n    handleInput = event => {\r\n        const { option } = this.props;\r\n\r\n        event.preventDefault();\r\n\r\n        const node = this.optionTextRef.current;\r\n        const length = node.dataset.length;\r\n        const maxLength = node.dataset.maxLength;\r\n        const text = this.getText();\r\n\r\n        this.setState({\r\n            remainLength: length - text.length\r\n        });\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdatePollOption',\r\n            id: option.id,\r\n            text\r\n        });\r\n    };\r\n\r\n    handleKeyDown = event => {\r\n        const node = this.optionTextRef.current;\r\n        const maxLength = node.dataset.maxLength;\r\n        const innerText = this.getText();\r\n        const length = innerText.length;\r\n\r\n        let hasSelection = false;\r\n        const selection = window.getSelection();\r\n        const isSpecial = utils.isSpecial(event);\r\n        const isNavigational = utils.isNavigational(event);\r\n\r\n        if (selection) {\r\n            hasSelection = !!selection.toString();\r\n        }\r\n\r\n        switch (event.key) {\r\n            case 'Backspace': {\r\n                const text = this.getText();\r\n                if (!text) {\r\n                    const { option, onDelete } = this.props;\r\n                    if (onDelete) {\r\n                        onDelete(option.id, true);\r\n                    }\r\n\r\n                    event.preventDefault();\r\n                    return false;\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'Enter': {\r\n                const { option, onFocusNext } = this.props;\r\n                if (option && onFocusNext) {\r\n                    onFocusNext(option.id);\r\n                }\r\n\r\n                event.preventDefault();\r\n                return false;\r\n            }\r\n            case 'ArrowUp': {\r\n                const selection = window.getSelection();\r\n                if (!selection) break;\r\n                if (!selection.isCollapsed) break;\r\n\r\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\r\n\r\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\r\n                    const { option, onFocusPrev } = this.props;\r\n                    if (onFocusPrev) {\r\n                        onFocusPrev(option.id);\r\n                    }\r\n\r\n                    event.preventDefault();\r\n                    return false;\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'ArrowDown': {\r\n                const selection = window.getSelection();\r\n                if (!selection) break;\r\n                if (!selection.isCollapsed) break;\r\n\r\n                const lastChild =\r\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\r\n\r\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\r\n                    const { option, onFocusNext } = this.props;\r\n                    if (onFocusNext) {\r\n                        onFocusNext(option.id);\r\n                    }\r\n\r\n                    event.preventDefault();\r\n                    return false;\r\n                }\r\n\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (isSpecial || isNavigational) {\r\n            return true;\r\n        }\r\n\r\n        if (length >= maxLength && !hasSelection) {\r\n            event.preventDefault();\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    handlePaste = event => {\r\n        event.preventDefault();\r\n\r\n        const node = this.optionTextRef.current;\r\n        const maxLength = node.dataset.maxLength;\r\n\r\n        const selection = window.getSelection();\r\n        const selectionString = selection ? selection.toString() : '';\r\n\r\n        const innerText = this.getText();\r\n        if (innerText.length - selection.length >= maxLength) return;\r\n\r\n        let pasteText = event.clipboardData.getData('text/plain');\r\n        if (!pasteText) return;\r\n\r\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\r\n\r\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\r\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\r\n        }\r\n        document.execCommand('insertHTML', false, pasteText);\r\n    };\r\n\r\n    render() {\r\n        const { classes, t } = this.props;\r\n        const { remainLength } = this.state;\r\n\r\n        return (\r\n            <div className='create-poll-option'>\r\n                <div\r\n                    ref={this.optionTextRef}\r\n                    id='create-poll-option-text'\r\n                    contentEditable\r\n                    suppressContentEditableWarning\r\n                    placeholder={t('Option')}\r\n                    data-length={POLL_OPTION_LENGTH}\r\n                    data-max-length={POLL_OPTION_MAX_LENGTH}\r\n                    onInput={this.handleInput}\r\n                    onKeyDown={this.handleKeyDown}\r\n                    onPaste={this.handlePaste}\r\n                />\r\n                <div className='create-poll-option-delete-button'>\r\n                    <IconButton className={classes.iconButton} onClick={this.handleDelete}>\r\n                        <CloseIcon fontSize='small' />\r\n                    </IconButton>\r\n                </div>\r\n                <div className={classNames('create-poll-option-bottom-border', { [classes.borderColor]: true })} />\r\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\r\n                    <Typography\r\n                        align='center'\r\n                        className={classes.counterRoot}\r\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\r\n                        variant='subtitle1'>\r\n                        {remainLength}\r\n                    </Typography>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nCreatePollOption.propTypes = {\r\n    option: PropTypes.object.isRequired,\r\n    onDelete: PropTypes.func.isRequired,\r\n    onFocusPrev: PropTypes.func.isRequired,\r\n    onFocusNext: PropTypes.func.isRequired\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withStyles(styles),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(CreatePollOption);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport { POLL_OPTION_LENGTH, POLL_QUESTION_LENGTH } from '../Constants';\r\n\r\nexport function isValidPoll(poll) {\r\n    if (!poll) return false;\r\n\r\n    const { question, options } = poll;\r\n    if (!isValidQuestion(question)) return false;\r\n\r\n    const noneEmptyOptions = options.filter(x => Boolean(x.text));\r\n    if (noneEmptyOptions.length <= 1) return false;\r\n\r\n    return noneEmptyOptions.every(isValidOption);\r\n}\r\n\r\nfunction isValidQuestion(question) {\r\n    if (!question) return false;\r\n\r\n    return question.length <= POLL_QUESTION_LENGTH;\r\n}\r\n\r\nfunction isValidOption(option) {\r\n    if (!option) return false;\r\n    if (!option.text) return false;\r\n\r\n    return option.text.length <= POLL_OPTION_LENGTH;\r\n}\r\n\r\nexport function hasPollData(poll) {\r\n    if (!poll) return false;\r\n\r\n    const { question, options } = poll;\r\n    if (question) return true;\r\n\r\n    return options.some(x => Boolean(x.text));\r\n}\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport { EventEmitter } from 'events';\r\nimport TdLibController from '../Controllers/TdLibController';\r\nimport { isValidPoll } from '../Utils/Poll';\r\n\r\nclass PollStore extends EventEmitter {\r\n    constructor() {\r\n        super();\r\n\r\n        this.poll = null;\r\n\r\n        this.addTdLibListener();\r\n        this.setMaxListeners(Infinity);\r\n    }\r\n\r\n    onUpdate = update => {};\r\n\r\n    onClientUpdate = update => {\r\n        switch (update['@type']) {\r\n            case 'clientUpdateNewPoll': {\r\n                this.set({\r\n                    id: Date.now(),\r\n                    question: '',\r\n                    options: []\r\n                });\r\n\r\n                this.emit('clientUpdateNewPoll', update);\r\n                break;\r\n            }\r\n            case 'clientUpdatePollQuestion': {\r\n                const { question } = update;\r\n\r\n                this.assign(this.poll, { question });\r\n\r\n                this.emit('clientUpdatePollQuestion', update);\r\n                break;\r\n            }\r\n            case 'clientUpdatePollOption': {\r\n                const { id, text } = update;\r\n                const { options } = this.poll;\r\n\r\n                this.assign(this.poll, { options: options.map(x => (x.id === id ? { ...x, text } : { ...x })) });\r\n\r\n                this.emit('clientUpdatePollOption', update);\r\n                break;\r\n            }\r\n            case 'clientUpdateNewPollOption': {\r\n                const { option } = update;\r\n                const { options } = this.poll;\r\n\r\n                this.assign(this.poll, { options: [...options, option] });\r\n                this.emit('clientUpdateNewPollOption', update);\r\n                break;\r\n            }\r\n            case 'clientUpdateDeletePollOption': {\r\n                const { id } = update;\r\n                const { options } = this.poll;\r\n\r\n                this.assign(this.poll, { options: options.filter(x => x.id !== id) });\r\n                this.emit('clientUpdateDeletePollOption', update);\r\n                break;\r\n            }\r\n            case 'clientUpdateDeletePoll': {\r\n                this.set(null);\r\n\r\n                this.emit('clientUpdateDeletePoll', update);\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    addTdLibListener = () => {\r\n        TdLibController.addListener('update', this.onUpdate);\r\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\r\n    };\r\n\r\n    removeTdLibListener = () => {\r\n        TdLibController.removeListener('update', this.onUpdate);\r\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\r\n    };\r\n\r\n    assign(source1, source2) {\r\n        this.set(Object.assign({}, source1, source2));\r\n    }\r\n\r\n    set(poll) {\r\n        this.poll = poll;\r\n    }\r\n\r\n    getInputMessagePoll() {\r\n        if (!this.poll) return null;\r\n        if (!isValidPoll(this.poll)) return null;\r\n        const { question, options } = this.poll;\r\n\r\n        return {\r\n            '@type': 'inputMessagePoll',\r\n            question,\r\n            options: options.filter(x => Boolean(x.text)).map(x => x.text)\r\n        };\r\n    }\r\n}\r\n\r\nconst store = new PollStore();\r\nwindow.poll = store;\r\nexport default store;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from 'recompose';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CreatePollOption from './CreatePollOption';\r\nimport { focusNode } from '../../Utils/Component';\r\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\r\nimport { utils } from '../../Utils/Key';\r\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\r\nimport {\r\n    POLL_OPTIONS_MAX_COUNT,\r\n    POLL_QUESTION_HINT_LENGTH,\r\n    POLL_QUESTION_LENGTH,\r\n    POLL_QUESTION_MAX_LENGTH\r\n} from '../../Constants';\r\nimport PollStore from '../../Stores/PollStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './CreatePollDialog.css';\r\n\r\nconst styles = theme => ({\r\n    dialogRoot: {\r\n        color: theme.palette.text.primary\r\n    },\r\n    contentRoot: {\r\n        width: 300\r\n    },\r\n    dividerRoot: {\r\n        margin: '8px -24px'\r\n    },\r\n    listRoot: {\r\n        margin: '0 -24px'\r\n    },\r\n    listItem: {\r\n        padding: '11px 24px',\r\n        color: '#8e9396',\r\n        height: 48\r\n    },\r\n    typographyRoot: {}\r\n});\r\n\r\nclass CreatePollDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.questionRef = React.createRef();\r\n        this.optionsRefMap = new Map();\r\n\r\n        this.state = {\r\n            poll: null,\r\n            confirm: false,\r\n            remainLength: POLL_QUESTION_MAX_LENGTH\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\r\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\r\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\r\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\r\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\r\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PollStore.removeListener('clientUpdateDeletePoll', this.handleClientUpdatePoll);\r\n        PollStore.removeListener('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\r\n        PollStore.removeListener('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\r\n        PollStore.removeListener('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\r\n        PollStore.removeListener('clientUpdatePollOption', this.handleClientUpdatePoll);\r\n        PollStore.removeListener('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\r\n    }\r\n\r\n    handleClientUpdateNewPoll = update => {\r\n        const { poll } = PollStore;\r\n\r\n        this.setState({\r\n            confirm: false,\r\n            remainLength: POLL_QUESTION_MAX_LENGTH,\r\n            poll\r\n        });\r\n    };\r\n\r\n    handleClientUpdatePollQuestion = update => {\r\n        const { poll } = PollStore;\r\n\r\n        const node = this.questionRef.current;\r\n        const length = node.dataset.length;\r\n        const innerText = node.innerText;\r\n\r\n        this.setState({\r\n            remainLength: length - innerText.length,\r\n            poll\r\n        });\r\n    };\r\n\r\n    handleClientUpdatePoll = update => {\r\n        const { poll } = PollStore;\r\n\r\n        this.setState({ poll });\r\n    };\r\n\r\n    handleClientUpdateNewPollOption = update => {\r\n        const { poll } = PollStore;\r\n\r\n        this.setState({ poll }, () => {\r\n            setTimeout(() => {\r\n                const node = this.optionsRefMap.get(poll.options.length - 1);\r\n\r\n                node.focus(true);\r\n            });\r\n        });\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { poll } = this.state;\r\n\r\n        if (poll && !prevState.poll) {\r\n            setTimeout(() => {\r\n                focusNode(this.questionRef.current, true);\r\n            }, 0);\r\n        }\r\n    }\r\n\r\n    handleKeyDown = event => {\r\n        const node = this.questionRef.current;\r\n        const maxLength = node.dataset.maxLength;\r\n        const innerText = node.innerText;\r\n        const length = innerText.length;\r\n\r\n        let hasSelection = false;\r\n        const selection = window.getSelection();\r\n        const isSpecial = utils.isSpecial(event);\r\n        const isNavigational = utils.isNavigational(event);\r\n\r\n        if (selection) {\r\n            hasSelection = !!selection.toString();\r\n        }\r\n\r\n        switch (event.key) {\r\n            case 'Enter': {\r\n                if (!event.shiftKey) {\r\n                    this.handleFocusNextOption(0);\r\n\r\n                    event.preventDefault();\r\n                    return false;\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'ArrowDown': {\r\n                const selection = window.getSelection();\r\n                if (!selection) break;\r\n                if (!selection.isCollapsed) break;\r\n\r\n                const lastChild =\r\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\r\n\r\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\r\n                    this.handleFocusNextOption(0);\r\n\r\n                    event.preventDefault();\r\n                    return false;\r\n                }\r\n\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (isSpecial || isNavigational) {\r\n            return true;\r\n        }\r\n\r\n        if (length >= maxLength && !hasSelection) {\r\n            event.preventDefault();\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    handlePaste = event => {\r\n        event.preventDefault();\r\n\r\n        const node = this.questionRef.current;\r\n        const maxLength = node.dataset.maxLength;\r\n\r\n        const selection = window.getSelection();\r\n        const selectionString = selection ? selection.toString() : '';\r\n\r\n        const innerText = node.innerText;\r\n        if (innerText.length - selection.length >= maxLength) return;\r\n\r\n        let pasteText = event.clipboardData.getData('text/plain');\r\n        if (!pasteText) return;\r\n\r\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\r\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\r\n        }\r\n        document.execCommand('insertHTML', false, pasteText);\r\n    };\r\n\r\n    handleInput = event => {\r\n        event.preventDefault();\r\n\r\n        const node = this.questionRef.current;\r\n        //const length = node.dataset.length;\r\n\r\n        const innerText = node.innerText;\r\n        const innerHtml = node.innerHTML;\r\n\r\n        if (innerHtml === '<br>') {\r\n            node.innerText = '';\r\n        }\r\n\r\n        // this.setState({\r\n        //     remainLength: length - innerText.length\r\n        // });\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdatePollQuestion',\r\n            question: innerText\r\n        });\r\n    };\r\n\r\n    handleAddOption = () => {\r\n        const { poll } = this.state;\r\n        if (!poll) return;\r\n\r\n        const { options } = poll;\r\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\r\n\r\n        const option = {\r\n            id: Date.now(),\r\n            text: ''\r\n        };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateNewPollOption',\r\n            option\r\n        });\r\n    };\r\n\r\n    handleDeleteOption = (id, backspace = false) => {\r\n        if (backspace) {\r\n            this.handleDeleteByBackspace(id);\r\n        } else {\r\n            this.handleDelete(id);\r\n        }\r\n    };\r\n\r\n    handleDelete = id => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateDeletePollOption',\r\n            id\r\n        });\r\n    };\r\n\r\n    handleDeleteByBackspace = id => {\r\n        const { poll } = this.state;\r\n        if (!poll) return;\r\n\r\n        const { options } = poll;\r\n\r\n        const index = options.findIndex(x => x.id === id);\r\n        const prevIndex = index - 1;\r\n        let deleteOption = true;\r\n        for (let i = index; i < options.length; i++) {\r\n            const { text } = options[i];\r\n            if (text) {\r\n                deleteOption = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (deleteOption) {\r\n            this.handleDeleteOption(id);\r\n        }\r\n\r\n        const prevNode = this.optionsRefMap.get(prevIndex);\r\n        if (!prevNode) {\r\n            const element = this.questionRef.current;\r\n\r\n            focusNode(element, true);\r\n            return;\r\n        }\r\n\r\n        prevNode.focus(true);\r\n    };\r\n\r\n    handleFocusPrevOption = id => {\r\n        const { poll } = this.state;\r\n        if (!poll) return;\r\n\r\n        const { options } = poll;\r\n\r\n        const index = options.findIndex(x => x.id === id);\r\n        const prevIndex = index - 1;\r\n\r\n        const prevNode = this.optionsRefMap.get(prevIndex);\r\n        if (!prevNode) {\r\n            const element = this.questionRef.current;\r\n\r\n            focusNode(element, false);\r\n            return;\r\n        }\r\n\r\n        prevNode.focus(false);\r\n    };\r\n\r\n    handleFocusNextOption = id => {\r\n        const { poll } = this.state;\r\n        if (!poll) return;\r\n\r\n        const { options } = poll;\r\n\r\n        const index = options.findIndex(x => x.id === id);\r\n        const nextIndex = index + 1;\r\n\r\n        const nextNode = this.optionsRefMap.get(nextIndex);\r\n        if (!nextNode) {\r\n            const text = index >= 0 && index < options.length ? options[index].text : '';\r\n            if (options.length && !text) {\r\n                return;\r\n            }\r\n\r\n            this.handleAddOption();\r\n            return;\r\n        }\r\n\r\n        nextNode.focus(nextNode, true);\r\n    };\r\n\r\n    getHint = () => {\r\n        const { poll } = this.state;\r\n        if (!poll) return;\r\n\r\n        const { options } = poll;\r\n\r\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\r\n\r\n        if (addCount <= 0) {\r\n            return 'You have added the maximum number of options.';\r\n        }\r\n        if (addCount === 1) {\r\n            return 'You can add 1 more option.';\r\n        }\r\n\r\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\r\n    };\r\n\r\n    handleClose = () => {\r\n        const { poll } = this.state;\r\n\r\n        if (hasPollData(poll)) {\r\n            this.setState({ confirm: true });\r\n        } else {\r\n            this.handleConfirmationDone();\r\n        }\r\n    };\r\n\r\n    handleSend = () => {\r\n        const { onSend } = this.props;\r\n\r\n        const inputMessagePoll = PollStore.getInputMessagePoll();\r\n        if (!inputMessagePoll) return;\r\n\r\n        onSend(inputMessagePoll);\r\n\r\n        this.handleConfirmationDone();\r\n    };\r\n\r\n    handleConfirmationClose = () => {\r\n        this.setState({ confirm: false });\r\n    };\r\n\r\n    handleConfirmationDone = () => {\r\n        this.handleConfirmationClose();\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateDeletePoll'\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { classes, t } = this.props;\r\n        const { remainLength, confirm, poll } = this.state;\r\n        if (!poll) return null;\r\n\r\n        const options = poll ? poll.options : [];\r\n\r\n        this.optionsRefMap.clear();\r\n        const items = options.map((x, i) => (\r\n            <CreatePollOption\r\n                ref={el => this.optionsRefMap.set(i, el)}\r\n                key={x.id}\r\n                option={x}\r\n                onDelete={this.handleDeleteOption}\r\n                onFocusPrev={this.handleFocusPrevOption}\r\n                onFocusNext={this.handleFocusNextOption}\r\n            />\r\n        ));\r\n\r\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\r\n        const hint = this.getHint();\r\n\r\n        return (\r\n            <>\r\n                <Dialog\r\n                    className={classes.dialogRoot}\r\n                    open\r\n                    transitionDuration={0}\r\n                    onClose={this.handleClose}\r\n                    aria-labelledby='dialog-title'>\r\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\r\n                    <DialogContent classes={{ root: classes.contentRoot }}>\r\n                        <div className='create-poll-dialog-question-title'>\r\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\r\n                                {t('Question')}\r\n                            </Typography>\r\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\r\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\r\n                                    {remainLength}\r\n                                </Typography>\r\n                            )}\r\n                        </div>\r\n                        <div\r\n                            ref={this.questionRef}\r\n                            id='create-poll-dialog-question'\r\n                            contentEditable\r\n                            suppressContentEditableWarning\r\n                            placeholder={t('QuestionHint')}\r\n                            data-length={POLL_QUESTION_LENGTH}\r\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\r\n                            onPaste={this.handlePaste}\r\n                            onKeyDown={this.handleKeyDown}\r\n                            onInput={this.handleInput}\r\n                        />\r\n                        <Divider className={classes.dividerRoot} />\r\n                        <Typography color='primary' variant='subtitle1'>\r\n                            {t('PollOptions')}\r\n                        </Typography>\r\n                        <List classes={{ root: classes.listRoot }}>\r\n                            {items}\r\n                            {canAddOption && (\r\n                                <ListItem\r\n                                    selected={false}\r\n                                    className={classes.listItem}\r\n                                    button\r\n                                    onClick={this.handleAddOption}>\r\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\r\n                                </ListItem>\r\n                            )}\r\n                        </List>\r\n                        <Typography>{hint}</Typography>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button color='primary' onClick={this.handleClose}>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        {isValidPoll(poll) && (\r\n                            <Button color='primary' onClick={this.handleSend}>\r\n                                {t('Send')}\r\n                            </Button>\r\n                        )}\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog\r\n                    className={classes.dialogRoot}\r\n                    open={confirm}\r\n                    transitionDuration={0}\r\n                    onClose={this.handleConfirmationClose}\r\n                    aria-labelledby='dialog-title'>\r\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\r\n                    <DialogContent classes={{ root: classes.contentRoot }}>{t('CancelPollAlertText')}</DialogContent>\r\n                    <DialogActions>\r\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\r\n                            {t('Ok')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nCreatePollDialog.propTypes = {\r\n    onSend: PropTypes.func.isRequired\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withStyles(styles),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(CreatePollDialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReplyIcon from '@material-ui/icons/Reply';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport Reply from '../Message/Reply';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './InputBoxHeader.css';\r\n\r\nconst styles = theme => ({\r\n    replyIcon: {\r\n        padding: 12,\r\n        color: theme.palette.action.active\r\n    },\r\n    closeIconButton: {\r\n        margin: 0\r\n    }\r\n});\r\n\r\nclass InputBoxHeader extends React.Component {\r\n    handleClose = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateReply',\r\n            chatId: this.props.chatId,\r\n            messageId: 0\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { classes, chatId, messageId } = this.props;\r\n        if (!chatId) return null;\r\n        if (!messageId) return null;\r\n\r\n        return (\r\n            <div className='inputbox-header'>\r\n                <div className='inputbox-header-left-column'>\r\n                    <ReplyIcon className={classes.replyIcon} />\r\n                </div>\r\n                <div className='inputbox-header-middle-column'>\r\n                    <Reply chatId={chatId} messageId={messageId} />\r\n                </div>\r\n                <div className='inputbox-header-right-column'>\r\n                    <IconButton className={classes.closeIconButton} aria-label='Close' onClick={this.handleClose}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nInputBoxHeader.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(InputBoxHeader);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\r\nimport TdLibController from '../Controllers/TdLibController';\r\n\r\nclass OutputTypingManager {\r\n    constructor(chatId) {\r\n        this.chatId = chatId;\r\n        this.lastAction = null;\r\n    }\r\n\r\n    setTyping(action) {\r\n        if (!this.chatId) return;\r\n\r\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\r\n            let now = new Date();\r\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\r\n            if (this.lastTypingDate && this.lastTypingDate > now) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.lastAction = action;\r\n        this.lastTypingDate = new Date();\r\n\r\n        TdLibController.send({\r\n            '@type': 'sendChatAction',\r\n            chat_id: this.chatId,\r\n            action: action\r\n        });\r\n    }\r\n}\r\n\r\nexport default OutputTypingManager;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport { compose } from 'recompose';\r\nimport emojiRegex from 'emoji-regex';\r\nimport { withTranslation } from 'react-i18next';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport AttachButton from './../ColumnMiddle/AttachButton';\r\nimport CreatePollDialog from '../Dialog/CreatePollDialog';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputBoxHeader from './InputBoxHeader';\r\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\r\nimport { getSize, readImageSize } from '../../Utils/Common';\r\nimport { getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\r\nimport { borderStyle } from '../Theme';\r\nimport { PHOTO_SIZE } from '../../Constants';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport StickerStore from '../../Stores/StickerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './InputBoxControl.css';\r\n\r\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\r\n\r\nconst styles = theme => ({\r\n    iconButton: {\r\n        margin: '8px 0'\r\n    },\r\n    closeIconButton: {\r\n        margin: 0\r\n    },\r\n    ...borderStyle(theme)\r\n});\r\n\r\nclass InputBoxControl extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.attachDocumentRef = React.createRef();\r\n        this.attachPhotoRef = React.createRef();\r\n        this.newMessageRef = React.createRef();\r\n\r\n        const chatId = ApplicationStore.getChatId();\r\n\r\n        this.innerHTML = null;\r\n        this.state = {\r\n            chatId: chatId,\r\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\r\n            openPasteDialog: false\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { theme, t } = this.props;\r\n        const { chatId, replyToMessageId, openPasteDialog } = this.state;\r\n\r\n        if (nextProps.theme !== theme) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.t !== t) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.replyToMessageId !== replyToMessageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openPasteDialog !== openPasteDialog) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        //console.log('Perf componentDidMount');\r\n\r\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\r\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\r\n\r\n        this.setInputFocus();\r\n        this.setDraft();\r\n        this.handleInput();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const newChatDraftMessage = this.getNewChatDraftMessage(this.state.chatId, this.state.replyToMessageId);\r\n        this.setChatDraftMessage(newChatDraftMessage);\r\n\r\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\r\n        MessageStore.removeListener('clientUpdateReply', this.onClientUpdateReply);\r\n        StickerStore.removeListener('clientUpdateStickerSend', this.onClientUpdateStickerSend);\r\n    }\r\n\r\n    onClientUpdateStickerSend = update => {\r\n        const { sticker: item } = update;\r\n        if (!item) return;\r\n\r\n        const { sticker, thumbnail, width, height } = item;\r\n        if (!sticker) return;\r\n\r\n        this.newMessageRef.current.innerText = null;\r\n        this.newMessageRef.current.textContent = null;\r\n        this.innerHTML = null;\r\n\r\n        const content = {\r\n            '@type': 'inputMessageSticker',\r\n            sticker: {\r\n                '@type': 'inputFileId',\r\n                id: sticker.id\r\n            },\r\n            width,\r\n            height\r\n        };\r\n\r\n        if (thumbnail) {\r\n            const { width: thumbnailWidth, height: thumbnailHeight, photo } = thumbnail;\r\n\r\n            content.thumbnail = {\r\n                thumbnail: {\r\n                    '@type': 'inputFileId',\r\n                    id: photo.id\r\n                },\r\n                width: thumbnailWidth,\r\n                height: thumbnailHeight\r\n            };\r\n        }\r\n\r\n        this.onSendInternal(content, true, result => {});\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateLocalStickersHint',\r\n            hint: null\r\n        });\r\n    };\r\n\r\n    onClientUpdateReply = update => {\r\n        const { chatId: currentChatId } = this.state;\r\n        const { chatId, messageId } = update;\r\n\r\n        if (currentChatId !== chatId) {\r\n            return;\r\n        }\r\n\r\n        this.setState({ replyToMessageId: messageId });\r\n\r\n        if (messageId) {\r\n            this.setInputFocus();\r\n        }\r\n    };\r\n\r\n    onClientUpdateChatId = update => {\r\n        const { chatId } = this.state;\r\n        if (chatId === update.nextChatId) return;\r\n\r\n        this.innerHTML = null;\r\n        this.setState({\r\n            chatId: update.nextChatId,\r\n            replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\r\n            openPasteDialog: false\r\n        });\r\n    };\r\n\r\n    setDraft = () => {\r\n        const { chatId } = this.state;\r\n\r\n        const element = this.newMessageRef.current;\r\n\r\n        const draft = getChatDraft(chatId);\r\n        if (draft) {\r\n            element.innerText = draft.text;\r\n            this.innerHTML = draft.text;\r\n        } else {\r\n            element.innerText = null;\r\n            this.innerHTML = null;\r\n        }\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        //console.log('Perf componentDidUpdate');\r\n        this.setChatDraftMessage(snapshot);\r\n\r\n        if (prevState.chatId !== this.state.chatId) {\r\n            this.setInputFocus();\r\n            this.setDraft();\r\n            this.handleInput();\r\n        }\r\n    }\r\n\r\n    getSnapshotBeforeUpdate(prevProps, prevState) {\r\n        if (prevState.chatId === this.state.chatId) return null;\r\n\r\n        return this.getNewChatDraftMessage(prevState.chatId, prevState.replyToMessageId);\r\n    }\r\n\r\n    setInputFocus = () => {\r\n        setTimeout(() => {\r\n            if (this.newMessageRef.current) {\r\n                const element = this.newMessageRef.current;\r\n\r\n                if (element.childNodes.length > 0) {\r\n                    const range = document.createRange();\r\n                    range.setStart(element.childNodes[0], element.childNodes[0].length);\r\n                    range.collapse(true);\r\n\r\n                    const selection = window.getSelection();\r\n                    selection.removeAllRanges();\r\n                    selection.addRange(range);\r\n                }\r\n                element.focus();\r\n            }\r\n        }, 100);\r\n    };\r\n\r\n    setChatDraftMessage = chatDraftMessage => {\r\n        if (!chatDraftMessage) return;\r\n\r\n        const { chatId, draftMessage } = chatDraftMessage;\r\n        if (!chatId) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'setChatDraftMessage',\r\n            chat_id: chatId,\r\n            draft_message: draftMessage\r\n        });\r\n    };\r\n\r\n    getNewChatDraftMessage = (chatId, replyToMessageId) => {\r\n        let chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        const newDraft = this.getInputText();\r\n\r\n        let previousDraft = '';\r\n        let previousReplyToMessageId = 0;\r\n        const { draft_message } = chat;\r\n        if (draft_message && draft_message.input_message_text && draft_message.input_message_text.text) {\r\n            const { reply_to_message_id, input_message_text } = draft_message;\r\n\r\n            previousReplyToMessageId = reply_to_message_id;\r\n            if (input_message_text && input_message_text.text) {\r\n                previousDraft = input_message_text.text.text;\r\n            }\r\n        }\r\n\r\n        if (newDraft !== previousDraft || replyToMessageId !== previousReplyToMessageId) {\r\n            const draftMessage = {\r\n                '@type': 'draftMessage',\r\n                reply_to_message_id: replyToMessageId,\r\n                input_message_text: {\r\n                    '@type': 'inputMessageText',\r\n                    text: {\r\n                        '@type': 'formattedText',\r\n                        text: newDraft,\r\n                        entities: null\r\n                    },\r\n                    disable_web_page_preview: true,\r\n                    clear_draft: false\r\n                }\r\n            };\r\n\r\n            return { chatId: chatId, draftMessage: draftMessage };\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    handleSubmit = () => {\r\n        let text = this.getInputText();\r\n\r\n        this.newMessageRef.current.innerText = null;\r\n        this.newMessageRef.current.textContent = null;\r\n        this.innerHTML = null;\r\n\r\n        if (!text) return;\r\n\r\n        const content = {\r\n            '@type': 'inputMessageText',\r\n            text: {\r\n                '@type': 'formattedText',\r\n                text: text,\r\n                entities: null\r\n            },\r\n            disable_web_page_preview: false,\r\n            clear_draft: true\r\n        };\r\n\r\n        this.onSendInternal(content, false, result => {});\r\n    };\r\n\r\n    handleAttachPoll = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateNewPoll'\r\n        });\r\n    };\r\n\r\n    handleAttachPhoto = () => {\r\n        if (!this.attachPhotoRef) return;\r\n\r\n        this.attachPhotoRef.current.click();\r\n    };\r\n\r\n    handleAttachPhotoComplete = () => {\r\n        let files = this.attachPhotoRef.current.files;\r\n        if (files.length === 0) return;\r\n\r\n        Array.from(files).forEach(file => {\r\n            readImageSize(file, result => {\r\n                this.handleSendPhoto(result);\r\n            });\r\n        });\r\n\r\n        this.attachPhotoRef.current.value = '';\r\n    };\r\n\r\n    handleAttachDocument = () => {\r\n        if (!this.attachDocumentRef) return;\r\n\r\n        this.attachDocumentRef.current.click();\r\n    };\r\n\r\n    handleAttachDocumentComplete = () => {\r\n        let files = this.attachDocumentRef.current.files;\r\n        if (files.length === 0) return;\r\n\r\n        Array.from(files).forEach(file => {\r\n            this.handleSendDocument(file);\r\n        });\r\n\r\n        this.attachDocumentRef.current.value = '';\r\n    };\r\n\r\n    getInputText() {\r\n        let innerText = this.newMessageRef.current.innerText;\r\n        let innerHTML = this.newMessageRef.current.innerHTML;\r\n\r\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\r\n            this.newMessageRef.current.innerHTML = '';\r\n        }\r\n\r\n        return innerText;\r\n    }\r\n\r\n    handleKeyUp = () => {\r\n        const { chatId } = this.state;\r\n\r\n        if (isMeChat(chatId)) return;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const innerText = this.newMessageRef.current.innerText;\r\n        const innerHTML = this.newMessageRef.current.innerHTML;\r\n\r\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\r\n            this.newMessageRef.current.innerHTML = '';\r\n        }\r\n\r\n        if (!innerText) return;\r\n\r\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\r\n\r\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\r\n    };\r\n\r\n    handleKeyDown = e => {\r\n        const innerText = this.newMessageRef.current.innerText;\r\n        const innerHTML = this.newMessageRef.current.innerHTML;\r\n        this.innerHTML = innerHTML;\r\n\r\n        if (e.key === 'Enter' && !e.shiftKey) {\r\n            e.preventDefault();\r\n            this.handleSubmit();\r\n        }\r\n    };\r\n\r\n    handleSendPhoto = file => {\r\n        if (!file) return;\r\n\r\n        const content = {\r\n            '@type': 'inputMessagePhoto',\r\n            photo: { '@type': 'inputFileBlob', name: file.name, data: file },\r\n            width: file.photoWidth,\r\n            height: file.photoHeight\r\n        };\r\n\r\n        this.onSendInternal(content, true, result => {\r\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\r\n            if (cachedMessage != null) {\r\n                this.handleSendingMessage(cachedMessage, file);\r\n            }\r\n\r\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\r\n        });\r\n    };\r\n\r\n    handleSendPoll = poll => {\r\n        this.onSendInternal(poll, true, () => {});\r\n    };\r\n\r\n    handleSendDocument = file => {\r\n        if (!file) return;\r\n\r\n        const content = {\r\n            '@type': 'inputMessageDocument',\r\n            document: { '@type': 'inputFileBlob', name: file.name, data: file }\r\n        };\r\n\r\n        this.onSendInternal(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\r\n    };\r\n\r\n    handlePaste = event => {\r\n        const items = (event.clipboardData || event.originalEvent.clipboardData).items;\r\n\r\n        const files = [];\r\n        for (let i = 0; i < items.length; i++) {\r\n            if (items[i].kind.indexOf('file') === 0) {\r\n                files.push(items[i].getAsFile());\r\n            }\r\n        }\r\n\r\n        if (files.length > 0) {\r\n            event.preventDefault();\r\n\r\n            this.files = files;\r\n            this.setState({ openPasteDialog: true });\r\n            return;\r\n        }\r\n\r\n        const plainText = event.clipboardData.getData('text/plain');\r\n        if (plainText) {\r\n            event.preventDefault();\r\n            document.execCommand('insertHTML', false, plainText);\r\n            this.innerHTML = plainText;\r\n            return;\r\n        }\r\n    };\r\n\r\n    handlePasteContinue = () => {\r\n        this.handleClosePaste();\r\n\r\n        const files = this.files;\r\n        if (!files) return;\r\n        if (!files.length) return;\r\n\r\n        files.forEach(file => {\r\n            this.handleSendDocument(file);\r\n        });\r\n\r\n        this.files = null;\r\n    };\r\n\r\n    handleClosePaste = () => {\r\n        this.setState({ openPasteDialog: false });\r\n    };\r\n\r\n    handleSendingMessage = (message, blob) => {\r\n        if (message && message.sending_state && message.sending_state['@type'] === 'messageSendingStatePending') {\r\n            if (message.content && message.content['@type'] === 'messagePhoto' && message.content.photo) {\r\n                let size = getSize(message.content.photo.sizes, PHOTO_SIZE);\r\n                if (!size) return;\r\n\r\n                let file = size.photo;\r\n                if (file && file.local && file.local.is_downloading_completed && !file.blob) {\r\n                    file.blob = blob;\r\n                    FileStore.updatePhotoBlob(message.chat_id, message.id, file.id);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    onSendInternal = async (content, clearDraft, callback) => {\r\n        const { chatId, replyToMessageId } = this.state;\r\n\r\n        if (!chatId) return;\r\n        if (!content) return;\r\n\r\n        try {\r\n            await ApplicationStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\r\n\r\n            let result = await TdLibController.send({\r\n                '@type': 'sendMessage',\r\n                chat_id: chatId,\r\n                reply_to_message_id: replyToMessageId,\r\n                input_message_content: content\r\n            });\r\n\r\n            this.setState({ replyToMessageId: 0 }, () => {\r\n                if (clearDraft) {\r\n                    const newChatDraftMessage = this.getNewChatDraftMessage(\r\n                        this.state.chatId,\r\n                        this.state.replyToMessageId\r\n                    );\r\n                    this.setChatDraftMessage(newChatDraftMessage);\r\n                }\r\n            });\r\n            //MessageStore.set(result);\r\n\r\n            TdLibController.send({\r\n                '@type': 'viewMessages',\r\n                chat_id: chatId,\r\n                message_ids: [result.id]\r\n            });\r\n\r\n            callback(result);\r\n        } catch (error) {\r\n            alert('sendMessage error ' + JSON.stringify(error));\r\n        }\r\n    };\r\n\r\n    handleEmojiSelect = emoji => {\r\n        if (!emoji) return;\r\n\r\n        this.newMessageRef.current.innerText += emoji.native;\r\n        this.handleInput();\r\n    };\r\n\r\n    handleInput = async event => {\r\n        const innerText = this.newMessageRef.current.innerText;\r\n        if (!innerText || innerText.length > 11) {\r\n            const { hint } = StickerStore;\r\n            if (hint) {\r\n                TdLibController.clientUpdate({\r\n                    '@type': 'clientUpdateLocalStickersHint',\r\n                    hint: null\r\n                });\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        const t0 = performance.now();\r\n        const regex = emojiRegex();\r\n        let match = regex.exec(innerText);\r\n        const t1 = performance.now();\r\n        console.log('Matched ' + (t1 - t0) + 'ms', match);\r\n        if (!match || innerText !== match[0]) {\r\n            const { hint } = StickerStore;\r\n            if (hint) {\r\n                TdLibController.clientUpdate({\r\n                    '@type': 'clientUpdateLocalStickersHint',\r\n                    hint: null\r\n                });\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        const timestamp = Date.now();\r\n        TdLibController.send({\r\n            '@type': 'getStickers',\r\n            emoji: match[0],\r\n            limit: 100\r\n        }).then(stickers => {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateLocalStickersHint',\r\n                hint: {\r\n                    timestamp,\r\n                    emoji: match[0],\r\n                    stickers\r\n                }\r\n            });\r\n        });\r\n\r\n        TdLibController.send({\r\n            '@type': 'searchStickers',\r\n            emoji: match[0],\r\n            limit: 100\r\n        }).then(stickers => {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateRemoteStickersHint',\r\n                hint: {\r\n                    timestamp,\r\n                    emoji: match[0],\r\n                    stickers\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { classes, t } = this.props;\r\n        const { chatId, replyToMessageId, openPasteDialog } = this.state;\r\n\r\n        const content = this.innerHTML !== null ? this.innerHTML : null;\r\n\r\n        return (\r\n            <>\r\n                <div className={classNames(classes.borderColor, 'inputbox')}>\r\n                    <InputBoxHeader chatId={chatId} messageId={replyToMessageId} />\r\n                    <div className='inputbox-wrapper'>\r\n                        <div className='inputbox-left-column'>\r\n                            <React.Suspense\r\n                                fallback={\r\n                                    <IconButton className={classes.iconButton} aria-label='Emoticon'>\r\n                                        <InsertEmoticonIcon />\r\n                                    </IconButton>\r\n                                }>\r\n                                <EmojiPickerButton onSelect={this.handleEmojiSelect} />\r\n                            </React.Suspense>\r\n                        </div>\r\n                        <div className='inputbox-middle-column'>\r\n                            <div\r\n                                id='inputbox-message'\r\n                                ref={this.newMessageRef}\r\n                                key={new Date()}\r\n                                placeholder={t('Message')}\r\n                                contentEditable\r\n                                suppressContentEditableWarning\r\n                                onKeyDown={this.handleKeyDown}\r\n                                onKeyUp={this.handleKeyUp}\r\n                                onPaste={this.handlePaste}\r\n                                onInput={this.handleInput}>\r\n                                {content}\r\n                            </div>\r\n                        </div>\r\n                        <div className='inputbox-right-column'>\r\n                            <input\r\n                                ref={this.attachDocumentRef}\r\n                                className='inputbox-attach-button'\r\n                                type='file'\r\n                                multiple='multiple'\r\n                                onChange={this.handleAttachDocumentComplete}\r\n                            />\r\n                            <input\r\n                                ref={this.attachPhotoRef}\r\n                                className='inputbox-attach-button'\r\n                                type='file'\r\n                                multiple='multiple'\r\n                                accept='image/*'\r\n                                onChange={this.handleAttachPhotoComplete}\r\n                            />\r\n                            <AttachButton\r\n                                chatId={chatId}\r\n                                onAttachPhoto={this.handleAttachPhoto}\r\n                                onAttachDocument={this.handleAttachDocument}\r\n                                onAttachPoll={this.handleAttachPoll}\r\n                            />\r\n\r\n                            {/*<IconButton>*/}\r\n                            {/*<KeyboardVoiceIcon />*/}\r\n                            {/*</IconButton>*/}\r\n                            <IconButton className={classes.iconButton} aria-label='Send' onClick={this.handleSubmit}>\r\n                                <SendIcon />\r\n                            </IconButton>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\r\n                <Dialog\r\n                    transitionDuration={0}\r\n                    open={openPasteDialog}\r\n                    onClose={this.handleClosePaste}\r\n                    aria-labelledby='delete-dialog-title'>\r\n                    <DialogTitle id='delete-dialog-title'>{t('AppName')}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            {this.files && this.files.length > 1\r\n                                ? 'Are you sure you want to send files?'\r\n                                : 'Are you sure you want to send file?'}\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClosePaste} color='primary'>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        <Button onClick={this.handlePasteContinue} color='primary'>\r\n                            {t('Ok')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst enhance = compose(\r\n    withStyles(styles, { withTheme: true }),\r\n    withTranslation()\r\n);\r\n\r\nexport default enhance(InputBoxControl);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport Button from '@material-ui/core/Button/Button';\r\nimport classNames from 'classnames';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport { borderStyle } from '../Theme';\r\nimport './FooterCommand.css';\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: '14px',\r\n        minWidth: '100px'\r\n    },\r\n    ...borderStyle(theme)\r\n});\r\n\r\nclass FooterCommand extends React.Component {\r\n    render() {\r\n        const { classes, command, onCommand } = this.props;\r\n\r\n        return (\r\n            <div className={classNames(classes.borderColor, 'footer-command-wrapper')}>\r\n                <div className='footer-command-actions'>\r\n                    <Button color='primary' className={classes.button} onClick={onCommand}>\r\n                        {command}\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(FooterCommand);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport FooterCommand from './FooterCommand';\r\nimport NotificationsControl from './NotificationsControl';\r\n\r\nclass NotificationsCommandControl extends NotificationsControl {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const { isMuted } = this.state;\r\n        const command = isMuted ? 'unmute' : 'mute';\r\n\r\n        return (\r\n            <FooterCommand\r\n                command={command}\r\n                onCommand={this.handleSetChatNotifications}/>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default NotificationsCommandControl;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport InputBoxControl from './InputBoxControl';\r\nimport FooterCommand from './FooterCommand';\r\nimport NotificationsCommandControl from './NotificationsCommandControl';\r\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Footer.css';\r\n\r\nclass Footer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if (nextProps.chatId !== this.props.chatId) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\r\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\r\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\r\n    }\r\n\r\n    onUpdateBasicGroup = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onUpdateSupergroup = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    handleJoin = () => {\r\n        const { chatId } = this.props;\r\n        if (!chatId) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'joinChat',\r\n            chat_id: chatId\r\n        });\r\n    };\r\n\r\n    handleDeleteAndExit = () => {\r\n        const { chatId } = this.props;\r\n        if (!chatId) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'deleteChatHistory',\r\n            chat_id: chatId,\r\n            remove_from_chat_list: true\r\n        });\r\n\r\n        // TdLibController\r\n        //     .send({\r\n        //         '@type': 'leaveChat',\r\n        //         chat_id: this.props.chatId\r\n        //     });\r\n    };\r\n\r\n    render() {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n        if (!chat.type) return null;\r\n\r\n        switch (chat.type['@type']) {\r\n            case 'chatTypeBasicGroup': {\r\n                const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\r\n                if (basicGroup && basicGroup.status) {\r\n                    switch (basicGroup.status['@type']) {\r\n                        case 'chatMemberStatusAdministrator': {\r\n                            return <InputBoxControl />;\r\n                        }\r\n                        case 'chatMemberStatusBanned': {\r\n                            return <FooterCommand command='delete and exit' onCommand={this.handleDeleteAndExit} />;\r\n                        }\r\n                        case 'chatMemberStatusCreator': {\r\n                            return <InputBoxControl />;\r\n                        }\r\n                        case 'chatMemberStatusLeft': {\r\n                            return null;\r\n                        }\r\n                        case 'chatMemberStatusMember': {\r\n                            return <InputBoxControl />;\r\n                        }\r\n                        case 'chatMemberStatusRestricted': {\r\n                            if (basicGroup.status.is_member) {\r\n                                if (!basicGroup.status.can_send_messages) {\r\n                                    return null;\r\n                                }\r\n\r\n                                return <InputBoxControl />;\r\n                            } else {\r\n                                return <FooterCommand command='join' onCommand={this.handleJoin} />;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'chatTypePrivate': {\r\n                return <InputBoxControl />;\r\n            }\r\n            case 'chatTypeSecret': {\r\n                return <InputBoxControl />;\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\r\n                if (supergroup && supergroup.status) {\r\n                    switch (supergroup.status['@type']) {\r\n                        case 'chatMemberStatusAdministrator': {\r\n                            return <InputBoxControl />;\r\n                        }\r\n                        case 'chatMemberStatusBanned': {\r\n                            return <FooterCommand command='delete and exit' onCommand={this.handleDeleteAndExit} />;\r\n                        }\r\n                        case 'chatMemberStatusCreator': {\r\n                            return <InputBoxControl />;\r\n                        }\r\n                        case 'chatMemberStatusLeft': {\r\n                            return <FooterCommand command='join' onCommand={this.handleJoin} />;\r\n                        }\r\n                        case 'chatMemberStatusMember': {\r\n                            if (supergroup.is_channel) {\r\n                                return <NotificationsCommandControl chatId={chatId} />;\r\n                            } else {\r\n                                return <InputBoxControl />;\r\n                            }\r\n                        }\r\n                        case 'chatMemberStatusRestricted': {\r\n                            if (supergroup.status.is_member) {\r\n                                if (!supergroup.status.can_send_messages) {\r\n                                    return null;\r\n                                }\r\n\r\n                                return <InputBoxControl />;\r\n                            } else {\r\n                                return <FooterCommand command='join' onCommand={this.handleJoin} />;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default Footer;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport Slider from '@material-ui/lab/Slider';\r\nimport { PLAYER_PROGRESS_TIMEOUT_MS } from '../../../Constants';\r\nimport PlayerStore from '../../../Stores/PlayerStore';\r\nimport './VoiceNoteSlider.css';\r\n\r\nconst styles = {\r\n    slider: {\r\n        maxWidth: 216\r\n    },\r\n    track: {\r\n        transition: 'width 0ms linear 0ms, height 0ms linear 0ms, transform 0ms linear 0ms'\r\n    },\r\n    thumbWrapper: {\r\n        transition: 'transform 0ms linear 0ms'\r\n    },\r\n    thumb: {\r\n        transition: 'transform 0ms linear 0ms, box-shadow 0ms linear 0ms'\r\n    }\r\n};\r\n\r\nclass VoiceNoteSlider extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { message, time } = PlayerStore;\r\n        const { chatId, messageId, duration } = this.props;\r\n\r\n        const active = message && message.chat_id === chatId && message.id === messageId;\r\n        const currentTime = active && time ? time.currentTime : 0;\r\n        const audioDuration = active && time && time.duration ? time.duration : duration;\r\n\r\n        this.state = {\r\n            active: active,\r\n            currentTime: currentTime,\r\n            duration: audioDuration,\r\n            value: this.getValue(currentTime, audioDuration, active)\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { active, value } = this.state;\r\n\r\n        if (nextState.value !== value) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.active !== active) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\r\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\r\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\r\n    }\r\n\r\n    reset = () => {\r\n        const { duration } = this.props;\r\n        const { value } = this.state;\r\n\r\n        if (value === 1) {\r\n            this.setState({\r\n                active: false,\r\n                currentTime: 0\r\n            });\r\n\r\n            setTimeout(() => {\r\n                const { currentTime } = this.state;\r\n                if (!currentTime) {\r\n                    this.setState({\r\n                        value: this.getValue(0, duration, false)\r\n                    });\r\n                }\r\n            }, PLAYER_PROGRESS_TIMEOUT_MS);\r\n        } else {\r\n            this.setState({\r\n                active: false,\r\n                currentTime: 0,\r\n                value: this.getValue(0, duration, false)\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaEnd = update => {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            this.reset();\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaTime = update => {\r\n        const { chatId, messageId, duration } = this.props;\r\n        const { active } = this.state;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            this.setState({\r\n                currentTime: update.currentTime,\r\n                duration: update.duration || duration,\r\n                value: this.getValue(update.currentTime, update.duration || duration, active)\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaActive = update => {\r\n        const { chatId, messageId, duration } = this.props;\r\n        const { active, currentTime } = this.state;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            this.setState({\r\n                active: true,\r\n                currentTime: active ? currentTime : 0,\r\n                value: this.getValue(active ? currentTime : 0, duration, true)\r\n            });\r\n        } else if (active) {\r\n            this.reset();\r\n        }\r\n    };\r\n\r\n    getValue = (currentTime, duration, active) => {\r\n        return active ? currentTime / duration : 0;\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { value } = this.state;\r\n\r\n        return (\r\n            <div className='voice-note-slider'>\r\n                <Slider\r\n                    className={classes.slider}\r\n                    classes={{\r\n                        track: classes.track,\r\n                        thumbWrapper: classes.thumbWrapper,\r\n                        thumb: classes.thumb\r\n                    }}\r\n                    min={0}\r\n                    max={1}\r\n                    value={value}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nVoiceNoteSlider.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    duration: PropTypes.number.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(VoiceNoteSlider);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport DocumentTile from '../../Tile/DocumentTile';\r\nimport AudioAction from './AudioAction';\r\nimport MediaStatus from './MediaStatus';\r\nimport VoiceNoteSlider from './VoiceNoteSlider';\r\nimport FileProgress from '../../Viewer/FileProgress';\r\nimport PlayerStore from '../../../Stores/PlayerStore';\r\nimport './VoiceNote.css';\r\n\r\nclass VoiceNote extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId, messageId } = props;\r\n\r\n        const { time, message, playing } = PlayerStore;\r\n        const active = message && message.chat_id === chatId && message.id === messageId;\r\n\r\n        this.state = {\r\n            active: active,\r\n            playing: active ? playing : false,\r\n            currentTime: active && time ? time.currentTime : 0,\r\n            duration: active && time ? time.duration : 0\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { active, playing, currentTime, duration } = this.state;\r\n\r\n        if (nextState.active !== active) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.playing !== playing) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.currentTime !== currentTime) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.duration !== duration) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.on('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\r\n        PlayerStore.on('clientUpdateMediaPause', this.onClientUpdateMediaPause);\r\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.removeListener('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\r\n        PlayerStore.removeListener('clientUpdateMediaPause', this.onClientUpdateMediaPause);\r\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\r\n    }\r\n\r\n    onClientUpdateMediaEnd = update => {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            this.setState({\r\n                active: false,\r\n                playing: false,\r\n                currentTime: 0\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaPlay = update => {\r\n        const { chatId, messageId, playing } = this.props;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            this.setState({ playing: true });\r\n        } else {\r\n            this.setState({ playing: false });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaPause = update => {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            this.setState({ playing: false });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaActive = update => {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            if (!this.state.active) {\r\n                this.setState({\r\n                    active: true,\r\n                    currentTime: 0,\r\n                    playing: true\r\n                });\r\n            }\r\n        } else if (this.state.active) {\r\n            this.setState({\r\n                active: false,\r\n                currentTime: 0,\r\n                playing: false\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, voiceNote, openMedia, classes } = this.props;\r\n        const { playing } = this.state;\r\n        if (!voiceNote) return null;\r\n\r\n        const { duration, voice: file } = voiceNote;\r\n\r\n        //const title = getAudioTitle(audio);\r\n\r\n        return (\r\n            <div className='document'>\r\n                <DocumentTile\r\n                    thumbnail={null}\r\n                    file={file}\r\n                    openMedia={openMedia}\r\n                    icon={<ArrowDownwardIcon />}\r\n                    completeIcon={playing ? <PauseIcon /> : <PlayArrowIcon />}\r\n                />\r\n                <div className='voice-note-content'>\r\n                    <VoiceNoteSlider chatId={chatId} messageId={messageId} duration={duration} file={file} />\r\n                    <div className='voice-note-meta'>\r\n                        <AudioAction chatId={chatId} messageId={messageId} duration={duration} file={file} />\r\n                        <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nVoiceNote.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    voiceNote: PropTypes.object.isRequired,\r\n    openMedia: PropTypes.func.isRequired\r\n};\r\n\r\nexport default VoiceNote;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { SnackbarProvider } from 'notistack';\r\nimport { getDisplayName } from './Utils/HOC';\r\nimport { MAX_SNACK } from './Constants';\r\n\r\nfunction withSnackbarNotifications(WrappedComponent) {\r\n    class NotificationsWrapper extends React.Component {\r\n        render() {\r\n            return (\r\n                <SnackbarProvider maxSnack={MAX_SNACK}>\r\n                    <WrappedComponent {...this.props} />\r\n                </SnackbarProvider>\r\n            );\r\n        }\r\n    }\r\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\r\n\r\n    return NotificationsWrapper;\r\n}\r\n\r\nexport default withSnackbarNotifications;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport { isUserOnline } from '../../Utils/User';\r\nimport { getChatUserId } from '../../Utils/Chat';\r\nimport UserStore from './../../Stores/UserStore';\r\nimport './ChatStatus.css';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\r\n        borderRadius: '50%',\r\n        overflow: 'hidden'\r\n    },\r\n    icon: {\r\n        background: 'transparent',\r\n        width: '100%',\r\n        height: '100%',\r\n        boxSizing: 'border-box'\r\n    },\r\n    iconIndicator: {\r\n        width: '100%',\r\n        height: '100%',\r\n        borderRadius: '50%',\r\n        background: '#80d066'\r\n    }\r\n});\r\n\r\nclass ChatStatus extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const userId = getChatUserId(props.chatId);\r\n        const user = UserStore.get(userId);\r\n\r\n        this.state = {\r\n            userId: userId,\r\n            online: isUserOnline(user)\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\r\n    }\r\n\r\n    onUpdateUserStatus = update => {\r\n        const { userId } = this.state;\r\n        const { user_id } = update;\r\n        if (user_id !== userId) return;\r\n\r\n        const user = UserStore.get(userId);\r\n        if (!user) return;\r\n\r\n        this.setState({\r\n            online: isUserOnline(user)\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { classes, size, borderSize, className } = this.props;\r\n        const { online } = this.state;\r\n        if (!online) return null;\r\n\r\n        return (\r\n            <div className={classNames(className, classes.root)} style={{ width: size, height: size }}>\r\n                <div className={classes.icon} style={{ padding: borderSize }}>\r\n                    <div className={classes.iconIndicator} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nChatStatus.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    size: PropTypes.number,\r\n    borderSize: PropTypes.number\r\n};\r\n\r\nChatStatus.defaultProps = {\r\n    size: 12,\r\n    borderSize: 2\r\n};\r\n\r\nexport default withStyles(styles)(ChatStatus);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\r\nimport ChatStatus from './ChatStatus';\r\nimport { getChatLetters, getChatUserId, isMeChat, isPrivateChat } from '../../Utils/Chat';\r\nimport { loadChatContent } from '../../Utils/File';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './ChatTileControl.css';\r\n\r\nconst styles = {\r\n    statusRoot: {\r\n        position: 'absolute',\r\n        right: 1,\r\n        bottom: 1,\r\n        zIndex: 1\r\n    },\r\n    statusIcon: {}\r\n};\r\n\r\nclass ChatTileControl extends Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if (nextProps.chatId !== this.props.chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.theme !== this.props.theme) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\r\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\r\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateChatBlob);\r\n        ChatStore.removeListener('updateChatPhoto', this.onUpdateChatPhoto);\r\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\r\n    }\r\n\r\n    onFastUpdatingComplete = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onClientUpdateChatBlob = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId === update.chatId) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onUpdateChatPhoto = update => {\r\n        const { chatId } = this.props;\r\n        const { chat_id } = update;\r\n\r\n        if (chat_id !== chatId) return;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!update.photo) {\r\n            this.forceUpdate();\r\n        } else {\r\n            const store = FileStore.getStore();\r\n            loadChatContent(store, chat);\r\n        }\r\n    };\r\n\r\n    onUpdateChatTitle = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (!update.chat_id) return;\r\n        if (update.chat_id !== chatId) return;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!update.photo) {\r\n            this.forceUpdate();\r\n        } else {\r\n            const store = FileStore.getStore();\r\n            loadChatContent(store, chat);\r\n        }\r\n    };\r\n\r\n    handleSelect = event => {\r\n        const { chatId, onSelect } = this.props;\r\n        if (!onSelect) return;\r\n\r\n        event.stopPropagation();\r\n        onSelect(chatId);\r\n    };\r\n\r\n    render() {\r\n        const { classes, chatId, showOnline, showSavedMessages, onSelect } = this.props;\r\n\r\n        if (isMeChat(chatId) && showSavedMessages) {\r\n            const className = classNames('tile-photo', 'tile_color_4', { pointer: onSelect });\r\n            return (\r\n                <div className={className} onClick={this.handleSelect}>\r\n                    <div className='tile-saved-messages'>\r\n                        <BookmarkBorderIcon />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const { photo } = chat;\r\n\r\n        const letters = getChatLetters(chat);\r\n        const blob = photo && photo.small ? FileStore.getBlob(photo.small.id) : null;\r\n        const src = FileStore.getBlobUrl(blob);\r\n\r\n        const tileColor = `tile_color_${(Math.abs(chatId) % 8) + 1}`;\r\n        const className = classNames('tile-photo', { [tileColor]: !blob }, { pointer: onSelect });\r\n\r\n        return (\r\n            <div className='chat-tile' onClick={this.handleSelect}>\r\n                {src ? (\r\n                    <img className={className} src={src} draggable={false} alt='' />\r\n                ) : (\r\n                    <div className={className}>\r\n                        <span className='tile-text'>{letters}</span>\r\n                    </div>\r\n                )}\r\n                {showOnline && isPrivateChat(chatId) && (\r\n                    <ChatStatus classes={{ root: classes.statusRoot, icon: classes.statusIcon }} chatId={chatId} />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nChatTileControl.propTypes = {\r\n    classes: PropTypes.object,\r\n    chatId: PropTypes.number.isRequired,\r\n    onSelect: PropTypes.func,\r\n    showSavedMessages: PropTypes.bool,\r\n    showOnline: PropTypes.bool\r\n};\r\n\r\nChatTileControl.defaultProps = {\r\n    showSavedMessages: true,\r\n    showOnline: false\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(ChatTileControl);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport ChatTileControl from './ChatTileControl';\r\nimport { getChatShortTitle } from '../../Utils/Chat';\r\nimport './ForwardTargetChat.css';\r\n\r\nconst styles = theme => ({\r\n    border: {\r\n        borderColor: theme.palette.primary.main\r\n    },\r\n    markSelected: {\r\n        boxShadow: 'inset 0 0 0 10px ' + theme.palette.primary.main,\r\n        border: '2px solid ' + theme.palette.background.paper\r\n    },\r\n    markUnselected: {\r\n        boxShadow: 'inset 0 0 0 0 ' + theme.palette.primary.main,\r\n        border: '2px solid transparent'\r\n    }\r\n});\r\n\r\nclass ForwardTargetChat extends React.Component {\r\n    render() {\r\n        const { classes, chatId, selected, onSelect } = this.props;\r\n\r\n        const shortTitle = getChatShortTitle(chatId, true);\r\n\r\n        return (\r\n            <div\r\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\r\n                onClick={onSelect}>\r\n                <div className='forward-target-chat-tile'>\r\n                    <div className='forward-target-chat-tile-wrapper'>\r\n                        <ChatTileControl chatId={chatId} showSavedMessages />\r\n                    </div>\r\n                    {selected && <div className={classNames('forward-target-chat-selection', classes.border)} />}\r\n                    <div\r\n                        className={classNames(\r\n                            'forward-target-chat-mark',\r\n                            selected ? classes.markSelected : classes.markUnselected\r\n                        )}\r\n                    />\r\n                    <div className='forward-target-chat-mark-icon' />\r\n                </div>\r\n                <div className='forward-target-chat-title'>{shortTitle}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nForwardTargetChat.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    selected: PropTypes.bool,\r\n    onSelect: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(ForwardTargetChat);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nlet cyrillicInput = null;\r\n\r\nfunction getCyrillicInputMap() {\r\n    return new Map([\r\n        ['q', 'й'],\r\n        ['w', 'ц'],\r\n        ['e', 'у'],\r\n        ['r', 'к'],\r\n        ['t', 'е'],\r\n        ['y', 'н'],\r\n        ['u', 'г'],\r\n        ['i', 'ш'],\r\n        ['o', 'щ'],\r\n        ['p', 'з'],\r\n        ['[', 'х'],\r\n        [']', 'ъ'],\r\n        ['a', 'ф'],\r\n        ['s', 'ы'],\r\n        ['d', 'в'],\r\n        ['f', 'а'],\r\n        ['g', 'п'],\r\n        ['h', 'р'],\r\n        ['j', 'о'],\r\n        ['k', 'л'],\r\n        ['l', 'д'],\r\n        [';', 'ж'],\r\n        [\"'\", 'э'],\r\n        ['\\\\', 'ё'],\r\n        ['z', 'я'],\r\n        ['x', 'ч'],\r\n        ['c', 'с'],\r\n        ['v', 'м'],\r\n        ['b', 'и'],\r\n        ['n', 'т'],\r\n        ['m', 'ь'],\r\n        [',', 'б'],\r\n        ['.', 'ю']\r\n    ]);\r\n}\r\n\r\nfunction getCyrillicInput(input) {\r\n    if (!input) return null;\r\n    if (!input.length) return null;\r\n\r\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\r\n\r\n    let output = '';\r\n    for (let i = 0; i < input.length; i++) {\r\n        if (cyrillicInput.has(input[i])) {\r\n            output += cyrillicInput.get(input[i]);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    return output === '' ? null : output;\r\n}\r\n\r\nlet latinInput = null;\r\n\r\nfunction getLatinInputMap() {\r\n    return new Map([\r\n        ['й', 'q'],\r\n        ['ц', 'w'],\r\n        ['у', 'e'],\r\n        ['к', 'r'],\r\n        ['е', 't'],\r\n        ['н', 'y'],\r\n        ['г', 'u'],\r\n        ['ш', 'i'],\r\n        ['щ', 'o'],\r\n        ['з', 'p'],\r\n        ['х', '['],\r\n        ['ъ', ']'],\r\n        ['ф', 'a'],\r\n        ['ы', 's'],\r\n        ['в', 'd'],\r\n        ['а', 'f'],\r\n        ['п', 'g'],\r\n        ['р', 'h'],\r\n        ['о', 'j'],\r\n        ['л', 'k'],\r\n        ['д', 'l'],\r\n        ['ж', ';'],\r\n        ['э', \"'\"],\r\n        ['ё', '\\\\'],\r\n        ['я', 'z'],\r\n        ['ч', 'x'],\r\n        ['с', 'c'],\r\n        ['м', 'v'],\r\n        ['и', 'b'],\r\n        ['т', 'n'],\r\n        ['ь', 'm'],\r\n        ['б', ','],\r\n        ['ю', '.']\r\n    ]);\r\n}\r\n\r\nfunction getLatinInput(input) {\r\n    if (!input) return null;\r\n    if (!input.length) return null;\r\n\r\n    latinInput = latinInput || getLatinInputMap();\r\n\r\n    let output = '';\r\n    for (let i = 0; i < input.length; i++) {\r\n        if (latinInput.has(input[i])) {\r\n            output += latinInput.get(input[i]);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    return output === '' ? null : output;\r\n}\r\n\r\nexport { getCyrillicInput, getLatinInput };\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport copy from 'copy-to-clipboard';\r\nimport classNames from 'classnames';\r\nimport { compose } from 'recompose';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { withSnackbar } from 'notistack';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\r\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\r\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\r\nimport { loadChatsContent } from '../../Utils/File';\r\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\r\nimport { borderStyle } from '../Theme';\r\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './ForwardDialog.css';\r\n\r\nconst styles = theme => ({\r\n    close: {\r\n        padding: theme.spacing.unit / 2\r\n    },\r\n    dialog: {\r\n        color: theme.palette.text.primary\r\n    },\r\n    dialogContent: {\r\n        padding: 0,\r\n        display: 'flex',\r\n        position: 'relative'\r\n    },\r\n    searchList: {\r\n        background: theme.palette.background.paper\r\n    },\r\n    ...borderStyle(theme)\r\n});\r\n\r\nclass ForwardDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            chatIds: [],\r\n            savedMessages: null\r\n        };\r\n\r\n        this.searchRef = React.createRef();\r\n        this.messageRef = React.createRef();\r\n\r\n        this.targetChats = new Map();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n\r\n        this.setSearchFocus();\r\n    }\r\n\r\n    loadContent = async () => {\r\n        this.getPublicMessageLink();\r\n\r\n        const promises = [];\r\n        const getChatsPromise = TdLibController.send({\r\n            '@type': 'getChats',\r\n            offset_order: '9223372036854775807',\r\n            offset_chat_id: 0,\r\n            limit: 100\r\n        });\r\n        promises.push(getChatsPromise);\r\n\r\n        const savedMessagesPromise = TdLibController.send({\r\n            '@type': 'createPrivateChat',\r\n            user_id: UserStore.getMyId(),\r\n            force: true\r\n        });\r\n        promises.push(savedMessagesPromise);\r\n\r\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\r\n\r\n        this.setState({\r\n            chatIds: chats.chat_ids,\r\n            savedMessages: savedMessages\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadChatsContent(store, chats.chat_ids);\r\n    };\r\n\r\n    getPublicMessageLink = async () => {\r\n        const { chatId, messageIds } = this.props;\r\n        if (!chatId) return;\r\n        if (!messageIds) return;\r\n        if (messageIds.length > 1) return;\r\n        if (!isSupergroup(chatId)) return;\r\n        if (!getChatUsername(chatId)) return;\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'getPublicMessageLink',\r\n            chat_id: chatId,\r\n            message_id: messageIds[0],\r\n            for_album: false\r\n        });\r\n\r\n        this.setState({\r\n            publicMessageLink: result\r\n        });\r\n    };\r\n\r\n    handleClose = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateForward',\r\n            info: null\r\n        });\r\n    };\r\n\r\n    handleCopyLink = () => {\r\n        const { t } = this.props;\r\n        const { publicMessageLink } = this.state;\r\n\r\n        if (!publicMessageLink) return;\r\n        if (!publicMessageLink.link) return;\r\n\r\n        const key = `copy_link_${publicMessageLink.link}`;\r\n        const message = t('LinkCopied');\r\n        const action = null;\r\n\r\n        copy(publicMessageLink.link);\r\n\r\n        this.handleScheduledAction(key, message, action);\r\n    };\r\n\r\n    handleScheduledAction = (key, message, action) => {\r\n        if (!key) return;\r\n\r\n        const { enqueueSnackbar, classes } = this.props;\r\n        if (!enqueueSnackbar) return;\r\n\r\n        const TRANSITION_DELAY = 150;\r\n        if (\r\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\r\n        ) {\r\n            enqueueSnackbar(message, {\r\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n                action: [\r\n                    <IconButton\r\n                        key='close'\r\n                        aria-label='Close'\r\n                        color='inherit'\r\n                        className={classes.close}\r\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                ]\r\n            });\r\n        }\r\n    };\r\n\r\n    getForwardPhotoSize = (chatId, messageIds) => {\r\n        if (messageIds.length !== 1) return null;\r\n\r\n        const message = MessageStore.get(chatId, messageIds[0]);\r\n        if (!message) return null;\r\n\r\n        const { can_be_forwarded, content } = message;\r\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\r\n            const { photo } = content;\r\n            if (!photo) return null;\r\n\r\n            const { sizes } = photo;\r\n            if (sizes && sizes.length) {\r\n                return sizes[sizes.length - 1];\r\n            }\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    handleSend = () => {\r\n        this.handleClose();\r\n\r\n        const { chatId, messageIds, photoSize, link } = this.props;\r\n        if (!chatId && !messageIds && !messageIds && !photoSize && !link) return;\r\n\r\n        const text = this.getInnerText(this.messageRef.current);\r\n\r\n        this.targetChats.forEach(targetChatId => {\r\n            if (link) {\r\n                if (text) {\r\n                    TdLibController.send({\r\n                        '@type': 'sendMessage',\r\n                        chat_id: targetChatId,\r\n                        reply_to_message_id: 0,\r\n                        disable_notifications: false,\r\n                        from_background: false,\r\n                        reply_markup: null,\r\n                        input_message_content: {\r\n                            '@type': 'inputMessageText',\r\n                            text: {\r\n                                '@type': 'formattedText',\r\n                                text: text,\r\n                                entities: null\r\n                            },\r\n                            disable_web_page_preview: true,\r\n                            clear_draft: false\r\n                        }\r\n                    });\r\n                }\r\n\r\n                TdLibController.send({\r\n                    '@type': 'sendMessage',\r\n                    chat_id: targetChatId,\r\n                    reply_to_message_id: 0,\r\n                    disable_notifications: false,\r\n                    from_background: false,\r\n                    reply_markup: null,\r\n                    input_message_content: {\r\n                        '@type': 'inputMessageText',\r\n                        text: {\r\n                            '@type': 'formattedText',\r\n                            text: link,\r\n                            entities: null\r\n                        },\r\n                        disable_web_page_preview: true,\r\n                        clear_draft: false\r\n                    }\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            const size = photoSize || this.getForwardPhotoSize(chatId, messageIds);\r\n            if (size) {\r\n                const { width, height, photo } = size;\r\n\r\n                TdLibController.send({\r\n                    '@type': 'sendMessage',\r\n                    chat_id: targetChatId,\r\n                    reply_to_message_id: 0,\r\n                    disable_notifications: false,\r\n                    from_background: false,\r\n                    reply_markup: null,\r\n                    input_message_content: {\r\n                        '@type': 'inputMessagePhoto',\r\n                        photo: {\r\n                            '@type': 'inputFileId',\r\n                            id: photo.id\r\n                        },\r\n                        thumbnail: null,\r\n                        added_sticker_file_ids: [],\r\n                        width: width,\r\n                        height: height,\r\n                        caption: {\r\n                            '@type': 'formattedText',\r\n                            text: text,\r\n                            entities: null\r\n                        },\r\n                        ttl: 0\r\n                    }\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            if (text) {\r\n                TdLibController.send({\r\n                    '@type': 'sendMessage',\r\n                    chat_id: targetChatId,\r\n                    reply_to_message_id: 0,\r\n                    disable_notifications: false,\r\n                    from_background: false,\r\n                    reply_markup: null,\r\n                    input_message_content: {\r\n                        '@type': 'inputMessageText',\r\n                        text: {\r\n                            '@type': 'formattedText',\r\n                            text: text,\r\n                            entities: null\r\n                        },\r\n                        disable_web_page_preview: true,\r\n                        clear_draft: false\r\n                    }\r\n                });\r\n            }\r\n\r\n            TdLibController.send({\r\n                '@type': 'forwardMessages',\r\n                chat_id: targetChatId,\r\n                from_chat_id: chatId,\r\n                message_ids: messageIds,\r\n                disable_notifications: false,\r\n                from_background: false,\r\n                as_album: false\r\n            });\r\n        });\r\n    };\r\n\r\n    handleChangeSelection = chatId => {\r\n        if (this.targetChats.has(chatId)) {\r\n            this.targetChats.delete(chatId);\r\n        } else {\r\n            this.targetChats.set(chatId, chatId);\r\n        }\r\n\r\n        console.log(this.targetChats);\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    getInnerText = div => {\r\n        const innerText = div.innerText;\r\n        const innerHTML = div.innerHTML;\r\n\r\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\r\n            div.innerHTML = '';\r\n        }\r\n\r\n        return innerText;\r\n    };\r\n\r\n    handleSearchKeyDown = event => {\r\n        if (event.keyCode === 13) {\r\n            event.preventDefault();\r\n        }\r\n    };\r\n\r\n    handleSearchKeyUp = () => {\r\n        const { chatIds, savedMessages } = this.state;\r\n\r\n        const innerHTML = this.searchRef.current.innerHTML;\r\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\r\n            this.searchRef.current.innerHTML = '';\r\n        }\r\n\r\n        const innerText = this.getInnerText(this.searchRef.current).trim();\r\n        if (!innerText) {\r\n            this.setState({ searchText: null, searchResults: [] });\r\n            return;\r\n        }\r\n\r\n        const latinText = getLatinInput(innerText);\r\n        const cyrillicText = getCyrillicInput(innerText);\r\n\r\n        const chatsSource = savedMessages\r\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id)).filter(x => canSendMessages(x))\r\n            : chatIds;\r\n\r\n        const searchResults = chatsSource.filter(\r\n            x =>\r\n                this.hasSearchText(x, innerText) ||\r\n                (latinText && this.hasSearchText(x, latinText)) ||\r\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\r\n        );\r\n\r\n        this.setState({ searchText: innerText, searchResults: searchResults });\r\n    };\r\n\r\n    handleSearchPaste = event => {\r\n        const plainText = event.clipboardData.getData('text/plain');\r\n        if (plainText) {\r\n            event.preventDefault();\r\n            document.execCommand('insertHTML', false, plainText);\r\n        }\r\n    };\r\n\r\n    handleMessageKeyUp = () => {\r\n        const innerHTML = this.messageRef.current.innerHTML;\r\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\r\n            this.messageRef.current.innerHTML = '';\r\n        }\r\n    };\r\n\r\n    handleMessagePaste = event => {\r\n        const plainText = event.clipboardData.getData('text/plain');\r\n        if (plainText) {\r\n            event.preventDefault();\r\n            document.execCommand('insertHTML', false, plainText);\r\n        }\r\n    };\r\n\r\n    hasSearchText = (chatId, searchText) => {\r\n        const { t } = this.props;\r\n        const { savedMessages } = this.state;\r\n\r\n        if (savedMessages && chatId === savedMessages.id) {\r\n            const title = getChatTitle(chatId, true, t) || '';\r\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        const title1 = getChatTitle(chatId, false, t) || '';\r\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\r\n            return true;\r\n        }\r\n\r\n        const username = getChatUsername(chatId) || '';\r\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    setSearchFocus = () => {\r\n        setTimeout(() => {\r\n            if (this.searchRef.current) {\r\n                const element = this.searchRef.current;\r\n\r\n                element.focus();\r\n            }\r\n        }, 100);\r\n    };\r\n\r\n    render() {\r\n        const { classes, t } = this.props;\r\n        const { chatIds, searchText, searchResults, savedMessages, publicMessageLink } = this.state;\r\n\r\n        const chatsSource = savedMessages\r\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id)).filter(x => canSendMessages(x))\r\n            : chatIds;\r\n\r\n        const chats = chatsSource.map(x => (\r\n            <ForwardTargetChat\r\n                key={x}\r\n                chatId={x}\r\n                selected={this.targetChats.has(x)}\r\n                onSelect={() => this.handleChangeSelection(x)}\r\n            />\r\n        ));\r\n\r\n        const foundChats = (searchResults || []).map(x => (\r\n            <ForwardTargetChat\r\n                key={x}\r\n                chatId={x}\r\n                selected={this.targetChats.has(x)}\r\n                onSelect={() => this.handleChangeSelection(x)}\r\n            />\r\n        ));\r\n\r\n        return (\r\n            <Dialog\r\n                open\r\n                onClose={this.handleClose}\r\n                aria-labelledby='forward-dialog-title'\r\n                aria-describedby='forward-dialog-description'\r\n                className={classes.dialog}>\r\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\r\n                <div\r\n                    ref={this.searchRef}\r\n                    id='forward-dialog-search'\r\n                    contentEditable\r\n                    suppressContentEditableWarning\r\n                    placeholder={t('Search')}\r\n                    onKeyDown={this.handleSearchKeyDown}\r\n                    onKeyUp={this.handleSearchKeyUp}\r\n                    onPaste={this.handleSearchPaste}\r\n                />\r\n                <div className={classNames(classes.borderColor, 'forward-dialog-content')}>\r\n                    <div className='forward-dialog-list'>{chats}</div>\r\n                    {searchText && (\r\n                        <div className={classNames(classes.searchList, 'forward-dialog-search-list')}>{foundChats}</div>\r\n                    )}\r\n                </div>\r\n                {this.targetChats.size > 0 && (\r\n                    <div\r\n                        ref={this.messageRef}\r\n                        id='forward-dialog-message'\r\n                        contentEditable\r\n                        suppressContentEditableWarning\r\n                        placeholder={t('ShareComment')}\r\n                        onKeyUp={this.handleMessageKeyUp}\r\n                        onPaste={this.handleMessagePaste}\r\n                    />\r\n                )}\r\n                <DialogActions>\r\n                    <Button onClick={this.handleClose} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    {this.targetChats.size > 0 && (\r\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\r\n                            {t('Send')}\r\n                        </Button>\r\n                    )}\r\n                    {!this.targetChats.size && publicMessageLink && (\r\n                        <Button onClick={this.handleCopyLink} color='primary'>\r\n                            {t('CopyLink')}\r\n                        </Button>\r\n                    )}\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nForwardDialog.propTypes = {\r\n    chatId: PropTypes.number,\r\n    messageIds: PropTypes.array,\r\n    photoSize: PropTypes.object\r\n};\r\n\r\nconst enhance = compose(\r\n    withStyles(styles, { withTheme: true }),\r\n    withTranslation(),\r\n    withSnackbar\r\n);\r\n\r\nexport default enhance(ForwardDialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/es/Typography/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport './NotificationTimer.css';\r\n\r\nclass NotificationTimer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            seconds: this.props.timeout / 1000,\r\n            value: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.startTime = new Date();\r\n        this.expire = this.startTime;\r\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\r\n        this.timerId = setInterval(this.handleTimer, 100);\r\n    }\r\n\r\n    handleTimer = () => {\r\n        const now = new Date();\r\n        const seconds = this.expire - now;\r\n        const value = 100 - (seconds / this.props.timeout) * 100;\r\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\r\n        this.setState({\r\n            seconds: seconds > 0 ? seconds : 0,\r\n            value: value > 100 ? 100 : value\r\n        });\r\n\r\n        if (now >= this.expire) {\r\n            if (this.timerId) {\r\n                clearInterval(this.timerId);\r\n                this.timerId = null;\r\n            }\r\n        }\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        if (this.timerId) {\r\n            clearInterval(this.timerId);\r\n            this.timerId = null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { value, seconds } = this.state;\r\n\r\n        return (\r\n            <div className='notification-timer'>\r\n                <div className='notification-timer-text'>\r\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\r\n                </div>\r\n                <div className='notification-timer-progress'>\r\n                    <CircularProgress size={32} value={100 - value} variant='static' />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nNotificationTimer.propTypes = {\r\n    timeout: PropTypes.number.isRequired\r\n};\r\n\r\nexport default NotificationTimer;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport { withSnackbar } from 'notistack';\r\nimport { compose } from 'recompose';\r\nimport ChatTileControl from '../Tile/ChatTileControl';\r\nimport NotificationTimer from '../Additional/NotificationTimer';\r\nimport { canClearHistory, canDeleteChat, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\r\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './MainMenuButton.css';\r\n\r\nconst styles = theme => ({\r\n    menuIconButton: {\r\n        margin: '8px 12px 8px 0'\r\n    }\r\n});\r\n\r\nconst menuAnchorOrigin = {\r\n    vertical: 'bottom',\r\n    horizontal: 'right'\r\n};\r\n\r\nconst menuTransformOrigin = {\r\n    vertical: 'top',\r\n    horizontal: 'right'\r\n};\r\n\r\nclass LeaveChatDialog extends React.Component {\r\n    getDeleteDialogText = chatId => {\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n        if (!chat.type) return null;\r\n\r\n        switch (chat.type['@type']) {\r\n            case 'chatTypeBasicGroup': {\r\n                return `Are you sure you want to leave group ${chat.title}?`;\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\r\n                if (supergroup) {\r\n                    return supergroup.is_channel\r\n                        ? `Are you sure you want to leave channel ${chat.title}?`\r\n                        : `Are you sure you want to leave group ${chat.title}?`;\r\n                }\r\n\r\n                return null;\r\n            }\r\n            case 'chatTypePrivate':\r\n            case 'chatTypeSecret': {\r\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId)}?`;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    render() {\r\n        const { onClose, chatId, ...other } = this.props;\r\n\r\n        return (\r\n            <Dialog\r\n                transitionDuration={0}\r\n                onClose={() => onClose(false)}\r\n                aria-labelledby='delete-dialog-title'\r\n                {...other}>\r\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId)}</DialogTitle>\r\n                <DialogContent>\r\n                    <div className='delete-dialog-content'>\r\n                        <ChatTileControl chatId={chatId} />\r\n                        <DialogContentText id='delete-dialog-description'>\r\n                            {this.getDeleteDialogText(chatId)}\r\n                        </DialogContentText>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => onClose(false)} color='primary'>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\r\n                        Ok\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nclass ClearHistoryDialog extends React.Component {\r\n    render() {\r\n        const { onClose, chatId, ...other } = this.props;\r\n\r\n        return (\r\n            <Dialog\r\n                transitionDuration={0}\r\n                onClose={() => onClose(false)}\r\n                aria-labelledby='delete-dialog-title'\r\n                {...other}>\r\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId)}</DialogTitle>\r\n                <DialogContent>\r\n                    <div className='delete-dialog-content'>\r\n                        <ChatTileControl chatId={chatId} />\r\n                        <DialogContentText id='delete-dialog-description'>\r\n                            Are you sure you want clear history?\r\n                        </DialogContentText>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => onClose(false)} color='primary'>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\r\n                        Ok\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nclass MainMenuButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            anchorEl: null,\r\n            openDelete: false,\r\n            openClearHistory: false\r\n        };\r\n    }\r\n\r\n    handleButtonClick = event => {\r\n        this.setState({ anchorEl: event.currentTarget });\r\n    };\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleChatInfo = () => {\r\n        this.handleMenuClose();\r\n        setTimeout(() => this.props.openChatDetails(), 150);\r\n    };\r\n\r\n    handleClearHistory = () => {\r\n        this.handleMenuClose();\r\n\r\n        this.setState({ openClearHistory: true });\r\n    };\r\n\r\n    handleClearHistoryContinue = result => {\r\n        this.setState({ openClearHistory: false });\r\n\r\n        if (!result) return;\r\n\r\n        const chatId = ApplicationStore.getChatId();\r\n        const message = 'Messages deleted';\r\n        const request = {\r\n            '@type': 'deleteChatHistory',\r\n            chat_id: chatId,\r\n            remove_from_chat_list: false\r\n        };\r\n\r\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, request);\r\n    };\r\n\r\n    handleLeave = () => {\r\n        this.handleMenuClose();\r\n\r\n        this.setState({ openDelete: true });\r\n    };\r\n\r\n    handleLeaveContinue = result => {\r\n        this.setState({ openDelete: false });\r\n\r\n        if (!result) return;\r\n\r\n        const chatId = ApplicationStore.getChatId();\r\n        const message = this.getLeaveChatNotification(chatId);\r\n        const request = isPrivateChat(chatId)\r\n            ? { '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true }\r\n            : { '@type': 'leaveChat', chat_id: chatId };\r\n\r\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, request);\r\n    };\r\n\r\n    handleScheduledAction = (chatId, clientUpdateType, message, request) => {\r\n        if (!clientUpdateType) return;\r\n\r\n        const key = `${clientUpdateType} chatId=${chatId}`;\r\n        const action = async () => {\r\n            try {\r\n                await TdLibController.send(request);\r\n            } finally {\r\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\r\n            }\r\n        };\r\n        const cancel = () => {\r\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\r\n        };\r\n\r\n        const { enqueueSnackbar, classes } = this.props;\r\n        if (!enqueueSnackbar) return;\r\n\r\n        const TRANSITION_DELAY = 150;\r\n        if (ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS, action, cancel)) {\r\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: true });\r\n            enqueueSnackbar(message, {\r\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS - 2 * TRANSITION_DELAY,\r\n                action: [\r\n                    <IconButton key='progress' color='inherit' className='progress-button'>\r\n                        <NotificationTimer timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS} />\r\n                    </IconButton>,\r\n                    <Button\r\n                        key='undo'\r\n                        color='primary'\r\n                        size='small'\r\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\r\n                        UNDO\r\n                    </Button>\r\n                ]\r\n            });\r\n        }\r\n    };\r\n\r\n    getLeaveChatTitle = chatId => {\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n        if (!chat.type) return null;\r\n\r\n        switch (chat.type['@type']) {\r\n            case 'chatTypeBasicGroup': {\r\n                return 'Delete and exit';\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\r\n                if (supergroup) {\r\n                    return supergroup.is_channel ? 'Leave channel' : 'Leave group';\r\n                }\r\n\r\n                return null;\r\n            }\r\n            case 'chatTypePrivate':\r\n            case 'chatTypeSecret': {\r\n                return 'Delete conversation';\r\n            }\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    getLeaveChatNotification = chatId => {\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return 'Chat deleted';\r\n        if (!chat.type) return 'Chat deleted';\r\n\r\n        switch (chat.type['@type']) {\r\n            case 'chatTypeBasicGroup': {\r\n                return 'Chat deleted';\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\r\n                if (supergroup) {\r\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\r\n                }\r\n\r\n                return 'Chat deleted';\r\n            }\r\n            case 'chatTypePrivate':\r\n            case 'chatTypeSecret': {\r\n                return 'Chat deleted';\r\n            }\r\n        }\r\n\r\n        return 'Chat deleted';\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { anchorEl, openDelete, openClearHistory } = this.state;\r\n\r\n        const chatId = ApplicationStore.getChatId();\r\n        const clearHistory = canClearHistory(chatId);\r\n        const deleteChat = canDeleteChat(chatId);\r\n        const leaveChatTitle = this.getLeaveChatTitle(chatId);\r\n\r\n        return (\r\n            <>\r\n                <IconButton\r\n                    aria-owns={anchorEl ? 'simple-menu' : null}\r\n                    aria-haspopup='true'\r\n                    className={classes.menuIconButton}\r\n                    aria-label='Menu'\r\n                    onClick={this.handleButtonClick}>\r\n                    <MoreVertIcon />\r\n                </IconButton>\r\n                <Menu\r\n                    id='main-menu'\r\n                    anchorEl={anchorEl}\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={this.handleMenuClose}\r\n                    getContentAnchorEl={null}\r\n                    disableAutoFocusItem\r\n                    disableRestoreFocus={true}\r\n                    anchorOrigin={menuAnchorOrigin}\r\n                    transformOrigin={menuTransformOrigin}>\r\n                    <MenuItem onClick={this.handleChatInfo}>Chat info</MenuItem>\r\n                    {clearHistory && <MenuItem onClick={this.handleClearHistory}>Clear history</MenuItem>}\r\n                    {deleteChat && leaveChatTitle && <MenuItem onClick={this.handleLeave}>{leaveChatTitle}</MenuItem>}\r\n                </Menu>\r\n                <LeaveChatDialog chatId={chatId} open={openDelete} onClose={this.handleLeaveContinue} />\r\n                <ClearHistoryDialog chatId={chatId} open={openClearHistory} onClose={this.handleClearHistoryContinue} />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst enhance = compose(\r\n    withStyles(styles),\r\n    withSnackbar\r\n);\r\n\r\nexport default enhance(MainMenuButton);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport classNames from 'classnames';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport { getUserStatus, isUserOnline } from '../../Utils/User';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport './UserStatusControl.css';\r\n\r\nconst styles = theme => ({\r\n    userStatusSubtitle: {\r\n        color: theme.palette.type === 'dark' ? theme.palette.text.secondary : '#70777b'\r\n    },\r\n    userStatusAccentSubtitle: {\r\n        color: theme.palette.primary.dark + '!important'\r\n    }\r\n});\r\n\r\nclass UserStatusControl extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { userId } = this.props;\r\n        const user = UserStore.get(userId);\r\n\r\n        this.state = {\r\n            prevUserId: userId,\r\n            status: getUserStatus(user),\r\n            isAccent: isUserOnline(user)\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.userId !== state.prevUserId) {\r\n            const { userId } = props;\r\n            const user = UserStore.get(userId);\r\n\r\n            return {\r\n                prevUserId: userId,\r\n                status: getUserStatus(user),\r\n                isAccent: isUserOnline(user)\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { userId, theme } = this.props;\r\n        const { status, isAccent } = this.state;\r\n\r\n        if (nextProps.theme !== theme) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.userId !== userId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.status !== status) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.isAccent !== isAccent) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\r\n    }\r\n\r\n    onUpdateUserStatus = update => {\r\n        const { userId } = this.props;\r\n        const user = UserStore.get(userId);\r\n\r\n        if (userId === update.user_id) {\r\n            this.setState({ status: getUserStatus(user), isAccent: isUserOnline(user) });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { status, isAccent } = this.state;\r\n\r\n        return (\r\n            <div\r\n                className={classNames('dialog-content', classes.userStatusSubtitle, {\r\n                    'accent-color': isAccent,\r\n                    [classes.userStatusAccentSubtitle]: isAccent\r\n                })}>\r\n                {status}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(UserStatusControl);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport UserTileControl from './UserTileControl';\r\nimport UserStatusControl from './UserStatusControl';\r\nimport { getUserFullName } from '../../Utils/User';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport './UserControl.css';\r\n\r\nclass UserControl extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return nextProps.userId !== this.props.userId;\r\n    }\r\n\r\n    handleClick = () => {\r\n        const { userId, onSelect } = this.props;\r\n\r\n        const user = UserStore.get(userId);\r\n        if (!user) return;\r\n        if (!onSelect) return;\r\n\r\n        onSelect(user);\r\n    };\r\n\r\n    render() {\r\n        const { userId } = this.props;\r\n        const user = UserStore.get(userId);\r\n\r\n        const fullName = getUserFullName(user);\r\n\r\n        return (\r\n            <div className='user' onClick={this.handleClick}>\r\n                <div className='user-wrapper'>\r\n                    <UserTileControl userId={userId} />\r\n                    <div className='dialog-inner-wrapper'>\r\n                        <div className='tile-first-row'>\r\n                            <div className='dialog-title'>{fullName}</div>\r\n                        </div>\r\n                        <div className='tile-second-row'>\r\n                            <UserStatusControl userId={userId} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nUserControl.propTypes = {\r\n    userId: PropTypes.number.isRequired,\r\n    onSelect: PropTypes.func\r\n};\r\n\r\nexport default UserControl;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { getChatTitle } from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport './DialogTitleControl.css';\r\n\r\nclass DialogTitleControl extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if (nextProps.chatId !== this.props.chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.t !== this.props.t) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\r\n    }\r\n\r\n    onFastUpdatingComplete = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateChatTitle = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (update.chat_id !== chatId) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    render() {\r\n        const { t, chatId, showSavedMessages } = this.props;\r\n\r\n        const title = getChatTitle(chatId, showSavedMessages, t);\r\n\r\n        return <div className='dialog-title'>{title}</div>;\r\n    }\r\n}\r\n\r\nDialogTitleControl.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    showSavedMessages: PropTypes.bool\r\n};\r\n\r\nDialogTitleControl.defaultProps = {\r\n    showSavedMessages: true\r\n};\r\n\r\nexport default withTranslation()(DialogTitleControl);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport classNames from 'classnames';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport './DialogStatusControl.css';\r\n\r\nconst styles = theme => ({\r\n    statusSubtitle: {\r\n        color: theme.palette.type === 'dark' ? theme.palette.text.secondary : '#70777b'\r\n    },\r\n    statusAccentSubtitle: {\r\n        color: theme.palette.primary.dark + '!important'\r\n    }\r\n});\r\n\r\nclass DialogStatusControl extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId } = this.props;\r\n\r\n        this.state = {\r\n            prevChatId: chatId,\r\n            subtitle: getChatSubtitleWithoutTyping(chatId),\r\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.chatId !== state.prevChatId) {\r\n            const { chatId } = props;\r\n\r\n            return {\r\n                prevChatId: chatId,\r\n                subtitle: getChatSubtitleWithoutTyping(chatId),\r\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId } = this.props;\r\n        const { subtitle, isAccent } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.subtitle !== subtitle) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.isAccent !== isAccent) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\r\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\r\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\r\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\r\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\r\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\r\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\r\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\r\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\r\n    }\r\n\r\n    onUpdateUserStatus = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        let updateSubtitle = false;\r\n        switch (chat.type['@type']) {\r\n            case 'chatTypeBasicGroup': {\r\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\r\n                if (fullInfo && fullInfo.members) {\r\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\r\n                    if (member) {\r\n                        updateSubtitle = true;\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypePrivate': {\r\n                if (chat.type.user_id === update.user_id) {\r\n                    updateSubtitle = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypeSecret': {\r\n                if (chat.type.user_id === update.user_id) {\r\n                    updateSubtitle = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (updateSubtitle) {\r\n            this.updateSubtitle(chat);\r\n        }\r\n    };\r\n\r\n    updateSubtitle = chat => {\r\n        this.setState({\r\n            subtitle: getChatSubtitleWithoutTyping(chat.id),\r\n            isAccent: isAccentChatSubtitleWithoutTyping(chat.id)\r\n        });\r\n    };\r\n\r\n    onUpdateUserFullInfo = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        if (\r\n            chat.type &&\r\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\r\n            chat.type.user_id === update.user_id\r\n        ) {\r\n            this.updateSubtitle(chat);\r\n        }\r\n    };\r\n\r\n    onUpdateBasicGroupFullInfo = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        if (\r\n            chat.type &&\r\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\r\n            chat.type.basic_group_id === update.basic_group_id\r\n        ) {\r\n            this.updateSubtitle(chat);\r\n        }\r\n    };\r\n\r\n    onUpdateSupergroupFullInfo = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        if (\r\n            chat.type &&\r\n            chat.type['@type'] === 'chatTypeSupergroup' &&\r\n            chat.type.supergroup_id === update.supergroup_id\r\n        ) {\r\n            this.updateSubtitle(chat);\r\n        }\r\n    };\r\n\r\n    onUpdateBasicGroup = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        if (\r\n            chat.type &&\r\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\r\n            chat.type.basic_group_id === update.basic_group.id\r\n        ) {\r\n            this.updateSubtitle(chat);\r\n        }\r\n    };\r\n\r\n    onUpdateSupergroup = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        if (\r\n            chat.type &&\r\n            chat.type['@type'] === 'chatTypeSupergroup' &&\r\n            chat.type.supergroup_id === update.supergroup.id\r\n        ) {\r\n            this.updateSubtitle(chat);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { subtitle, isAccent } = this.state;\r\n\r\n        return (\r\n            <div\r\n                className={classNames(\r\n                    'dialog-status',\r\n                    isAccent ? classes.statusAccentSubtitle : classes.statusSubtitle\r\n                )}>\r\n                {subtitle}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(DialogStatusControl);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ChatTileControl from './ChatTileControl';\r\nimport DialogTitleControl from './DialogTitleControl';\r\nimport DialogStatusControl from './DialogStatusControl';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport './ChatControl.css';\r\n\r\nclass ChatControl extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            const { chatId } = this.props;\r\n            this.state = {\r\n                chat: ChatStore.get(chatId)\r\n            };\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return nextProps.chatId !== this.props.chatId;\r\n    }\r\n\r\n    handleClick = () => {\r\n        const { chatId, onSelect } = this.props;\r\n        if (!onSelect) return;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        onSelect(chat);\r\n    };\r\n\r\n    render() {\r\n        const { chatId, onTileSelect, showStatus, showSavedMessages } = this.props;\r\n\r\n        return (\r\n            <div className='chat' onClick={this.handleClick}>\r\n                <div className='chat-wrapper'>\r\n                    <ChatTileControl chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\r\n                    <div className='dialog-inner-wrapper'>\r\n                        <div className='tile-first-row'>\r\n                            <DialogTitleControl chatId={chatId} showSavedMessages={showSavedMessages} />\r\n                        </div>\r\n                        {showStatus && !showSavedMessages && (\r\n                            <div className='tile-second-row'>\r\n                                <DialogStatusControl chatId={chatId} />\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nChatControl.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    showSavedMessages: PropTypes.bool,\r\n    showStatus: PropTypes.bool,\r\n    onSelect: PropTypes.func,\r\n    onTileSelect: PropTypes.func\r\n};\r\n\r\nChatControl.defaultProps = {\r\n    showSavedMessages: true,\r\n    showStatus: true\r\n};\r\n\r\nexport default ChatControl;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { compose } from 'recompose';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport './ChatDetailsHeader.css';\r\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\r\n\r\nconst styles = {\r\n    leftIconButton: {\r\n        margin: '8px -2px 8px 12px'\r\n    },\r\n    rightIconButton: {\r\n        margin: '8px 12px 8px -2px'\r\n    }\r\n};\r\n\r\nclass ChatDetailsHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const { classes, chatId, t, backButton, onClick, onClose } = this.props;\r\n\r\n        let info = t('ChatInfo');\r\n        if (isPrivateChat(chatId)) {\r\n            info = t('Info');\r\n        } else if (isChannelChat(chatId)) {\r\n            info = t('ChannelInfo');\r\n        }\r\n\r\n        return (\r\n            <div className='header-master'>\r\n                {backButton && (\r\n                    <IconButton className={classes.leftIconButton} onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                )}\r\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\r\n                    <span className='header-status-content'>{info}</span>\r\n                </div>\r\n                {!backButton && (\r\n                    <IconButton className={classes.rightIconButton} onClick={onClose}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst enhance = compose(\r\n    withTranslation(),\r\n    withStyles(styles, { withTheme: true })\r\n);\r\n\r\nexport default enhance(ChatDetailsHeader);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { compose } from 'recompose';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NotificationsControl from '../ColumnMiddle/NotificationsControl';\r\n\r\nconst styles = {\r\n    listItem: {\r\n        padding: '11px 22px'\r\n    }\r\n};\r\n\r\nclass NotificationsListItem extends NotificationsControl {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const { classes, t } = this.props;\r\n        const { isMuted } = this.state;\r\n\r\n        return (\r\n            <ListItem button className={classes.listItem} onClick={this.handleSetChatNotifications}>\r\n                <ListItemIcon>{!isMuted ? <NotificationsActiveIcon /> : <NotificationsIcon />}</ListItemIcon>\r\n                <ListItemText\r\n                    primary={\r\n                        <Typography variant='inherit' noWrap>\r\n                            {t('Notifications')}\r\n                        </Typography>\r\n                    }\r\n                />\r\n                <ListItemSecondaryAction>\r\n                    <Switch color='primary' onChange={this.handleSetChatNotifications} checked={!isMuted} />\r\n                </ListItemSecondaryAction>\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nconst enhance = compose(\r\n    withTranslation(),\r\n    withStyles(styles, { withTheme: true })\r\n);\r\n\r\nexport default enhance(NotificationsListItem);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { compose } from 'recompose';\r\nimport { withTranslation } from 'react-i18next';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport { isUserBlocked } from '../../Utils/User';\r\nimport { isChannelChat, isChatMember, isGroupChat } from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\n\r\nconst styles = {\r\n    listItem: {\r\n        padding: '11px 22px'\r\n    }\r\n};\r\n\r\nclass MoreListItem extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId } = this.props;\r\n        this.state = {\r\n            prevChatId: chatId,\r\n            openMore: false\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.chatId !== state.prevChatId) {\r\n            return {\r\n                prevChatId: props.chatId,\r\n                openMore: false\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    handleMoreClick = () => {\r\n        this.setState({ openMore: !this.state.openMore });\r\n    };\r\n\r\n    handleSendMessage = () => {\r\n        const currentChatId = ApplicationStore.getChatId();\r\n        const { chatId } = this.props;\r\n        if (currentChatId === chatId) {\r\n            //this.dialogDetails.current.scrollToBottom();\r\n        } else {\r\n            TdLibController.setChatId(chatId);\r\n        }\r\n    };\r\n\r\n    handleBlock = () => {\r\n        const { chatId } = this.state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        const { user_id } = chat.type;\r\n        if (!user_id) return;\r\n\r\n        TdLibController.send({\r\n            '@type': isUserBlocked(user_id) ? 'unblockUser' : 'blockUser',\r\n            user_id: user_id\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t, chatId, classes } = this.props;\r\n        const { openMore } = this.state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n\r\n        const isGroup = isGroupChat(chatId);\r\n        let isBlocked = false;\r\n        if (!isGroup && chat.type) {\r\n            isBlocked = isUserBlocked(chat.type.user_id);\r\n        }\r\n        const isMember = isChatMember(chatId);\r\n        const isChannel = isChannelChat(chatId);\r\n\r\n        return (\r\n            <>\r\n                <ListItem button className={classes.listItem} onClick={this.handleMoreClick}>\r\n                    <ListItemIcon>\r\n                        <MoreHorizIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                        primary={\r\n                            <Typography variant='inherit' noWrap>\r\n                                {t('More')}\r\n                            </Typography>\r\n                        }\r\n                    />\r\n                    {openMore ? <ExpandLess /> : <ExpandMore />}\r\n                </ListItem>\r\n                <Collapse in={openMore} timeout='auto' unmountOnExit>\r\n                    <List component='div' disablePadding>\r\n                        {!isGroup && (\r\n                            <>\r\n                                <ListItem button className={classes.listItem} onClick={this.handleSendMessage}>\r\n                                    <ListItemText\r\n                                        inset\r\n                                        primary={\r\n                                            <Typography variant='inherit' noWrap>\r\n                                                {t('SendMessage')}\r\n                                            </Typography>\r\n                                        }\r\n                                    />\r\n                                </ListItem>\r\n                                <ListItem button className={classes.listItem} onClick={this.handleBlock}>\r\n                                    <ListItemText\r\n                                        inset\r\n                                        primary={\r\n                                            <Typography color='secondary' variant='inherit' noWrap>\r\n                                                {isBlocked ? t('Unblock') : t('BlockContact')}\r\n                                            </Typography>\r\n                                        }\r\n                                    />\r\n                                </ListItem>\r\n                            </>\r\n                        )}\r\n                        {isGroup && isMember && (\r\n                            <ListItem button className={classes.listItem}>\r\n                                <ListItemText\r\n                                    inset\r\n                                    primary={\r\n                                        <Typography color='secondary' variant='inherit' noWrap>\r\n                                            {isChannel ? t('LeaveChannel') : t('DeleteChat')}\r\n                                        </Typography>\r\n                                    }\r\n                                />\r\n                            </ListItem>\r\n                        )}\r\n                        {isGroup && !isMember && (\r\n                            <ListItem button className={classes.listItem}>\r\n                                <ListItemText\r\n                                    inset\r\n                                    primary={\r\n                                        <Typography color='secondary' variant='inherit' noWrap>\r\n                                            {t('ReportChat')}\r\n                                        </Typography>\r\n                                    }\r\n                                />\r\n                            </ListItem>\r\n                        )}\r\n                    </List>\r\n                </Collapse>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst enhance = compose(\r\n    withTranslation(),\r\n    withStyles(styles, { withTheme: true })\r\n);\r\n\r\nexport default enhance(MoreListItem);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport copy from 'copy-to-clipboard';\r\nimport classNames from 'classnames';\r\nimport { compose } from 'recompose';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport { withSnackbar } from 'notistack';\r\nimport { withTranslation } from 'react-i18next';\r\nimport PhotoIcon from '@material-ui/icons/Photo';\r\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Button from '@material-ui/core/Button';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CircularProgress from '../ColumnMiddle/MainMenuButton';\r\nimport NotificationTimer from '../Additional/NotificationTimer';\r\nimport UserControl from '../Tile/UserControl';\r\nimport ChatControl from '../Tile/ChatControl';\r\nimport ChatDetailsHeader from './ChatDetailsHeader';\r\nimport NotificationsListItem from './NotificationsListItem';\r\nimport MoreListItem from './MoreListItem';\r\nimport {\r\n    getChatUsername,\r\n    getChatPhoneNumber,\r\n    getChatBio,\r\n    isGroupChat,\r\n    getGroupChatMembers,\r\n    getChatFullInfo,\r\n    isPrivateChat,\r\n    getChatUserId,\r\n    isMeChat\r\n} from '../../Utils/Chat';\r\nimport { getUserStatusOrder } from '../../Utils/User';\r\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\r\nimport { formatPhoneNumber } from '../../Utils/Common';\r\nimport { openChat } from '../../Actions/Client';\r\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\r\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport OptionStore from '../../Stores/OptionStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './ChatDetails.css';\r\n\r\nconst styles = theme => ({\r\n    closeIconButton: {\r\n        margin: '8px -2px 8px 12px'\r\n    },\r\n    nested: {\r\n        // paddingLeft: theme.spacing.unit * 4,\r\n    },\r\n    close: {\r\n        padding: theme.spacing.unit / 2\r\n    },\r\n    listItem: {\r\n        padding: '11px 22px'\r\n    }\r\n});\r\n\r\nclass ChatDetails extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.chatDetailsListRef = React.createRef();\r\n\r\n        const { chatId } = this.props;\r\n\r\n        this.members = new Map();\r\n        this.state = {\r\n            prevChatId: chatId,\r\n            hasGroupsInCommon: false\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.chatId !== state.prevChatId) {\r\n            return {\r\n                prevChatId: props.chatId,\r\n                hasGroupsInCommon: false\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getSnapshotBeforeUpdate(prevProps, prevState) {\r\n        const { chatId } = this.props;\r\n\r\n        const list = this.chatDetailsListRef.current;\r\n        const { scrollTop, scrollHeight, offsetHeight } = list;\r\n        const snapshot = {\r\n            scrollTop: scrollTop,\r\n            scrollHeight: scrollHeight,\r\n            offsetHeight: offsetHeight\r\n        };\r\n\r\n        console.log(\r\n            `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\r\n        );\r\n\r\n        return snapshot;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, theme } = this.props;\r\n        const { hasGroupsInCommon } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.theme !== theme) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.hasGroupsInCommon !== hasGroupsInCommon) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { chatId } = this.props;\r\n        if (prevProps.chatId !== chatId) {\r\n            this.handleSelectChat();\r\n        }\r\n\r\n        console.log('chatDetailsListRef', this.chatDetailsListRef);\r\n        const list = this.chatDetailsListRef.current;\r\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\r\n        console.log(\r\n            `[ChatDetails] componentDidUpdate before chatId=${chatId} list.scrollTop=${\r\n                list.scrollTop\r\n            } list.offsetHeight=${list.offsetHeight} list.scrollHeight=${list.scrollHeight}`\r\n        );\r\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\r\n        console.log(\r\n            `[ChatDetails] componentDidUpdate after chatId=${chatId} list.scrollTop=${\r\n                list.scrollTop\r\n            } list.offsetHeight=${list.offsetHeight} list.scrollHeight=${list.scrollHeight}`\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleSelectChat();\r\n\r\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\r\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\r\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\r\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\r\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\r\n    }\r\n\r\n    onUpdateBasicGroupFullInfo = update => {\r\n        const chat = ChatStore.get(this.props.chatId);\r\n        if (!chat) return;\r\n\r\n        if (\r\n            chat.type &&\r\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\r\n            chat.type.basic_group_id === update.basic_group_id\r\n        ) {\r\n            this.handleSelectChat();\r\n\r\n            this.forceUpdate(); // update bio\r\n        }\r\n    };\r\n\r\n    onUpdateSupergroupFullInfo = update => {\r\n        const chat = ChatStore.get(this.props.chatId);\r\n        if (!chat) return;\r\n\r\n        if (\r\n            chat.type &&\r\n            chat.type['@type'] === 'chatTypeSupergroup' &&\r\n            chat.type.supergroup_id === update.supergroup_id\r\n        ) {\r\n            this.forceUpdate(); // update bio\r\n        }\r\n    };\r\n\r\n    onUpdateUserFullInfo = update => {\r\n        const chat = ChatStore.get(this.props.chatId);\r\n        if (!chat) return;\r\n\r\n        if (\r\n            chat.type &&\r\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\r\n            chat.type.user_id === update.user_id\r\n        ) {\r\n            this.forceUpdate(); // update bio\r\n        }\r\n    };\r\n\r\n    onUpdateUserStatus = update => {\r\n        if (this.members.has(update.user_id)) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    handleSelectChat = () => {\r\n        this.getFullInfo();\r\n\r\n        this.getGroupsInCommon();\r\n\r\n        this.loadChatContents();\r\n    };\r\n\r\n    loadChatContents = () => {\r\n        const { chatId } = this.props;\r\n\r\n        const store = FileStore.getStore();\r\n\r\n        loadChatsContent(store, [chatId]);\r\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\r\n        loadUsersContent(store, members);\r\n    };\r\n\r\n    getFullInfo = () => {\r\n        const { chatId } = this.props;\r\n\r\n        getChatFullInfo(chatId);\r\n    };\r\n\r\n    getGroupsInCommon = async () => {\r\n        const { chatId } = this.props;\r\n\r\n        const isGroup = isGroupChat(chatId);\r\n        if (isGroup) return;\r\n\r\n        const isMe = isMeChat(chatId);\r\n        if (isMe) return;\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'getGroupsInCommon',\r\n            user_id: getChatUserId(chatId),\r\n            offset_chat_id: 0,\r\n            limit: 1\r\n        });\r\n\r\n        this.setState({ hasGroupsInCommon: result.chat_ids.length > 0 });\r\n    };\r\n\r\n    handleUsernameHint = () => {\r\n        const { t, chatId } = this.props;\r\n        const username = getChatUsername(chatId);\r\n        if (!username) return;\r\n\r\n        const telegramUrlOption = OptionStore.get('t_me_url');\r\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\r\n\r\n        copy(usernameLink + username);\r\n\r\n        const key = `${chatId}_copy_username`;\r\n        const message = t('TextCopied');\r\n        const action = null;\r\n\r\n        this.handleScheduledAction(key, message, action);\r\n    };\r\n\r\n    handleScheduledAction = (key, message, action) => {\r\n        if (!key) return;\r\n\r\n        const { enqueueSnackbar, classes } = this.props;\r\n        if (!enqueueSnackbar) return;\r\n\r\n        const TRANSITION_DELAY = 150;\r\n        if (\r\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\r\n        ) {\r\n            enqueueSnackbar(message, {\r\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n                action: [\r\n                    <IconButton\r\n                        key='close'\r\n                        aria-label='Close'\r\n                        color='inherit'\r\n                        className={classes.close}\r\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                ]\r\n            });\r\n        }\r\n    };\r\n\r\n    handlePhoneHint = () => {\r\n        const { t, chatId } = this.props;\r\n        const phoneNumber = getChatPhoneNumber(chatId);\r\n        if (!phoneNumber) return;\r\n\r\n        copy(formatPhoneNumber(phoneNumber));\r\n\r\n        const key = `${chatId}_copy_phone`;\r\n        const message = t('PhoneCopied');\r\n        const action = null;\r\n\r\n        this.handleScheduledAction(key, message, action);\r\n    };\r\n\r\n    handleHeaderClick = () => {\r\n        this.chatDetailsListRef.current.scrollTop = 0;\r\n    };\r\n\r\n    handleOpenViewer = () => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.photo) return;\r\n\r\n        ApplicationStore.setProfileMediaViewerContent({ chatId: chatId });\r\n    };\r\n\r\n    handleOpenChat = () => {\r\n        const { chatId, popup } = this.props;\r\n\r\n        openChat(chatId, null, false);\r\n\r\n        if (popup) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateDialogChatId',\r\n                chatId: 0\r\n            });\r\n        }\r\n    };\r\n\r\n    getContentHeight = () => {\r\n        if (!this.chatDetailsListRef) return 0;\r\n\r\n        return this.chatDetailsListRef.current.clientHeight;\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            t,\r\n            className,\r\n            chatId,\r\n            classes,\r\n            onOpenSharedMedia,\r\n            onOpenGroupsInCommon,\r\n            popup,\r\n            backButton,\r\n            onClose\r\n        } = this.props;\r\n        const { hasGroupsInCommon } = this.state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) {\r\n            return (\r\n                <div className='chat-details'>\r\n                    <ChatDetailsHeader onClose={onClose} />\r\n                    <div ref={this.chatDetailsListRef} className='chat-details-list' />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        const username = getChatUsername(chatId);\r\n        const phoneNumber = getChatPhoneNumber(chatId);\r\n        const bio = getChatBio(chatId);\r\n        const isGroup = isGroupChat(chatId);\r\n        const isMe = isMeChat(chatId);\r\n\r\n        const members = getGroupChatMembers(chatId);\r\n        const users = [];\r\n        this.members = new Map();\r\n        members.forEach(member => {\r\n            const user = UserStore.get(member.user_id);\r\n            if (user) {\r\n                this.members.set(user.id, user.id);\r\n                users.push(user);\r\n            }\r\n        });\r\n\r\n        const sortedUsers = users.sort((x, y) => {\r\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\r\n        });\r\n        const items = sortedUsers.map(user => (\r\n            <ListItem button className={classes.listItem} key={user.id}>\r\n                <UserControl userId={user.id} onSelect={this.handleSelectUser} />\r\n            </ListItem>\r\n        ));\r\n\r\n        const { photo } = chat;\r\n\r\n        const content = (\r\n            <>\r\n                <ChatDetailsHeader\r\n                    chatId={chatId}\r\n                    backButton={backButton}\r\n                    onClose={onClose}\r\n                    onClick={this.handleHeaderClick}\r\n                />\r\n                <div ref={this.chatDetailsListRef} className='chat-details-list'>\r\n                    <div className='chat-details-info'>\r\n                        <ChatControl\r\n                            chatId={chatId}\r\n                            showStatus={popup}\r\n                            showSavedMessages={!popup}\r\n                            onTileSelect={photo ? this.handleOpenViewer : null}\r\n                        />\r\n                    </div>\r\n                    {(username || phoneNumber || bio) && (\r\n                        <List>\r\n                            {username && (\r\n                                <ListItem button className={classes.listItem} onClick={this.handleUsernameHint}>\r\n                                    <ListItemIcon>\r\n                                        <AlternateEmailIcon />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText\r\n                                        primary={\r\n                                            <Typography variant='inherit' noWrap>\r\n                                                {username}\r\n                                            </Typography>\r\n                                        }\r\n                                    />\r\n                                </ListItem>\r\n                            )}\r\n                            {phoneNumber && (\r\n                                <>\r\n                                    <ListItem button className={classes.listItem} onClick={this.handlePhoneHint}>\r\n                                        <ListItemIcon>\r\n                                            <CallIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText\r\n                                            primary={\r\n                                                <Typography variant='inherit' noWrap>\r\n                                                    {formatPhoneNumber(phoneNumber)}\r\n                                                </Typography>\r\n                                            }\r\n                                        />\r\n                                    </ListItem>\r\n                                </>\r\n                            )}\r\n                            {bio && (\r\n                                <ListItem className={classes.listItem}>\r\n                                    <ListItemIcon>\r\n                                        <ErrorOutlineIcon className='chat-details-info-icon' />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText\r\n                                        primary={bio}\r\n                                        style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\r\n                                    />\r\n                                </ListItem>\r\n                            )}\r\n                        </List>\r\n                    )}\r\n                    <Divider />\r\n                    <List>\r\n                        {!isMe && <NotificationsListItem chatId={chatId} />}\r\n                        {isGroup && <MoreListItem chatId={chatId} />}\r\n                        {!isGroup && (\r\n                            <ListItem button className={classes.listItem} onClick={this.handleOpenChat}>\r\n                                <ListItemText\r\n                                    inset\r\n                                    primary={\r\n                                        <Typography color='primary' variant='inherit' noWrap>\r\n                                            {t('SendMessage').toUpperCase()}\r\n                                        </Typography>\r\n                                    }\r\n                                />\r\n                            </ListItem>\r\n                        )}\r\n                    </List>\r\n                    <Divider />\r\n                    <List>\r\n                        <ListItem button disabled className={classes.listItem} onClick={onOpenSharedMedia}>\r\n                            <ListItemIcon>\r\n                                <PhotoIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText\r\n                                primary={\r\n                                    <Typography variant='inherit' noWrap>\r\n                                        {t('SharedMedia')}\r\n                                    </Typography>\r\n                                }\r\n                            />\r\n                        </ListItem>\r\n                        {hasGroupsInCommon && (\r\n                            <ListItem button className={classes.listItem} onClick={onOpenGroupsInCommon}>\r\n                                <ListItemText\r\n                                    inset\r\n                                    primary={\r\n                                        <Typography variant='inherit' noWrap>\r\n                                            {t('GroupsInCommon')}\r\n                                        </Typography>\r\n                                    }\r\n                                />\r\n                            </ListItem>\r\n                        )}\r\n                    </List>\r\n                    {items.length > 0 && (\r\n                        <>\r\n                            <Divider />\r\n                            <List>{items}</List>\r\n                        </>\r\n                    )}\r\n                </div>\r\n            </>\r\n        );\r\n\r\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\r\n    }\r\n}\r\n\r\nChatDetails.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    popup: PropTypes.bool,\r\n    onClose: PropTypes.func,\r\n    onOpenSharedMedia: PropTypes.func,\r\n    onOpenGroupsInCommon: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withStyles(styles, { withTheme: true }),\r\n    withSnackbar,\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(ChatDetails);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport './GroupsInCommonHeader.css';\r\n\r\nconst styles = {\r\n    backIconButton: {\r\n        margin: '8px -2px 8px 12px'\r\n    }\r\n};\r\n\r\nclass GroupsInCommonHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const { classes, onClose } = this.props;\r\n\r\n        return (\r\n            <div className='header-master'>\r\n                <IconButton className={classes.backIconButton} onClick={onClose}>\r\n                    <ArrowBackIcon />\r\n                </IconButton>\r\n                <div className='header-status grow cursor-pointer'>\r\n                    <span className='header-status-content'>Groups in common</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nGroupsInCommonHeader.propTypes = {\r\n    onClose: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(GroupsInCommonHeader);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ChatControl from '../Tile/ChatControl';\r\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\r\nimport { getChatUserId } from '../../Utils/Chat';\r\nimport { loadChatsContent } from '../../Utils/File';\r\nimport { openChat } from '../../Actions/Client';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './GroupsInCommon.css';\r\n\r\nclass GroupsInCommon extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            chatIds: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { chatId } = this.props;\r\n\r\n        const userId = getChatUserId(chatId);\r\n        if (!userId) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'getGroupsInCommon',\r\n            user_id: userId,\r\n            offset_chat_id: 0,\r\n            limit: 100\r\n        }).then(result => {\r\n            const store = FileStore.getStore();\r\n            loadChatsContent(store, result.chat_ids);\r\n\r\n            this.setState({ chatIds: result.chat_ids });\r\n        });\r\n    }\r\n\r\n    handleSelect = chat => {\r\n        const { popup } = this.props;\r\n\r\n        openChat(chat.id);\r\n\r\n        if (popup) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateDialogChatId',\r\n                chatId: 0\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { minHeight, onClose, popup } = this.props;\r\n        const { chatIds } = this.state;\r\n\r\n        const chats = chatIds.map(x => (\r\n            <ListItem button key={x}>\r\n                <ChatControl chatId={x} onSelect={this.handleSelect} />\r\n            </ListItem>\r\n        ));\r\n\r\n        const content = (\r\n            <>\r\n                <GroupsInCommonHeader onClose={onClose} />\r\n                <div className='groups-in-common-list' style={{ minHeight }}>\r\n                    {chats}\r\n                </div>\r\n            </>\r\n        );\r\n\r\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\r\n    }\r\n}\r\n\r\nGroupsInCommon.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nGroupsInCommon.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default GroupsInCommon;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport './SharedMediaHeaderControl.css';\r\n\r\nconst styles = {\r\n    backIconButton: {\r\n        margin: '8px -2px 8px 12px'\r\n    }\r\n};\r\n\r\nclass SharedMediaHeaderControl extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const { classes, close } = this.props;\r\n\r\n        return (\r\n            <div className='header-master'>\r\n                <IconButton className={classes.backIconButton} onClick={close}>\r\n                    <ArrowBackIcon />\r\n                </IconButton>\r\n                <div className='header-status grow cursor-pointer'>\r\n                    <span className='header-status-content'>Shared Media</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(SharedMediaHeaderControl);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport SharedMediaHeaderControl from './SharedMediaHeaderControl';\r\nimport './SharedMedia.css';\r\nimport PropTypes from 'prop-types';\r\nimport GroupsInCommon from './GroupsInCommon';\r\n\r\nclass SharedMedia extends React.Component {\r\n    state = {\r\n        value: 0\r\n    };\r\n\r\n    handleChange = (event, value) => {\r\n        this.setState({ value });\r\n    };\r\n\r\n    render() {\r\n        const { onClose, popup } = this.props;\r\n        const { value } = this.state;\r\n\r\n        const content = (\r\n            <>\r\n                <SharedMediaHeaderControl close={onClose} />\r\n                <Tabs\r\n                    value={value}\r\n                    onChange={this.handleChange}\r\n                    indicatorColor='primary'\r\n                    textColor='primary'\r\n                    scrollable\r\n                    scrollButtons='off'\r\n                    fullWidth>\r\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\r\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\r\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\r\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\r\n                </Tabs>\r\n            </>\r\n        );\r\n\r\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\r\n    }\r\n}\r\n\r\nSharedMedia.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nSharedMedia.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default SharedMedia;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport ChatDetails from './ChatDetails';\r\nimport GroupsInCommon from './GroupsInCommon';\r\nimport SharedMedia from './SharedMedia';\r\nimport { borderStyle } from '../Theme';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './ChatInfo.css';\r\n\r\n// const styles = (theme) => ({\r\n//     borderColor: {\r\n//         borderColor: theme.palette.divider\r\n//     }\r\n// });\r\n\r\nclass ChatInfo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.detailsRef = React.createRef();\r\n\r\n        const { popup } = props;\r\n\r\n        this.state = {\r\n            chatId: popup ? ApplicationStore.dialogChatId : ApplicationStore.chatId\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    onClientUpdateChatId = update => {\r\n        const { popup } = this.props;\r\n        if (popup) return;\r\n\r\n        this.setState({\r\n            chatId: update.nextChatId,\r\n            userChatId: null,\r\n            openSharedMedia: false,\r\n            openGroupsInCommon: false\r\n        });\r\n    };\r\n\r\n    handelOpenSharedMedia = () => {\r\n        this.setState({ openSharedMedia: true });\r\n    };\r\n\r\n    handleCloseSharedMedia = () => {\r\n        this.setState({ openSharedMedia: false });\r\n    };\r\n\r\n    handleOpenGroupsInCommon = height => {\r\n        console.log('ChatInfo.handleOpenGroupsInCommon', height);\r\n        this.setState({ openGroupsInCommon: true });\r\n    };\r\n\r\n    handleCloseGroupsInCommon = () => {\r\n        this.setState({ openGroupsInCommon: false });\r\n    };\r\n\r\n    handleCloseChatDetails = () => {\r\n        const { popup } = this.props;\r\n        const { userChatId } = this.state;\r\n        if (userChatId) {\r\n            this.setState({ userChatId: null });\r\n        } else if (popup) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateDialogChatId',\r\n                chatId: 0\r\n            });\r\n        } else {\r\n            ApplicationStore.changeChatDetailsVisibility(false);\r\n        }\r\n    };\r\n\r\n    handleSelectUser = async user => {\r\n        if (!user) return;\r\n\r\n        let chat = await TdLibController.send({\r\n            '@type': 'createPrivateChat',\r\n            user_id: user.id,\r\n            force: true\r\n        });\r\n\r\n        chat = ChatStore.get(chat.id) || chat;\r\n        if (!chat) return;\r\n\r\n        this.setState({ userChatId: chat.id });\r\n    };\r\n\r\n    render() {\r\n        const { classes, className, popup } = this.props;\r\n        const { chatId, userChatId, openSharedMedia, openGroupsInCommon } = this.state;\r\n        const currentChatId = chatId || userChatId;\r\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\r\n\r\n        let content = null;\r\n        if (openSharedMedia) {\r\n            content = (\r\n                <SharedMedia\r\n                    chatId={currentChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseSharedMedia}\r\n                />\r\n            );\r\n        } else if (openGroupsInCommon) {\r\n            content = (\r\n                <GroupsInCommon\r\n                    chatId={currentChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseGroupsInCommon}\r\n                />\r\n            );\r\n        } else {\r\n            content = (\r\n                <ChatDetails\r\n                    ref={this.detailsRef}\r\n                    chatId={currentChatId}\r\n                    popup={popup}\r\n                    backButton={userChatId === chatId}\r\n                    onOpenSharedMedia={this.handelOpenSharedMedia}\r\n                    onOpenGroupsInCommon={this.handleOpenGroupsInCommon}\r\n                    onClose={this.handleCloseChatDetails}\r\n                />\r\n            );\r\n        }\r\n\r\n        return popup ? (\r\n            <>{content}</>\r\n        ) : (\r\n            <div className={classNames(classes.borderColor, { 'right-column': !popup }, className)}>{content}</div>\r\n        );\r\n    }\r\n}\r\n\r\nChatInfo.propTypes = {\r\n    className: PropTypes.string,\r\n    classes: PropTypes.object,\r\n    popup: PropTypes.bool\r\n};\r\n\r\nChatInfo.defaultProps = {\r\n    className: null,\r\n    classes: null,\r\n    popup: false\r\n};\r\n\r\nexport default withStyles(borderStyle)(ChatInfo);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport ChatTileControl from './ChatTileControl';\r\nimport { getChatShortTitle } from '../../Utils/Chat';\r\nimport './TopChat.css';\r\n\r\nconst styles = {\r\n    userStatusRoot: {\r\n        position: 'absolute',\r\n        right: 1,\r\n        bottom: 1,\r\n        zIndex: 1\r\n    }\r\n};\r\n\r\nclass TopChat extends React.PureComponent {\r\n    render() {\r\n        const { classes, chatId, onSelect, showSavedMessages } = this.props;\r\n\r\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages);\r\n\r\n        return (\r\n            <div className='top-chat'>\r\n                <ChatTileControl chatId={chatId} onSelect={onSelect} showSavedMessages={showSavedMessages} showOnline />\r\n                <div className='top-chat-title'>{shortTitle}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nTopChat.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    onSelect: PropTypes.func,\r\n    showSavedMessages: PropTypes.bool\r\n};\r\n\r\nTopChat.defaultProps = {\r\n    showSavedMessages: true\r\n};\r\n\r\nexport default withStyles(styles)(TopChat);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport ChatTileControl from './ChatTileControl';\r\nimport DialogTitleControl from './DialogTitleControl';\r\nimport './RecentlyFoundChat.css';\r\n\r\nconst styles = {\r\n    listItem: {\r\n        padding: '0px'\r\n    }\r\n};\r\n\r\nclass RecentlyFoundChat extends React.PureComponent {\r\n    render() {\r\n        const { chatId, onClick, classes } = this.props;\r\n\r\n        return (\r\n            <ListItem button className={classes.listItem} onClick={onClick}>\r\n                <div className='recently-found-chat'>\r\n                    <div className='chat-wrapper'>\r\n                        <ChatTileControl chatId={chatId} showSavedMessages />\r\n                        <div className='dialog-inner-wrapper'>\r\n                            <div className='tile-first-row'>\r\n                                <DialogTitleControl chatId={chatId} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nRecentlyFoundChat.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    onSelect: PropTypes.func\r\n};\r\n\r\nexport default withStyles(styles)(RecentlyFoundChat);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport classNames from 'classnames';\r\nimport ChatTileControl from './ChatTileControl';\r\nimport DialogTitleControl from './DialogTitleControl';\r\nimport { getChatUsername, getGroupChatMembersCount } from '../../Utils/Chat';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\nimport './FoundPublicChat.css';\r\n\r\nconst styles = theme => ({\r\n    listItem: {\r\n        padding: 0\r\n    },\r\n    listItemSelected: {\r\n        backgroundColor: theme.palette.primary.main + '!important'\r\n    },\r\n    foundPublicChatSubtitle: {\r\n        color: theme.palette.type === 'dark' ? theme.palette.text.secondary : '#70777b'\r\n    }\r\n});\r\n\r\nclass FoundPublicChat extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            nextChatId: ApplicationStore.getChatId(),\r\n            previousChatId: null\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, theme } = this.props;\r\n\r\n        if (nextState.nextChatId === chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.previousChatId === chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.theme !== theme) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    onClientUpdateChatId = update => {\r\n        const { nextChatId, previousChatId } = update;\r\n\r\n        this.setState({\r\n            nextChatId: nextChatId,\r\n            previousChatId: previousChatId\r\n        });\r\n    };\r\n\r\n    handleClick = () => {\r\n        const { chatId, onSelect } = this.props;\r\n        if (!onSelect) return;\r\n\r\n        onSelect(chatId);\r\n    };\r\n\r\n    render() {\r\n        const { chatId, onClick, classes } = this.props;\r\n        const selectedChatId = this.state.nextChatId;\r\n\r\n        const username = getChatUsername(chatId);\r\n        const membersCount = getGroupChatMembersCount(chatId);\r\n        let subscribersString = '';\r\n        if (membersCount > 0) {\r\n            subscribersString = membersCount === 1 ? ', 1 subscriber' : `, ${membersCount} subscribers`;\r\n        }\r\n\r\n        return (\r\n            <ListItem button classes={{ root: classes.listItem }} onClick={onClick}>\r\n                <div\r\n                    className={classNames('found-public-chat', {\r\n                        [classes.listItemSelected]: chatId === selectedChatId,\r\n                        'accent-background': chatId === selectedChatId\r\n                    })}\r\n                    onClick={this.handleClick}>\r\n                    <ChatTileControl chatId={chatId} />\r\n                    <div className='dialog-inner-wrapper'>\r\n                        <div className='tile-first-row'>\r\n                            <DialogTitleControl chatId={chatId} />\r\n                        </div>\r\n                        <div className='tile-second-row'>\r\n                            <div className={classNames('dialog-content', classes.foundPublicChatSubtitle)}>\r\n                                @{username}\r\n                                {subscribersString}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nFoundPublicChat.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(FoundPublicChat);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose } from 'recompose';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ChatTileControl from './ChatTileControl';\r\nimport UserTileControl from './UserTileControl';\r\nimport DialogTitleControl from './DialogTitleControl';\r\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\r\nimport { getContent } from '../../Utils/Message';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\nimport './FoundMessage.css';\r\n\r\nconst styles = theme => ({\r\n    listItem: {\r\n        padding: 0\r\n    },\r\n    accentBackground: {\r\n        background: theme.palette.primary.main + '!important'\r\n    },\r\n    foundMessageSubtitle: {\r\n        color: theme.palette.type === 'dark' ? theme.palette.text.secondary : '#70777b'\r\n    }\r\n});\r\n\r\nclass FoundMessage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            nextChatId: ApplicationStore.getChatId(),\r\n            nextMessageId: ApplicationStore.getMessageId()\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId, theme } = this.props;\r\n\r\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.theme !== theme) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    onClientUpdateChatId = update => {\r\n        this.setState({\r\n            ...update\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, chatSearch, onClick, classes, t } = this.props;\r\n        const selectedChatId = this.state.nextChatId;\r\n        const selectedMessageId = this.state.nextMessageId;\r\n        const message = MessageStore.get(chatId, messageId);\r\n\r\n        const { sender_user_id } = message;\r\n\r\n        const date = getMessageDate(message);\r\n        const senderName = getMessageSenderName(message);\r\n        const senderFullName = getMessageSenderFullName(message);\r\n        const content = getContent(message, t) || '\\u00A0';\r\n\r\n        const tile =\r\n            sender_user_id && chatSearch ? (\r\n                <UserTileControl userId={sender_user_id} />\r\n            ) : (\r\n                <ChatTileControl chatId={chatId} />\r\n            );\r\n\r\n        return (\r\n            <ListItem button className={classes.listItem} onClick={onClick}>\r\n                <div\r\n                    className={classNames(\r\n                        'found-message',\r\n                        { [classes.accentBackground]: chatId === selectedChatId && messageId === selectedMessageId },\r\n                        { 'accent-background': chatId === selectedChatId && messageId === selectedMessageId }\r\n                    )}>\r\n                    {tile}\r\n                    <div className='dialog-inner-wrapper'>\r\n                        <div className='tile-first-row'>\r\n                            {chatSearch && senderFullName ? (\r\n                                <div className='dialog-title'>{senderFullName}</div>\r\n                            ) : (\r\n                                <DialogTitleControl chatId={chatId} />\r\n                            )}\r\n                            <div className={classNames('dialog-meta-date', classes.foundMessageSubtitle)}>{date}</div>\r\n                        </div>\r\n                        <div className='tile-second-row'>\r\n                            <div className={classNames('dialog-content', classes.foundMessageSubtitle)}>\r\n                                {\r\n                                    <>\r\n                                        {!chatSearch && senderName && (\r\n                                            <span className='dialog-content-accent'>{senderName}: </span>\r\n                                        )}\r\n                                        {content}\r\n                                    </>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nFoundMessage.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    chatSearch: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withStyles(styles, { withTheme: true }),\r\n    withTranslation()\r\n);\r\n\r\nexport default enhance(FoundMessage);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport './SearchCaption.css';\r\n\r\nconst styles = theme => ({\r\n    searchCaption: {\r\n        background: theme.palette.type === 'dark' ? theme.palette.grey[800] + '!important' : '#f0f4f7',\r\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary + '!important' : '#8096a8'\r\n    },\r\n    searchCaptionCommand: {\r\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary + '!important' : '#8096a8'\r\n    }\r\n});\r\n\r\nfunction SearchCaption(props) {\r\n    const { caption, command, onClick, classes } = props;\r\n\r\n    return (\r\n        <div className={classNames('search-caption', classes.searchCaption)}>\r\n            <div className='search-caption-title'>{caption}</div>\r\n            {Boolean(command) && (\r\n                <a className={classes.searchCaptionCommand} onClick={onClick}>\r\n                    {command}\r\n                </a>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nSearchCaption.propTypes = {\r\n    caption: PropTypes.string.isRequired,\r\n    command: PropTypes.string,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(SearchCaption);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { compose } from 'recompose';\r\nimport { withTranslation } from 'react-i18next';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChatControl from '../../Tile/ChatControl';\r\nimport TopChat from '../../Tile/TopChat';\r\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\r\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\r\nimport FoundMessage from '../../Tile/FoundMessage';\r\nimport SearchCaption from './SearchCaption';\r\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\r\nimport { filterMessages } from '../../../Utils/Message';\r\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\r\nimport { orderCompare } from '../../../Utils/Common';\r\nimport { USERNAME_LENGTH_MIN } from '../../../Constants';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport ChatStore from '../../../Stores/ChatStore';\r\nimport UserStore from '../../../Stores/UserStore';\r\nimport ApplicationStore from '../../../Stores/ApplicationStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './Search.css';\r\n\r\nconst styles = theme => ({\r\n    closeSearchIconButton: {\r\n        margin: '8px 12px 8px 0'\r\n    },\r\n    listItem: {\r\n        padding: '0px'\r\n    },\r\n    search: {\r\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\r\n    }\r\n});\r\n\r\nclass Search extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.listRef = React.createRef();\r\n\r\n        const { chatId, text } = this.props;\r\n\r\n        this.state = {\r\n            prevPropsChatId: chatId,\r\n            prevPropsText: text,\r\n\r\n            top: null,\r\n            recentlyFound: null,\r\n            local: null,\r\n            global: null,\r\n            messages: null\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.chatId !== state.prevPropsChatId || props.text !== state.prevPropsText) {\r\n            return {\r\n                prevPropsChatId: props.chatId,\r\n                prevPropsText: props.text,\r\n\r\n                top: null,\r\n                recentlyFound: null,\r\n                local: null,\r\n                global: null,\r\n                messages: null\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n\r\n        ApplicationStore.on('clientUpdateSearchText', this.onClientUpdateSearchText);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ApplicationStore.removeListener('clientUpdateSearchText', this.onClientUpdateSearchText);\r\n    }\r\n\r\n    onClientUpdateSearchText = update => {\r\n        const { text } = update;\r\n\r\n        const trimmedText = text.trim();\r\n\r\n        if (!trimmedText) {\r\n            this.loadContent();\r\n        } else {\r\n            this.searchText(trimmedText);\r\n        }\r\n    };\r\n\r\n    concatSearchResults = results => {\r\n        const arr = [];\r\n        const map = new Map();\r\n\r\n        for (let i = 0; i < results.length; i++) {\r\n            let result = results[i].chat_ids;\r\n            if (result) {\r\n                for (let j = 0; j < result.length; j++) {\r\n                    if (!map.has(result[j])) {\r\n                        map.set(result[j], result[j]);\r\n                        arr.push(result[j]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        arr.sort((a, b) => {\r\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\r\n        });\r\n\r\n        return arr;\r\n    };\r\n\r\n    searchText = async text => {\r\n        this.sessionId = new Date();\r\n        this.text = text;\r\n        const sessionId = this.sessionId;\r\n        let store = null;\r\n\r\n        const { chatId } = this.props;\r\n        const { savedMessages } = this.state;\r\n\r\n        if (!chatId) {\r\n            const promises = [];\r\n            const localPromise = TdLibController.send({\r\n                '@type': 'searchChats',\r\n                query: text,\r\n                limit: 100\r\n            });\r\n            promises.push(localPromise);\r\n\r\n            const latinText = getLatinInput(text);\r\n            if (latinText) {\r\n                const latinLocalPromise = TdLibController.send({\r\n                    '@type': 'searchChats',\r\n                    query: latinText,\r\n                    limit: 100\r\n                });\r\n                promises.push(latinLocalPromise);\r\n            }\r\n\r\n            const cyrillicText = getCyrillicInput(text);\r\n            if (cyrillicText) {\r\n                const cyrillicLocalPromise = TdLibController.send({\r\n                    '@type': 'searchChats',\r\n                    query: cyrillicText,\r\n                    limit: 100\r\n                });\r\n                promises.push(cyrillicLocalPromise);\r\n            }\r\n\r\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\r\n            const local = this.concatSearchResults(results);\r\n\r\n            if (sessionId !== this.sessionId) {\r\n                return;\r\n            }\r\n\r\n            if (savedMessages) {\r\n                const { t } = this.props;\r\n\r\n                const searchText = text.toUpperCase();\r\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\r\n\r\n                if (\r\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\r\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\r\n                ) {\r\n                    local.splice(0, 0, savedMessages.id);\r\n                }\r\n            }\r\n\r\n            this.setState({\r\n                top: null,\r\n                recentlyFound: null,\r\n                local: local,\r\n                global: null,\r\n                messages: null\r\n            });\r\n\r\n            store = FileStore.getStore();\r\n            loadChatsContent(store, local);\r\n\r\n            if (text.length >= USERNAME_LENGTH_MIN) {\r\n                const globalPromises = [];\r\n\r\n                const globalPromise = TdLibController.send({\r\n                    '@type': 'searchPublicChats',\r\n                    query: text\r\n                });\r\n                globalPromises.push(globalPromise);\r\n\r\n                if (latinText) {\r\n                    const globalLatinPromise = TdLibController.send({\r\n                        '@type': 'searchPublicChats',\r\n                        query: latinText\r\n                    });\r\n                    globalPromises.push(globalLatinPromise);\r\n                }\r\n\r\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\r\n                const global = this.concatSearchResults(globalResults);\r\n\r\n                if (sessionId !== this.sessionId) {\r\n                    return;\r\n                }\r\n\r\n                this.setState({\r\n                    global: global\r\n                });\r\n\r\n                store = FileStore.getStore();\r\n                loadChatsContent(store, global);\r\n            }\r\n        }\r\n\r\n        let messages = [];\r\n        if (chatId) {\r\n            messages = await TdLibController.send({\r\n                '@type': 'searchChatMessages',\r\n                chat_id: chatId,\r\n                query: text,\r\n                sender_user_id: 0,\r\n                from_message_id: 0,\r\n                offset: 0,\r\n                limit: 50,\r\n                filter: null\r\n            });\r\n        } else {\r\n            messages = await TdLibController.send({\r\n                '@type': 'searchMessages',\r\n                query: text,\r\n                offset_date: 0,\r\n                offset_chat_id: 0,\r\n                offset_message_id: 0,\r\n                limit: 50\r\n            });\r\n        }\r\n\r\n        MessageStore.setItems(messages.messages);\r\n\r\n        if (sessionId !== this.sessionId) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            messages: messages\r\n        });\r\n\r\n        const chats = new Map();\r\n        const users = new Map();\r\n        for (let i = 0; i < messages.messages.length; i++) {\r\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\r\n            if (messages.messages[i].sender_user_id) {\r\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\r\n            }\r\n        }\r\n\r\n        store = FileStore.getStore();\r\n        loadChatsContent(store, [...chats.keys()]);\r\n        loadUsersContent(store, [...users.keys()]);\r\n    };\r\n\r\n    loadContent = async () => {\r\n        const { chatId } = this.props;\r\n        if (chatId) {\r\n            this.setState({\r\n                top: null,\r\n                recentlyFound: null,\r\n                local: null,\r\n                global: null,\r\n                messages: null\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const topPromise = TdLibController.send({\r\n            '@type': 'getTopChats',\r\n            category: { '@type': 'topChatCategoryUsers' },\r\n            limit: 30\r\n        }).catch(() => {\r\n            return { '@type': 'chats', chat_ids: [] };\r\n        });\r\n\r\n        const recentlyFoundPromise = TdLibController.send({\r\n            '@type': 'searchChats',\r\n            query: '',\r\n            limit: 100\r\n        }).catch(() => {\r\n            return { '@type': 'chats', chat_ids: [] };\r\n        });\r\n\r\n        const savedMessagesPromise = TdLibController.send({\r\n            '@type': 'createPrivateChat',\r\n            user_id: UserStore.getMyId(),\r\n            force: true\r\n        }).catch(error => {});\r\n\r\n        const [top, recentlyFound, savedMessages] = await Promise.all([\r\n            topPromise,\r\n            recentlyFoundPromise,\r\n            savedMessagesPromise\r\n        ]);\r\n\r\n        this.setState({\r\n            top: top,\r\n            recentlyFound: recentlyFound,\r\n            savedMessages: savedMessages,\r\n            local: null,\r\n            global: null,\r\n            messages: null\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadChatsContent(store, top.chat_ids);\r\n        loadChatsContent(store, recentlyFound.chat_ids);\r\n    };\r\n\r\n    handleRecentlyFound = async () => {\r\n        const chats = await TdLibController.send({\r\n            '@type': 'getChats',\r\n            offset_order: '9223372036854775807',\r\n            offset_chat_id: 0,\r\n            limit: 20\r\n        });\r\n\r\n        for (let i = chats.chat_ids.length - 1; i >= 0; i--) {\r\n            TdLibController.send({\r\n                '@type': 'addRecentlyFoundChat',\r\n                chat_id: chats.chat_ids[i]\r\n            });\r\n        }\r\n    };\r\n\r\n    handleClearRecentlyFound = event => {\r\n        event.stopPropagation();\r\n\r\n        TdLibController.send({\r\n            '@type': 'clearRecentlyFoundChats'\r\n        });\r\n\r\n        this.setState({ recentlyFound: null });\r\n    };\r\n\r\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\r\n        const { onSelectMessage } = this.props;\r\n\r\n        if (addToRecent) {\r\n            TdLibController.send({\r\n                '@type': 'addRecentlyFoundChat',\r\n                chat_id: chatId\r\n            });\r\n        }\r\n\r\n        onSelectMessage(chatId, messageId, keepOpen);\r\n    };\r\n\r\n    handleScroll = () => {\r\n        const list = this.listRef.current;\r\n\r\n        if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\r\n            this.onLoadPrevious();\r\n        }\r\n    };\r\n\r\n    getOffset = messages => {\r\n        const length = messages ? messages.messages.length : 0;\r\n\r\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\r\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\r\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\r\n\r\n        return {\r\n            offset_date: offsetDate,\r\n            offset_chat_id: offsetChatId,\r\n            offset_message_id: offsetMessageId\r\n        };\r\n    };\r\n\r\n    concatMessages = (messages, result) => {\r\n        if (!result) return messages;\r\n        if (!result.messages.length) return messages;\r\n\r\n        if (!messages) return result;\r\n        if (!messages.messages.length) return result;\r\n\r\n        return {\r\n            total_count: result.total_count,\r\n            messages: messages.messages.concat(result.messages)\r\n        };\r\n    };\r\n\r\n    onLoadPrevious = async () => {\r\n        if (this.loading) return;\r\n\r\n        const { chatId } = this.props;\r\n\r\n        const sessionId = this.sessionId;\r\n\r\n        const { messages } = this.state;\r\n\r\n        const offset = this.getOffset(messages);\r\n\r\n        this.loading = true;\r\n        let result = [];\r\n        if (chatId) {\r\n            result = await TdLibController.send({\r\n                '@type': 'searchChatMessages',\r\n                chat_id: chatId,\r\n                query: this.text,\r\n                sender_user_id: 0,\r\n                from_message_id: offset.offset_message_id,\r\n                limit: 50,\r\n                filter: null\r\n            });\r\n        } else {\r\n            result = await TdLibController.send({\r\n                '@type': 'searchMessages',\r\n                query: this.text,\r\n                ...offset,\r\n                limit: 50\r\n            });\r\n        }\r\n        this.loading = false;\r\n\r\n        filterMessages(result, messages ? messages.messages : []);\r\n\r\n        MessageStore.setItems(result.messages);\r\n\r\n        if (sessionId !== this.sessionId) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            messages: this.concatMessages(messages, result)\r\n        });\r\n\r\n        const chats = new Map();\r\n        const users = new Map();\r\n        for (let i = 0; i < result.messages.length; i++) {\r\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\r\n            if (result.messages[i].sender_user_id) {\r\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\r\n            }\r\n        }\r\n\r\n        const store = FileStore.getStore();\r\n        loadChatsContent(store, [...chats.keys()]);\r\n        loadUsersContent(store, [...users.keys()]);\r\n    };\r\n\r\n    handleTopChatsScroll = event => {\r\n        event.stopPropagation();\r\n    };\r\n\r\n    handleClose = () => {\r\n        const { onClose } = this.props;\r\n\r\n        onClose();\r\n    };\r\n\r\n    render() {\r\n        const { classes, chatId } = this.props;\r\n        const { top, recentlyFound, local, global, messages } = this.state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n\r\n        const topChats =\r\n            top && top.chat_ids\r\n                ? top.chat_ids.map(x => (\r\n                      <TopChat key={x} chatId={x} onSelect={() => this.handleSelectMessage(x, null, false, false)} />\r\n                  ))\r\n                : [];\r\n\r\n        const recentlyFoundChats =\r\n            recentlyFound && recentlyFound.chat_ids\r\n                ? recentlyFound.chat_ids.map(x => (\r\n                      <RecentlyFoundChat\r\n                          key={x}\r\n                          chatId={x}\r\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\r\n                      />\r\n                  ))\r\n                : [];\r\n\r\n        const localChats = local\r\n            ? local.map(x => (\r\n                  <RecentlyFoundChat\r\n                      key={x}\r\n                      chatId={x}\r\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\r\n                  />\r\n              ))\r\n            : [];\r\n\r\n        const globalChats = global\r\n            ? global.map(x => (\r\n                  <FoundPublicChat key={x} chatId={x} onClick={() => this.handleSelectMessage(x, null, true, true)} />\r\n              ))\r\n            : [];\r\n\r\n        const globalMessages =\r\n            messages && messages.messages\r\n                ? messages.messages.map(x => (\r\n                      <FoundMessage\r\n                          key={`${x.chat_id}_${x.id}`}\r\n                          chatId={x.chat_id}\r\n                          messageId={x.id}\r\n                          chatSearch={Boolean(chatId)}\r\n                          onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\r\n                      />\r\n                  ))\r\n                : [];\r\n\r\n        let messagesCaption = 'No messages found';\r\n        if (messages && messages.total_count) {\r\n            messagesCaption = messages.total_count === 1 ? 'Found 1 message' : `Found ${messages.total_count} messages`;\r\n        }\r\n\r\n        return (\r\n            <div ref={this.listRef} className={classNames(classes.search, 'search')} onScroll={this.handleScroll}>\r\n                {chat && (\r\n                    <div className='search-chat'>\r\n                        <SearchCaption caption='Search messages in' />\r\n                        <div className='search-chat-wrapper'>\r\n                            <div className='search-chat-control'>\r\n                                <ChatControl chatId={chatId} showStatus={false} />\r\n                            </div>\r\n                            <IconButton\r\n                                className={classes.closeSearchIconButton}\r\n                                aria-label='Search'\r\n                                onMouseDown={this.handleClose}>\r\n                                <CloseIcon />\r\n                            </IconButton>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                {topChats.length > 0 && (\r\n                    <div className='search-top-chats'>\r\n                        <SearchCaption caption='People' />\r\n                        <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\r\n                            <div className='search-top-chats-placeholder' />\r\n                            {topChats}\r\n                            <div className='search-top-chats-placeholder' />\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                {recentlyFoundChats.length > 0 && (\r\n                    <div className='search-recently-found-chats'>\r\n                        <SearchCaption caption='Recent' command='Clear' onClick={this.handleClearRecentlyFound} />\r\n                        {recentlyFoundChats}\r\n                    </div>\r\n                )}\r\n                {localChats.length > 0 && (\r\n                    <div className='search-local-chats'>\r\n                        <SearchCaption caption='Chats and contacts' />\r\n                        {localChats}\r\n                    </div>\r\n                )}\r\n                {globalChats.length > 0 && (\r\n                    <div className='search-global-chats'>\r\n                        <SearchCaption caption='Global search' />\r\n                        {globalChats}\r\n                    </div>\r\n                )}\r\n                {messages && (\r\n                    <div className='search-global-chats'>\r\n                        <SearchCaption caption={messagesCaption} />\r\n                        {globalMessages}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSearch.propTypes = {\r\n    chatId: PropTypes.number,\r\n    text: PropTypes.string,\r\n    onSelectMessage: PropTypes.func.isRequired,\r\n    onClose: PropTypes.func.isRequired\r\n};\r\n\r\nconst enhance = compose(\r\n    withStyles(styles, { withTheme: true }),\r\n    withTranslation()\r\n);\r\n\r\nexport default enhance(Search);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport red from '@material-ui/core/colors/red';\r\nimport orange from '@material-ui/core/colors/orange';\r\nimport amber from '@material-ui/core/colors/amber';\r\nimport green from '@material-ui/core/colors/green';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport indigo from '@material-ui/core/colors/indigo';\r\nimport deepPurple from '@material-ui/core/colors/deepPurple';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\n\r\nconst styles = theme => ({\r\n    formControl: {\r\n        margin: theme.spacing.unit * 3\r\n    },\r\n    group: {\r\n        margin: `${theme.spacing.unit}px 0`\r\n    },\r\n    redRoot: {\r\n        color: red[600],\r\n        '&$checked': {\r\n            color: red[500]\r\n        }\r\n    },\r\n    orangeRoot: {\r\n        color: orange[600],\r\n        '&$checked': {\r\n            color: orange[500]\r\n        }\r\n    },\r\n    amberRoot: {\r\n        color: amber[600],\r\n        '&$checked': {\r\n            color: amber[500]\r\n        }\r\n    },\r\n    greenRoot: {\r\n        color: green[600],\r\n        '&$checked': {\r\n            color: green[500]\r\n        }\r\n    },\r\n    blueRoot: {\r\n        color: blue[600],\r\n        '&$checked': {\r\n            color: blue[500]\r\n        }\r\n    },\r\n    indigoRoot: {\r\n        color: indigo[600],\r\n        '&$checked': {\r\n            color: indigo[500]\r\n        }\r\n    },\r\n    deepPurpleRoot: {\r\n        color: deepPurple[600],\r\n        '&$checked': {\r\n            color: deepPurple[500]\r\n        }\r\n    },\r\n    checked: {}\r\n});\r\n\r\nclass ThemePicker extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            open: false,\r\n            type: this.props.theme.palette.type,\r\n            color: this.getColorString(this.props.theme.palette.primary.main)\r\n        };\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({ type: event.target.value });\r\n\r\n        ApplicationStore.emit('clientUpdateThemeChanging', {\r\n            type: event.target.value,\r\n            primary: this.getColor(this.state.color)\r\n        });\r\n    };\r\n\r\n    handleAccentChange = event => {\r\n        this.setState({ color: event.target.value });\r\n\r\n        ApplicationStore.emit('clientUpdateThemeChanging', {\r\n            type: this.state.type,\r\n            primary: this.getColor(event.target.value)\r\n        });\r\n    };\r\n\r\n    getColorString = value => {\r\n        switch (value) {\r\n            case red['500']:\r\n                return 'red';\r\n            case orange['500']:\r\n                return 'orange';\r\n            case amber['500']:\r\n                return 'amber';\r\n            case green['500']:\r\n                return 'green';\r\n            case blue['500']:\r\n                return 'blue';\r\n            case indigo['500']:\r\n                return 'indigo';\r\n            case deepPurple['500']:\r\n                return 'deepPurple';\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    getColor = value => {\r\n        switch (value) {\r\n            case 'red':\r\n                return red;\r\n            case 'orange':\r\n                return orange;\r\n            case 'amber':\r\n                return amber;\r\n            case 'green':\r\n                return green;\r\n            case 'blue':\r\n                return blue;\r\n            case 'indigo':\r\n                return indigo;\r\n            case 'deepPurple':\r\n                return deepPurple;\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    open = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { type, color } = this.state;\r\n\r\n        return (\r\n            <Dialog\r\n                transitionDuration={0}\r\n                open={this.state.open}\r\n                onClose={this.handleClose}\r\n                aria-labelledby='alert-dialog-title'\r\n                aria-describedby='alert-dialog-description'>\r\n                <DialogTitle id='alert-dialog-title'>Appearance</DialogTitle>\r\n                <DialogContent>\r\n                    <FormControl component='fieldset' className={classes.formControl}>\r\n                        <FormLabel focused component='legend'>\r\n                            Theme\r\n                        </FormLabel>\r\n                        <RadioGroup\r\n                            aria-label='theme'\r\n                            name='theme1'\r\n                            className={classes.group}\r\n                            value={type}\r\n                            onChange={this.handleChange}>\r\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\r\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n                    <FormControl component='fieldset' className={classes.formControl}>\r\n                        <FormLabel focused component='legend'>\r\n                            Accent\r\n                        </FormLabel>\r\n                        <RadioGroup\r\n                            aria-label='accent'\r\n                            name='accent1'\r\n                            className={classes.group}\r\n                            value={color}\r\n                            onChange={this.handleAccentChange}>\r\n                            <FormControlLabel\r\n                                value='red'\r\n                                control={\r\n                                    <Radio\r\n                                        classes={{\r\n                                            root: classes.redRoot,\r\n                                            checked: classes.checked\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label='Red'\r\n                            />\r\n                            <FormControlLabel\r\n                                value='orange'\r\n                                control={\r\n                                    <Radio\r\n                                        classes={{\r\n                                            root: classes.orangeRoot,\r\n                                            checked: classes.checked\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label='Orange'\r\n                            />\r\n                            <FormControlLabel\r\n                                value='amber'\r\n                                control={\r\n                                    <Radio\r\n                                        classes={{\r\n                                            root: classes.amberRoot,\r\n                                            checked: classes.checked\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label='Amber'\r\n                            />\r\n                            <FormControlLabel\r\n                                value='green'\r\n                                control={\r\n                                    <Radio\r\n                                        classes={{\r\n                                            root: classes.greenRoot,\r\n                                            checked: classes.checked\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label='Green'\r\n                            />\r\n                            <FormControlLabel\r\n                                value='blue'\r\n                                control={\r\n                                    <Radio\r\n                                        classes={{\r\n                                            root: classes.blueRoot,\r\n                                            checked: classes.checked\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label='Blue'\r\n                            />\r\n                            <FormControlLabel\r\n                                value='indigo'\r\n                                control={\r\n                                    <Radio\r\n                                        classes={{\r\n                                            root: classes.indigoRoot,\r\n                                            checked: classes.checked\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label='Indigo'\r\n                            />\r\n                            <FormControlLabel\r\n                                value='deepPurple'\r\n                                control={\r\n                                    <Radio\r\n                                        classes={{\r\n                                            root: classes.deepPurpleRoot,\r\n                                            checked: classes.checked\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label='Deep Purple'\r\n                            />\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n                </DialogContent>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nThemePicker.propTypes = {};\r\n\r\nexport default withStyles(styles, { withTheme: true })(ThemePicker);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from 'recompose';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport LocalizationStore from '../../Stores/LocalizationStore';\r\n\r\nconst styles = theme => ({\r\n    formControl: {\r\n        margin: theme.spacing.unit * 3\r\n    },\r\n    group: {\r\n        margin: `${theme.spacing.unit}px 0`\r\n    }\r\n});\r\n\r\nclass LanguagePicker extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { i18n } = props;\r\n        const language = i18n ? i18n.language : null;\r\n\r\n        this.state = {\r\n            open: false,\r\n            language: language || 'en'\r\n        };\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({ language: event.target.value });\r\n\r\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language: event.target.value });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    open = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    render() {\r\n        const { classes, t } = this.props;\r\n        const { open, language } = this.state;\r\n        const info = LocalizationStore.info || { language_packs: [] };\r\n\r\n        const languages = info.language_packs.map(x => (\r\n            <FormControlLabel\r\n                key={x.id}\r\n                value={x.id}\r\n                control={<Radio color='primary' />}\r\n                label={`${x.name}\\xa0(${x.native_name})`}\r\n            />\r\n        ));\r\n\r\n        return (\r\n            <Dialog\r\n                transitionDuration={0}\r\n                open={open}\r\n                onClose={this.handleClose}\r\n                aria-labelledby='language-dialog-title'\r\n                aria-describedby='language-dialog-description'>\r\n                <DialogTitle id='language-dialog-title'>{t('Language')}</DialogTitle>\r\n                <DialogContent>\r\n                    <FormControl component='fieldset'>\r\n                        <RadioGroup\r\n                            aria-label='language'\r\n                            name='language1'\r\n                            value={language}\r\n                            onChange={this.handleChange}>\r\n                            {languages}\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n                </DialogContent>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nLanguagePicker.propTypes = {};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withStyles(styles, { withTheme: true }),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(LanguagePicker);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose } from 'recompose';\r\nimport ThemePicker from './ThemePicker';\r\nimport LanguagePicker from './LanguagePicker';\r\nimport { update } from '../../registerServiceWorker';\r\nimport { isAuthorizationReady } from '../../Utils/Common';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\n\r\nconst styles = {\r\n    menuIconButton: {\r\n        margin: '8px -2px 8px 12px'\r\n    },\r\n    searchIconButton: {\r\n        margin: '8px 12px 8px 0'\r\n    }\r\n};\r\n\r\nconst menuAnchorOrigin = {\r\n    vertical: 'bottom',\r\n    horizontal: 'left'\r\n};\r\n\r\nclass MainMenuButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            authorizationState: ApplicationStore.getAuthorizationState(),\r\n            anchorEl: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n    }\r\n\r\n    onUpdateAuthorizationState = update => {\r\n        this.setState({ authorizationState: update.authorization_state });\r\n    };\r\n\r\n    handleMenuOpen = event => {\r\n        const { authorizationState } = this.state;\r\n        if (!isAuthorizationReady(authorizationState)) return;\r\n\r\n        this.setState({ anchorEl: event.currentTarget });\r\n    };\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleLogOut = () => {\r\n        this.handleMenuClose();\r\n\r\n        this.props.onLogOut();\r\n    };\r\n\r\n    handleCheckUpdates = async () => {\r\n        this.handleMenuClose();\r\n\r\n        await update();\r\n    };\r\n\r\n    handleAppearance = event => {\r\n        this.handleMenuClose();\r\n\r\n        this.themePicker.open();\r\n    };\r\n\r\n    handleLanguage = event => {\r\n        this.handleMenuClose();\r\n\r\n        this.languagePicker.open();\r\n    };\r\n\r\n    setRef = ref => {\r\n        console.log(this);\r\n        this.languagePicker = ref;\r\n    };\r\n\r\n    render() {\r\n        const { classes, t } = this.props;\r\n        const { anchorEl, authorizationState } = this.state;\r\n\r\n        const mainMenuControl = isAuthorizationReady(authorizationState) ? (\r\n            <>\r\n                <Menu\r\n                    id='main-menu'\r\n                    anchorEl={anchorEl}\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={this.handleMenuClose}\r\n                    getContentAnchorEl={null}\r\n                    disableAutoFocusItem\r\n                    disableRestoreFocus={true}\r\n                    anchorOrigin={menuAnchorOrigin}>\r\n                    <MenuItem onClick={this.handleCheckUpdates}>{t('UpdateTelegram')}</MenuItem>\r\n                    <MenuItem onClick={this.handleAppearance}>{t('Appearance')}</MenuItem>\r\n                    <MenuItem onClick={this.handleLanguage}>{t('Language')}</MenuItem>\r\n                    <MenuItem onClick={this.handleLogOut}>{t('LogOut')}</MenuItem>\r\n                </Menu>\r\n            </>\r\n        ) : null;\r\n\r\n        return (\r\n            <>\r\n                <IconButton\r\n                    aria-owns={anchorEl ? 'simple-menu' : null}\r\n                    aria-haspopup='true'\r\n                    className={classes.menuIconButton}\r\n                    aria-label='Menu'\r\n                    onClick={this.handleMenuOpen}>\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                {mainMenuControl}\r\n                <ThemePicker innerRef={ref => (this.themePicker = ref)} />\r\n                <LanguagePicker ref={ref => (this.languagePicker = ref)} />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst enhance = compose(\r\n    withTranslation(),\r\n    withStyles(styles, { withTheme: true })\r\n);\r\n\r\nexport default enhance(MainMenuButton);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose } from 'recompose';\r\nimport {\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    Button,\r\n    IconButton\r\n} from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\r\nimport MainMenuButton from './MainMenuButton';\r\nimport { debounce, isAuthorizationReady, throttle } from '../../Utils/Common';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport '../ColumnMiddle/Header.css';\r\n\r\nconst styles = {\r\n    headerIconButton: {\r\n        margin: '8px 12px 8px 0'\r\n    },\r\n    dialogText: {\r\n        whiteSpace: 'pre-wrap'\r\n    }\r\n};\r\n\r\nclass DialogsHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.searchInput = React.createRef();\r\n\r\n        this.state = {\r\n            authorizationState: ApplicationStore.getAuthorizationState(),\r\n            open: false\r\n        };\r\n\r\n        this.handleInput = debounce(this.handleInput, 250);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.openSearch && this.props.openSearch !== prevProps.openSearch) {\r\n            setTimeout(() => {\r\n                if (this.searchInput.current) {\r\n                    this.searchInput.current.focus();\r\n                }\r\n            }, 250);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n    }\r\n\r\n    onUpdateAuthorizationState = update => {\r\n        this.setState({ authorizationState: update.authorization_state });\r\n    };\r\n\r\n    handleLogOut = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    handleDone = () => {\r\n        this.handleClose();\r\n        TdLibController.logOut();\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    handleSearch = () => {\r\n        const { onSearch, openSearch } = this.props;\r\n        const { authorizationState } = this.state;\r\n        if (!isAuthorizationReady(authorizationState)) return;\r\n\r\n        onSearch(!openSearch);\r\n    };\r\n\r\n    handleKeyDown = event => {\r\n        if (event.keyCode === 13) {\r\n            event.preventDefault();\r\n        }\r\n    };\r\n\r\n    handleKeyUp = () => {\r\n        const innerText = this.searchInput.current.innerText;\r\n        const innerHTML = this.searchInput.current.innerHTML;\r\n\r\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\r\n            this.searchInput.current.innerHTML = '';\r\n        }\r\n\r\n        ApplicationStore.emit('clientUpdateSearchText', { text: innerText });\r\n    };\r\n\r\n    handlePaste = event => {\r\n        const plainText = event.clipboardData.getData('text/plain');\r\n        if (plainText) {\r\n            event.preventDefault();\r\n            document.execCommand('insertHTML', false, plainText);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { classes, onClick, openSearch, t } = this.props;\r\n        const { open } = this.state;\r\n\r\n        const confirmLogoutDialog = open ? (\r\n            <Dialog transitionDuration={0} open={open} onClose={this.handleClose} aria-labelledby='form-dialog-title'>\r\n                <DialogTitle id='form-dialog-title'>{t('AppName')}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText className={classes.dialogText}>{t('AreYouSureLogout')}</DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.handleClose} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={this.handleDone} color='primary'>\r\n                        {t('Ok')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        ) : null;\r\n\r\n        return (\r\n            <div className='header-master'>\r\n                {!openSearch ? (\r\n                    <>\r\n                        <MainMenuButton onLogOut={this.handleLogOut} />\r\n                        {confirmLogoutDialog}\r\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\r\n                            <span className='header-status-content'>{t('AppName')}</span>\r\n                        </div>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <div className='header-search-input grow'>\r\n                            <div\r\n                                id='header-search-inputbox'\r\n                                ref={this.searchInput}\r\n                                placeholder={t('Search')}\r\n                                key={Date()}\r\n                                contentEditable\r\n                                suppressContentEditableWarning\r\n                                onKeyDown={this.handleKeyDown}\r\n                                onKeyUp={this.handleKeyUp}\r\n                                onPaste={this.handlePaste}\r\n                            />\r\n                        </div>\r\n                    </>\r\n                )}\r\n                <IconButton\r\n                    className={classes.headerIconButton}\r\n                    aria-label={t('Search')}\r\n                    onMouseDown={this.handleSearch}>\r\n                    <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\r\n                </IconButton>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDialogsHeader.propTypes = {\r\n    openSearch: PropTypes.bool.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n    onSearch: PropTypes.func.isRequired,\r\n    onSearchTextChange: PropTypes.func.isRequired\r\n};\r\n\r\nconst enhance = compose(\r\n    withTranslation(),\r\n    withStyles(styles)\r\n);\r\n\r\nexport default enhance(DialogsHeader);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport {\r\n    getChatTypingString,\r\n    getChatDraft,\r\n    getLastMessageSenderName,\r\n    getLastMessageContent,\r\n    showChatDraft\r\n} from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport './DialogContentControl.css';\r\n\r\nclass DialogContentControl extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if (nextProps.chatId !== this.props.chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.t !== this.props.t) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\r\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\r\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\r\n        ChatStore.on('updateUserChatAction', this.onUpdate);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.removeListener('updateChatDraftMessage', this.onUpdate);\r\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdate);\r\n        ChatStore.removeListener('updateChatReadInbox', this.onUpdate);\r\n        ChatStore.removeListener('updateUserChatAction', this.onUpdate);\r\n    }\r\n\r\n    onClientUpdateClearHistory = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId === update.chatId) {\r\n            this.clearHistory = update.inProgress;\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onFastUpdatingComplete = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdate = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId !== update.chat_id) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n\r\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\r\n\r\n        let contentControl = null;\r\n        const typingString = getChatTypingString(chatId);\r\n        if (typingString) {\r\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\r\n        }\r\n\r\n        if (!contentControl) {\r\n            const draft = getChatDraft(chatId);\r\n            if (showChatDraft(chatId)) {\r\n                const text = draft.text || '\\u00A0';\r\n\r\n                contentControl = (\r\n                    <>\r\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\r\n                        {text}\r\n                    </>\r\n                );\r\n            }\r\n        }\r\n\r\n        if (!contentControl) {\r\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\r\n            const senderName = getLastMessageSenderName(chat);\r\n            contentControl = (\r\n                <>\r\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\r\n                    {content}\r\n                </>\r\n            );\r\n        }\r\n\r\n        return <div className='dialog-content'>{contentControl}</div>;\r\n    }\r\n}\r\n\r\nexport default withTranslation()(DialogContentControl);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport classNames from 'classnames';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport {\r\n    getChatUnreadCount,\r\n    getChatUnreadMentionCount,\r\n    getChatUnreadMessageIcon,\r\n    isChatMuted,\r\n    showChatDraft\r\n} from '../../Utils/Chat';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport './DialogBadgeControl.css';\r\n\r\nconst styles = theme => ({\r\n    dialogBadge: {\r\n        background: theme.palette.primary.main\r\n    },\r\n    dialogBadgeMuted: {\r\n        background: theme.palette.type === 'dark' ? theme.palette.text.disabled : '#d8d8d8'\r\n    }\r\n});\r\n\r\nclass DialogBadgeControl extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, theme } = this.props;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.theme !== theme) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\r\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\r\n        ChatStore.on('updateChatIsPinned', this.onUpdate);\r\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\r\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\r\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\r\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\r\n        ApplicationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.removeListener('updateChatDraftMessage', this.onUpdate);\r\n        ChatStore.removeListener('updateChatIsMarkedAsUnread', this.onUpdate);\r\n        ChatStore.removeListener('updateChatIsPinned', this.onUpdate);\r\n        ChatStore.removeListener('updateChatNotificationSettings', this.onUpdate);\r\n        ChatStore.removeListener('updateChatReadInbox', this.onUpdate);\r\n        ChatStore.removeListener('updateChatReadOutbox', this.onUpdate);\r\n        ChatStore.removeListener('updateChatUnreadMentionCount', this.onUpdate);\r\n        ApplicationStore.removeListener('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\r\n    }\r\n\r\n    onClientUpdateClearHistory = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId === update.chatId) {\r\n            this.clearHistory = update.inProgress;\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onFastUpdatingComplete = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdate = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (update.chat_id !== chatId) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateScopeNotificationSettings = update => {\r\n        const { chatId } = this.props;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        switch (update.scope['@type']) {\r\n            case 'notificationSettingsScopeGroupChats': {\r\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\r\n                    this.forceUpdate();\r\n                }\r\n                break;\r\n            }\r\n            case 'notificationSettingsScopePrivateChats': {\r\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\r\n                    this.forceUpdate();\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.clearHistory) return null;\r\n\r\n        const { classes, chatId } = this.props;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const unreadMessageIcon = getChatUnreadMessageIcon(chat);\r\n        const unreadCount = getChatUnreadCount(chat);\r\n        const unreadMentionCount = getChatUnreadMentionCount(chat);\r\n        const showUnreadCount = unreadCount > 1 || (unreadCount === 1 && unreadMentionCount < 1);\r\n        const showDraftChat = showChatDraft(chat.id);\r\n\r\n        return (\r\n            <>\r\n                {unreadMessageIcon && !showDraftChat && <i className='dialog-badge-unread' />}\r\n                {unreadMentionCount && (\r\n                    <div className={classNames('dialog-badge', classes.dialogBadge)}>\r\n                        <div className='dialog-badge-mention'>@</div>\r\n                    </div>\r\n                )}\r\n                {showUnreadCount ? (\r\n                    <div\r\n                        className={classNames(\r\n                            { [classes.dialogBadgeMuted]: isChatMuted(chat) },\r\n                            'dialog-badge',\r\n                            classes.dialogBadge\r\n                        )}>\r\n                        <span className='dialog-badge-text'>{unreadCount}</span>\r\n                    </div>\r\n                ) : chat.is_pinned && !unreadMessageIcon ? (\r\n                    <i className='dialog-badge-pinned' />\r\n                ) : null}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(DialogBadgeControl);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { getLastMessageDate } from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport './DialogMetaControl.css';\r\n\r\nclass DialogMetaControl extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if (nextProps.chatId !== this.props.chatId) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\r\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\r\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\r\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\r\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.removeListener('updateChatDraftMessage', this.onUpdate);\r\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdate);\r\n        ChatStore.removeListener('updateChatReadInbox', this.onUpdate);\r\n        ChatStore.removeListener('updateChatUnreadMentionCount', this.onUpdate);\r\n        ChatStore.removeListener('updateMessageMentionRead', this.onUpdate);\r\n    }\r\n\r\n    onClientUpdateClearHistory = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId === update.chatId) {\r\n            this.clearHistory = update.inProgress;\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onFastUpdatingComplete = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdate = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId !== update.chat_id) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    render() {\r\n        if (this.clearHistory) return null;\r\n\r\n        const { chatId } = this.props;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        const date = getLastMessageDate(chat);\r\n\r\n        return <>{date && <div className='dialog-meta-date'>{date}</div>}</>;\r\n    }\r\n}\r\nexport default DialogMetaControl;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport ChatTileControl from './ChatTileControl';\r\nimport DialogContentControl from './DialogContentControl';\r\nimport DialogBadgeControl from './DialogBadgeControl';\r\nimport DialogTitleControl from './DialogTitleControl';\r\nimport DialogMetaControl from './DialogMetaControl';\r\nimport { openChat } from '../../Actions/Client';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\nimport './DialogControl.css';\r\n\r\nconst styles = theme => ({\r\n    statusRoot: {\r\n        position: 'absolute',\r\n        right: 1,\r\n        bottom: 1,\r\n        zIndex: 1\r\n    },\r\n    statusIcon: {},\r\n    dialogActive: {\r\n        color: '#fff', //theme.palette.primary.contrastText,\r\n        backgroundColor: theme.palette.primary.main,\r\n        borderRadius: 8,\r\n        cursor: 'pointer',\r\n        margin: '0 12px',\r\n        '& $statusRoot': {\r\n            background: theme.palette.primary.main\r\n        }\r\n    },\r\n    dialog: {\r\n        borderRadius: 8,\r\n        cursor: 'pointer',\r\n        margin: '0 12px',\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.primary.main + '22',\r\n            '& $statusRoot': {\r\n                background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\r\n            },\r\n            '& $statusIcon': {\r\n                background: theme.palette.primary.main + '22'\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nclass DialogControl extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.dialog = React.createRef();\r\n\r\n        const chat = ChatStore.get(this.props.chatId);\r\n        this.state = {\r\n            chat: chat\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if (nextProps.chatId !== this.props.chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.theme !== this.props.theme) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.hidden !== this.props.hidden) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    onClientUpdateChatId = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    handleSelect = () => {\r\n        ApplicationStore.setPrevChatId(0);\r\n        ApplicationStore.setPrevMessageId(null);\r\n\r\n        openChat(this.props.chatId);\r\n    };\r\n\r\n    render() {\r\n        const { classes, chatId, showSavedMessages, hidden } = this.props;\r\n\r\n        if (hidden) return null;\r\n\r\n        const currentChatId = ApplicationStore.getChatId();\r\n        const isSelected = currentChatId === chatId;\r\n\r\n        return (\r\n            <div\r\n                ref={this.dialog}\r\n                className={classNames(\r\n                    isSelected ? classes.dialogActive : classes.dialog,\r\n                    isSelected ? 'dialog-active' : 'dialog'\r\n                )}\r\n                onMouseDown={this.handleSelect}>\r\n                <div className='dialog-wrapper'>\r\n                    <ChatTileControl\r\n                        chatId={chatId}\r\n                        showSavedMessages={showSavedMessages}\r\n                        showOnline\r\n                        classes={{ statusRoot: classes.statusRoot, statusIcon: classes.statusIcon }}\r\n                    />\r\n                    <div className='dialog-inner-wrapper'>\r\n                        <div className='tile-first-row'>\r\n                            <DialogTitleControl chatId={chatId} />\r\n                            <DialogMetaControl chatId={chatId} />\r\n                        </div>\r\n                        <div className='tile-second-row'>\r\n                            <DialogContentControl chatId={chatId} />\r\n                            <DialogBadgeControl chatId={chatId} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDialogControl.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    hidden: PropTypes.bool,\r\n    showSavedMessages: PropTypes.bool\r\n};\r\n\r\nDialogControl.defaultProps = {\r\n    hidden: false,\r\n    showSavedMessages: true\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(DialogControl);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport DialogControl from '../Tile/DialogControl';\r\nimport { CHAT_SLICE_LIMIT } from '../../Constants';\r\nimport { loadChatsContent } from '../../Utils/File';\r\nimport { itemsInView, orderCompare, throttle } from '../../Utils/Common';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './DialogsList.css';\r\n\r\nclass DialogsList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.hiddenChats = new Map();\r\n\r\n        this.listRef = React.createRef();\r\n\r\n        this.state = {\r\n            chats: [],\r\n            authorizationState: ApplicationStore.getAuthorizationState(),\r\n            connectionState: ApplicationStore.getConnectionState()\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if (nextState.chats !== this.state.chats) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getSnapshotBeforeUpdate(prevProps, prevState) {\r\n        const { current: list } = this.listRef;\r\n\r\n        return { scrollTop: list.scrollTop };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { current: list } = this.listRef;\r\n        const { scrollTop } = snapshot;\r\n\r\n        list.scrollTop = scrollTop;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadFirstSlice();\r\n\r\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n        // ApplicationStore.on('updateConnectionState', this.onUpdateConnectionState);\r\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\r\n        ChatStore.on('updateChatIsPinned', this.onUpdate);\r\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\r\n        ChatStore.on('updateChatOrder', this.onUpdateChatOrder);\r\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n        // ApplicationStore.removeListener('updateConnectionState', this.onUpdateConnectionState);\r\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.removeListener('updateChatDraftMessage', this.onUpdate);\r\n        ChatStore.removeListener('updateChatIsPinned', this.onUpdate);\r\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdate);\r\n        ChatStore.removeListener('updateChatOrder', this.onUpdateChatOrder);\r\n        ChatStore.removeListener('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\r\n    }\r\n\r\n    onClientUpdateLeaveChat = update => {\r\n        if (update.inProgress) {\r\n            this.hiddenChats.set(update.chatId, update.chatId);\r\n        } else {\r\n            this.hiddenChats.delete(update.chatId);\r\n        }\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateAuthorizationState = update => {\r\n        const { authorization_state } = update;\r\n\r\n        this.setState({ authorizationState: authorization_state }, () => this.loadFirstSlice());\r\n    };\r\n\r\n    onFastUpdatingComplete = update => {\r\n        this.onLoadNext(true);\r\n        // this.setState({ chats: [] }, () => this.onLoadNext(true));\r\n    };\r\n\r\n    onUpdateConnectionState = update => {\r\n        const newConnectionState = update.state;\r\n        const { connectionState } = this.state;\r\n\r\n        this.setState({ connectionState: newConnectionState });\r\n\r\n        const updatingCompleted =\r\n            connectionState &&\r\n            connectionState['@type'] === 'connectionStateUpdating' &&\r\n            newConnectionState['@type'] !== 'connectionStateUpdating';\r\n        if (!updatingCompleted) return;\r\n\r\n        const hasSkippedUpdates = ChatStore.skippedUpdates.length > 0;\r\n        if (!hasSkippedUpdates) return;\r\n\r\n        ChatStore.skippedUpdates = [];\r\n        this.setState({ chats: [] }, () => this.onLoadNext(true));\r\n    };\r\n\r\n    loadFirstSlice = async () => {\r\n        const { authorizationState } = this.state;\r\n        if (authorizationState && authorizationState['@type'] === 'authorizationStateReady') {\r\n            await FileStore.initDB(() => this.onLoadNext());\r\n        }\r\n    };\r\n\r\n    onUpdateChatOrder = update => {\r\n        // NOTE: updateChatOrder is primary used to delete chats with order=0\r\n        // In all other cases use updateChatLastMessage\r\n\r\n        if (update.order !== '0') return;\r\n        const chat = ChatStore.get(update.chat_id);\r\n        if (!chat) {\r\n            return;\r\n        }\r\n\r\n        // unselect deleted chat\r\n        if (update.chat_id === ApplicationStore.getChatId()) {\r\n            TdLibController.setChatId(0);\r\n            ApplicationStore.changeChatDetailsVisibility(false);\r\n        }\r\n\r\n        let chatIds = [];\r\n        for (let i = 0; i < this.state.chats.length; i++) {\r\n            let chat = ChatStore.get(this.state.chats[i]);\r\n            if (chat && chat.order !== '0') {\r\n                switch (chat.type['@type']) {\r\n                    case 'chatTypeBasicGroup': {\r\n                        const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\r\n                        if (basicGroup.status['@type'] !== 'chatMemberStatusLeft') {\r\n                            chatIds.push(chat.id);\r\n                        }\r\n                        break;\r\n                    }\r\n                    case 'chatTypePrivate': {\r\n                        chatIds.push(chat.id);\r\n                        break;\r\n                    }\r\n                    case 'chatTypeSecret': {\r\n                        chatIds.push(chat.id);\r\n                        break;\r\n                    }\r\n                    case 'chatTypeSupergroup': {\r\n                        const supergroup = SupergroupStore.get(chat.type.supergroup_id);\r\n                        if (supergroup.status['@type'] !== 'chatMemberStatusLeft') {\r\n                            chatIds.push(chat.id);\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        this.reorderChats(chatIds);\r\n    };\r\n\r\n    onUpdate = update => {\r\n        const { chat_id, order } = update;\r\n        if (order === '0') return;\r\n        const chat = ChatStore.get(chat_id);\r\n        if (!chat || chat.order === '0') {\r\n            return;\r\n        }\r\n\r\n        const { chats } = this.state;\r\n\r\n        let newChatIds = [];\r\n        if (chats.length > 0) {\r\n            const existingChat = chats.find(x => x === chat_id);\r\n            if (!existingChat) {\r\n                const minChatOrder = ChatStore.get(chats[chats.length - 1]).order;\r\n                if (orderCompare(minChatOrder, chat.order) === 1) {\r\n                    return;\r\n                }\r\n                newChatIds.push(chat.id);\r\n            }\r\n        }\r\n\r\n        // get last chat.order values\r\n        let chatIds = [];\r\n        for (let i = 0; i < chats.length; i++) {\r\n            let chat = ChatStore.get(chats[i]);\r\n            if (chat && chat.order !== '0') {\r\n                switch (chat.type['@type']) {\r\n                    case 'chatTypeBasicGroup': {\r\n                        const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\r\n                        if (basicGroup.status['@type'] !== 'chatMemberStatusLeft') {\r\n                            chatIds.push(chat.id);\r\n                        }\r\n                        break;\r\n                    }\r\n                    case 'chatTypePrivate': {\r\n                        chatIds.push(chat.id);\r\n                        break;\r\n                    }\r\n                    case 'chatTypeSecret': {\r\n                        chatIds.push(chat.id);\r\n                        break;\r\n                    }\r\n                    case 'chatTypeSupergroup': {\r\n                        const supergroup = SupergroupStore.get(chat.type.supergroup_id);\r\n                        if (supergroup.status['@type'] !== 'chatMemberStatusLeft') {\r\n                            chatIds.push(chat.id);\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        this.reorderChats(chatIds, newChatIds, () => {\r\n            this.loadChatContents(newChatIds);\r\n        });\r\n    };\r\n\r\n    reorderChats(chatIds, newChatIds = [], callback) {\r\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\r\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\r\n        });\r\n\r\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\r\n            return;\r\n        }\r\n\r\n        this.setState({ chats: orderedChatIds }, callback);\r\n    }\r\n\r\n    static isDifferentOrder(oldChatIds, newChatIds) {\r\n        if (oldChatIds.length === newChatIds.length) {\r\n            for (let i = 0; i < oldChatIds.length; i++) {\r\n                if (oldChatIds[i] !== newChatIds[i]) return true;\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    handleScroll = () => {\r\n        const list = this.listRef.current;\r\n\r\n        if (list && list.scrollTop + list.offsetHeight >= list.scrollHeight) {\r\n            this.onLoadNext();\r\n        }\r\n    };\r\n\r\n    onLoadNext = async (replace = false) => {\r\n        const { chats } = this.state;\r\n\r\n        if (this.loading) return;\r\n\r\n        let offsetOrder = '9223372036854775807'; // 2^63\r\n        let offsetChatId = 0;\r\n        if (!replace && chats && chats.length > 0) {\r\n            const chat = ChatStore.get(chats[chats.length - 1]);\r\n            if (chat) {\r\n                offsetOrder = chat.order;\r\n                offsetChatId = chat.id;\r\n            }\r\n        }\r\n\r\n        this.loading = true;\r\n        const result = await TdLibController.send({\r\n            '@type': 'getChats',\r\n            offset_chat_id: offsetChatId,\r\n            offset_order: offsetOrder,\r\n            limit: CHAT_SLICE_LIMIT\r\n        }).finally(() => {\r\n            this.loading = false;\r\n        });\r\n\r\n        //TODO: replace result with one-way data flow\r\n\r\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\r\n            result.chat_ids.shift();\r\n        }\r\n\r\n        if (replace) {\r\n            this.replaceChats(result.chat_ids, () => this.loadChatContents(result.chat_ids));\r\n        } else {\r\n            this.appendChats(result.chat_ids, () => this.loadChatContents(result.chat_ids));\r\n        }\r\n    };\r\n\r\n    loadChatContents(chats) {\r\n        const store = FileStore.getStore();\r\n        loadChatsContent(store, chats);\r\n    }\r\n\r\n    appendChats(chats, callback) {\r\n        if (chats.length === 0) return;\r\n\r\n        this.setState({ chats: this.state.chats.concat(chats) }, callback);\r\n    }\r\n\r\n    replaceChats(chats, callback) {\r\n        this.setState({ chats: chats }, callback);\r\n    }\r\n\r\n    scrollToTop() {\r\n        const list = this.listRef.current;\r\n        list.scrollTop = 0;\r\n    }\r\n\r\n    render() {\r\n        const { chats } = this.state;\r\n\r\n        const dialogs = chats.map(x => <DialogControl key={x} chatId={x} hidden={this.hiddenChats.has(x)} />);\r\n\r\n        /*<Scrollbars*/\r\n        /*ref={this.listRef}*/\r\n        /*onScroll={this.handleScroll}*/\r\n        /*autoHide*/\r\n        /*autoHideTimeout={500}*/\r\n        /*autoHideDuration={300}>*/\r\n        /*{chats}*/\r\n        /*</Scrollbars>*/\r\n\r\n        return (\r\n            <div ref={this.listRef} className='dialogs-list' onScroll={this.handleScroll}>\r\n                {dialogs}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DialogsList;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport Button from '@material-ui/core/Button';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\n\r\nconst styles = {\r\n    root: {\r\n        margin: 0,\r\n        padding: '24px',\r\n        width: '100%',\r\n        borderRadius: 0,\r\n        color: 'white',\r\n        maxHeight: '65px'\r\n    }\r\n};\r\n\r\nclass UpdatePanel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            newContentAvailable: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        ApplicationStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ApplicationStore.removeListener('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\r\n    }\r\n\r\n    onClientUpdateNewContentAvailable = () => {\r\n        this.setState({ newContentAvailable: true });\r\n    };\r\n\r\n    handleUpdate = () => {\r\n        if (this.handled) return;\r\n\r\n        this.handled = true;\r\n        setTimeout(() => {\r\n            window.location.reload();\r\n        }, 250);\r\n    };\r\n\r\n    render() {\r\n        const { newContentAvailable } = this.state;\r\n        const { classes } = this.props;\r\n\r\n        const content = newContentAvailable ? (\r\n            <Button variant='contained' color='primary' className={classes.root} onClick={this.handleUpdate}>\r\n                Update\r\n            </Button>\r\n        ) : null;\r\n\r\n        return <>{content}</>;\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(UpdatePanel);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport Search from './Search/Search';\r\nimport DialogsHeader from './DialogsHeader';\r\nimport DialogsList from './DialogsList';\r\nimport UpdatePanel from './UpdatePanel';\r\nimport { borderStyle } from '../Theme';\r\nimport { openChat } from '../../Actions/Client';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\nimport './Dialogs.css';\r\n\r\nconst styles = theme => ({\r\n    ...borderStyle(theme)\r\n});\r\n\r\nclass Dialogs extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.dialogsList = React.createRef();\r\n\r\n        this.state = {\r\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\r\n            openSearch: false,\r\n            searchChatId: 0,\r\n            searchText: null\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if (nextState.isChatDetailsVisible !== this.state.isChatDetailsVisible) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openSearch !== this.state.openSearch) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.searchChatId !== this.state.searchChatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.searchText !== this.state.searchText) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\r\n        ApplicationStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\r\n        ApplicationStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\r\n        ApplicationStore.removeListener('clientUpdateSearchChat', this.onClientUpdateSearchChat);\r\n        ApplicationStore.removeListener('clientUpdateThemeChange', this.onClientUpdateThemeChange);\r\n    }\r\n\r\n    onClientUpdateThemeChange = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onClientUpdateChatDetailsVisibility = update => {\r\n        this.setState({\r\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\r\n        });\r\n    };\r\n\r\n    onClientUpdateSearchChat = update => {\r\n        this.setState({\r\n            openSearch: true,\r\n            searchChatId: update.chatId,\r\n            searchText: null\r\n        });\r\n    };\r\n\r\n    handleHeaderClick = () => {\r\n        this.dialogsList.current.scrollToTop();\r\n    };\r\n\r\n    handleSearch = visible => {\r\n        this.setState({\r\n            openSearch: visible,\r\n            searchChatId: 0,\r\n            searchText: null\r\n        });\r\n    };\r\n\r\n    handleSelectMessage = (chatId, messageId, openSearch) => {\r\n        const { onSelectChat } = this.props;\r\n\r\n        openChat(chatId, messageId);\r\n\r\n        onSelectChat(chatId, messageId);\r\n\r\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\r\n        const searchText = openSearch ? this.state.searchText : null;\r\n\r\n        this.setState({\r\n            openSearch: openSearch,\r\n            searchChatId: searchChatId,\r\n            searchText: searchText\r\n        });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            openSearch: false,\r\n            searchChatId: 0,\r\n            searchText: null\r\n        });\r\n    };\r\n\r\n    handleSearchTextChange = text => {\r\n        this.setState({\r\n            searchText: text\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { isChatDetailsVisible, openSearch, searchChatId, searchText } = this.state;\r\n\r\n        return (\r\n            <div\r\n                className={classNames(classes.borderColor, 'dialogs', {\r\n                    'dialogs-third-column': isChatDetailsVisible\r\n                })}>\r\n                <DialogsHeader\r\n                    openSearch={openSearch}\r\n                    onClick={this.handleHeaderClick}\r\n                    onSearch={this.handleSearch}\r\n                    onSearchTextChange={this.handleSearchTextChange}\r\n                />\r\n                <div className='dialogs-content'>\r\n                    <DialogsList ref={this.dialogsList} />\r\n                    {openSearch && (\r\n                        <Search\r\n                            chatId={searchChatId}\r\n                            text={searchText}\r\n                            onSelectMessage={this.handleSelectMessage}\r\n                            onClose={this.handleClose}\r\n                        />\r\n                    )}\r\n                </div>\r\n                <UpdatePanel />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDialogs.propTypes = {\r\n    onSelectChat: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Dialogs);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport ChatInfo from '../ColumnRight/ChatInfo';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './ChatInfoDialog.css';\r\n\r\nconst styles = theme => ({\r\n    chatInfoRoot: {\r\n        width: 336\r\n    },\r\n    containerRoot: {\r\n        alignItems: 'start'\r\n    },\r\n    dialogRoot: {\r\n        color: theme.palette.text.primary,\r\n        zIndex: theme.zIndex.modal\r\n    },\r\n    paperRoot: {\r\n        width: 336\r\n    }\r\n});\r\n\r\nclass ChatInfoDialog extends React.Component {\r\n    state = {\r\n        chatId: ApplicationStore.dialogChatId\r\n    };\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId } = this.state;\r\n\r\n        return nextState.chatId !== chatId;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ApplicationStore.on('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ApplicationStore.removeListener('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\r\n    }\r\n\r\n    handleClientUpdateDialogChatId = update => {\r\n        const { chatId } = update;\r\n\r\n        this.setState({ chatId });\r\n    };\r\n\r\n    handleClose = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateDialogChatId',\r\n            chatId: 0\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { chatId } = this.state;\r\n        if (!chatId) return null;\r\n\r\n        return (\r\n            <Dialog\r\n                open\r\n                transitionDuration={0}\r\n                onClose={this.handleClose}\r\n                classes={{ root: classes.dialogRoot, container: classes.containerRoot, paper: classes.paperRoot }}>\r\n                <ChatInfo className={classes.chatInfoRoot} chatId={chatId} popup />\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nChatInfoDialog.propTypes = {};\r\n\r\nexport default withStyles(styles)(ChatInfoDialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { compose } from 'recompose';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox/';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport { borderStyle } from '../Theme';\r\nimport { canSendMessages, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './HeaderCommand.css';\r\n\r\nconst styles = theme => ({\r\n    buttonLeft: {\r\n        margin: '14px 0 14px 14px',\r\n        minWidth: '100px'\r\n    },\r\n    buttonRight: {\r\n        margin: '14px 14px 14px 0',\r\n        minWidth: '100px'\r\n    },\r\n    ...borderStyle(theme)\r\n});\r\n\r\nclass HeaderCommand extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            openDeleteDialog: false\r\n        };\r\n    }\r\n\r\n    handleCancel = () => {\r\n        TdLibController.clientUpdate({ '@type': 'clientUpdateClearSelection' });\r\n    };\r\n\r\n    handleDelete = () => {\r\n        let canBeDeletedForAllUsers = true;\r\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\r\n            const message = MessageStore.get(chatId, messageId);\r\n            if (!message) {\r\n                canBeDeletedForAllUsers = false;\r\n                break;\r\n            }\r\n            if (!message.can_be_deleted_for_all_users) {\r\n                canBeDeletedForAllUsers = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            openDeleteDialog: true,\r\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\r\n            revoke: canBeDeletedForAllUsers\r\n        });\r\n    };\r\n\r\n    handleDeleteContinue = () => {\r\n        const { revoke } = this.state;\r\n\r\n        let id;\r\n        const messageIds = [];\r\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\r\n            id = chatId;\r\n            messageIds.push(messageId);\r\n        }\r\n\r\n        this.handleCancel();\r\n\r\n        TdLibController.send({\r\n            '@type': 'deleteMessages',\r\n            chat_id: id,\r\n            message_ids: messageIds,\r\n            revoke: revoke\r\n        });\r\n    };\r\n\r\n    handleRevokeChange = () => {\r\n        this.setState({ revoke: !this.state.revoke });\r\n    };\r\n\r\n    handleCloseDelete = () => {\r\n        this.setState({ openDeleteDialog: false });\r\n    };\r\n\r\n    handleForward = () => {\r\n        let id;\r\n        const messageIds = [];\r\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\r\n            id = chatId;\r\n            messageIds.push(messageId);\r\n        }\r\n\r\n        this.handleCancel();\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateForward',\r\n            info: {\r\n                chatId: id,\r\n                messageIds: messageIds\r\n            }\r\n        });\r\n    };\r\n\r\n    handleReply = () => {\r\n        if (MessageStore.selectedItems.size !== 1) return;\r\n\r\n        const { chatId, messageId } = MessageStore.selectedItems.values().next().value;\r\n\r\n        this.handleCancel();\r\n\r\n        TdLibController.clientUpdate({ '@type': 'clientUpdateReply', chatId: chatId, messageId: messageId });\r\n    };\r\n\r\n    render() {\r\n        const { classes, t, count } = this.props;\r\n        const { openDeleteDialog, canBeDeletedForAllUsers, revoke } = this.state;\r\n\r\n        const chatId = ApplicationStore.getChatId();\r\n\r\n        let canBeDeleted = true;\r\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\r\n            const message = MessageStore.get(chatId, messageId);\r\n            if (!message) {\r\n                canBeDeleted = false;\r\n                break;\r\n            }\r\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\r\n                canBeDeleted = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        let canBeForwarded = true;\r\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\r\n            const message = MessageStore.get(chatId, messageId);\r\n            if (!message) {\r\n                canBeForwarded = false;\r\n                break;\r\n            }\r\n            if (!message.can_be_forwarded) {\r\n                canBeDeleted = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        const canBeReplied = count === 1 && canSendMessages(chatId);\r\n\r\n        return (\r\n            <>\r\n                <div className={classNames(classes.borderColor, 'header-command')}>\r\n                    {canBeForwarded && (\r\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleForward}>\r\n                            {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\r\n                        </Button>\r\n                    )}\r\n                    {canBeDeleted && (\r\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleDelete}>\r\n                            {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\r\n                        </Button>\r\n                    )}\r\n                    {canBeReplied && (\r\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleReply}>\r\n                            {t('Reply')}\r\n                        </Button>\r\n                    )}\r\n                    <div className='header-command-space' />\r\n                    <Button color='primary' className={classes.buttonRight} onClick={this.handleCancel}>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                </div>\r\n                <Dialog\r\n                    transitionDuration={0}\r\n                    open={openDeleteDialog}\r\n                    onClose={this.handleCloseDelete}\r\n                    aria-labelledby='delete-dialog-title'>\r\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            {count === 1\r\n                                ? 'Are you sure you want to delete 1 message?'\r\n                                : `Are you sure you want to delete ${count} messages?`}\r\n                        </DialogContentText>\r\n                        {canBeDeletedForAllUsers && (\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\r\n                                }\r\n                                label={\r\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\r\n                                }\r\n                            />\r\n                        )}\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleCloseDelete} color='primary'>\r\n                            Cancel\r\n                        </Button>\r\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\r\n                            Ok\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nHeaderCommand.propTypes = {\r\n    count: PropTypes.number\r\n};\r\n\r\nconst enhance = compose(\r\n    withStyles(styles, { withTheme: true }),\r\n    withTranslation()\r\n);\r\n\r\nexport default enhance(HeaderCommand);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose } from 'recompose';\r\nimport MainMenuButton from './MainMenuButton';\r\nimport HeaderCommand from './HeaderCommand';\r\nimport { getChatSubtitle, getChatTitle, isAccentChatSubtitle, isMeChat } from '../../Utils/Chat';\r\nimport { borderStyle } from '../Theme';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\nimport './Header.css';\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: '14px'\r\n    },\r\n    menuIconButton: {\r\n        margin: '8px -2px 8px 12px'\r\n    },\r\n    searchIconButton: {\r\n        margin: '8px 12px 8px 0'\r\n    },\r\n    messageSearchIconButton: {\r\n        margin: '8px 0 8px 12px'\r\n    },\r\n    moreIconButton: {\r\n        margin: '8px 12px 8px 0'\r\n    },\r\n    headerStatusAccentTitle: {\r\n        color: theme.palette.primary.dark + '!important'\r\n    },\r\n    ...borderStyle(theme)\r\n});\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            authorizationState: ApplicationStore.getAuthorizationState(),\r\n            connectionState: ApplicationStore.getConnectionState()\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if (nextState !== this.state) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.theme !== this.props.theme) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.t !== this.props.t) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ApplicationStore.on('updateConnectionState', this.onUpdateConnectionState);\r\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n\r\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\r\n\r\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\r\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\r\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\r\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\r\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\r\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\r\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\r\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ApplicationStore.removeListener('updateConnectionState', this.onUpdateConnectionState);\r\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\r\n\r\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\r\n\r\n        ChatStore.removeListener('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\r\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\r\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\r\n        ChatStore.removeListener('updateUserChatAction', this.onUpdateUserChatAction);\r\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\r\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\r\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\r\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\r\n    }\r\n\r\n    onUpdateChatOnlineMemberCount = update => {\r\n        const chat = ChatStore.get(ApplicationStore.getChatId());\r\n        if (!chat) return;\r\n        if (chat.id !== update.chat_id) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onClientUpdateMessageSelected = update => {\r\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\r\n    };\r\n\r\n    onClientUpdateChatId = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateConnectionState = update => {\r\n        this.setState({ connectionState: update.state });\r\n    };\r\n\r\n    onUpdateAuthorizationState = update => {\r\n        this.setState({ authorizationState: update.authorization_state });\r\n    };\r\n\r\n    onUpdateChatTitle = update => {\r\n        const chat = ChatStore.get(ApplicationStore.getChatId());\r\n        if (!chat) return;\r\n        if (chat.id !== update.chat_id) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateUserStatus = update => {\r\n        const chat = ChatStore.get(ApplicationStore.getChatId());\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        switch (chat.type['@type']) {\r\n            case 'chatTypeBasicGroup': {\r\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\r\n                if (fullInfo && fullInfo.members) {\r\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\r\n                    if (member) {\r\n                        this.forceUpdate();\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypePrivate': {\r\n                if (chat.type.user_id === update.user_id) {\r\n                    this.forceUpdate();\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypeSecret': {\r\n                if (chat.type.user_id === update.user_id) {\r\n                    this.forceUpdate();\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    onUpdateUserChatAction = update => {\r\n        const currentChatId = ApplicationStore.getChatId();\r\n\r\n        if (currentChatId === update.chat_id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onUpdateBasicGroup = update => {\r\n        const chat = ChatStore.get(ApplicationStore.getChatId());\r\n        if (!chat) return;\r\n\r\n        if (\r\n            chat.type &&\r\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\r\n            chat.type.basic_group_id === update.basic_group.id\r\n        ) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onUpdateSupergroup = update => {\r\n        const chat = ChatStore.get(ApplicationStore.getChatId());\r\n        if (!chat) return;\r\n\r\n        if (\r\n            chat.type &&\r\n            chat.type['@type'] === 'chatTypeSupergroup' &&\r\n            chat.type.supergroup_id === update.supergroup.id\r\n        ) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onUpdateBasicGroupFullInfo = update => {\r\n        const chat = ChatStore.get(ApplicationStore.getChatId());\r\n        if (!chat) return;\r\n\r\n        if (\r\n            chat.type &&\r\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\r\n            chat.type.basic_group_id === update.basic_group_id\r\n        ) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onUpdateSupergroupFullInfo = update => {\r\n        const chat = ChatStore.get(ApplicationStore.getChatId());\r\n        if (!chat) return;\r\n\r\n        if (\r\n            chat.type &&\r\n            chat.type['@type'] === 'chatTypeSupergroup' &&\r\n            chat.type.supergroup_id === update.supergroup_id\r\n        ) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onUpdateUserFullInfo = update => {\r\n        const chat = ChatStore.get(ApplicationStore.getChatId());\r\n        if (!chat) return;\r\n\r\n        if (\r\n            chat.type &&\r\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\r\n            chat.type.user_id === update.user_id\r\n        ) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    openChatDetails = () => {\r\n        const chatId = ApplicationStore.getChatId();\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        ApplicationStore.changeChatDetailsVisibility(true);\r\n    };\r\n\r\n    handleSearchChat = () => {\r\n        const chatId = ApplicationStore.getChatId();\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        ApplicationStore.searchChat(chatId);\r\n    };\r\n\r\n    localize = str => {\r\n        const { t } = this.props;\r\n\r\n        return t(str)\r\n            .replace('...', '')\r\n            .replace('…', '');\r\n    };\r\n\r\n    render() {\r\n        const { classes, t } = this.props;\r\n        const { authorizationState, connectionState, selectionCount } = this.state;\r\n\r\n        if (selectionCount) {\r\n            return <HeaderCommand count={selectionCount} />;\r\n        }\r\n\r\n        const chatId = ApplicationStore.getChatId();\r\n        const chat = ChatStore.get(chatId);\r\n\r\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\r\n        let title = getChatTitle(chatId, true, t);\r\n        let subtitle = getChatSubtitle(chatId, true);\r\n        let showProgressAnimation = false;\r\n\r\n        if (connectionState) {\r\n            switch (connectionState['@type']) {\r\n                case 'connectionStateConnecting':\r\n                    title = this.localize('Connecting');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n                case 'connectionStateConnectingToProxy':\r\n                    title = this.localize('Connecting to proxy');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n                case 'connectionStateReady':\r\n                    break;\r\n                case 'connectionStateUpdating':\r\n                    title = this.localize('Updating');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n                case 'connectionStateWaitingForNetwork':\r\n                    title = this.localize('Waiting for network');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n            }\r\n        } else if (authorizationState) {\r\n            switch (authorizationState['@type']) {\r\n                case 'authorizationStateClosed':\r\n                    break;\r\n                case ' authorizationStateClosing':\r\n                    break;\r\n                case 'authorizationStateLoggingOut':\r\n                    title = this.localize('Logging out');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n                case 'authorizationStateReady':\r\n                    break;\r\n                case 'authorizationStateWaitCode':\r\n                    break;\r\n                case 'authorizationStateWaitEncryptionKey':\r\n                    title = this.localize('Loading');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n                case 'authorizationStateWaitPassword':\r\n                    break;\r\n                case 'authorizationStateWaitPhoneNumber':\r\n                    break;\r\n                case 'authorizationStateWaitTdlibParameters':\r\n                    title = this.localize('Loading');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n            }\r\n        } else {\r\n            title = this.localize('Loading');\r\n            subtitle = '';\r\n            showProgressAnimation = true;\r\n        }\r\n\r\n        return (\r\n            <div className={classNames(classes.borderColor, 'header-details')}>\r\n                <div\r\n                    className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\r\n                    onClick={this.openChatDetails}>\r\n                    <span className='header-status-content'>{title}</span>\r\n                    {showProgressAnimation && (\r\n                        <>\r\n                            <span className='header-progress'>.</span>\r\n                            <span className='header-progress'>.</span>\r\n                            <span className='header-progress'>.</span>\r\n                        </>\r\n                    )}\r\n                    <span\r\n                        className={classNames('header-status-title', {\r\n                            [classes.headerStatusAccentTitle]: isAccentSubtitle\r\n                        })}>\r\n                        {subtitle}\r\n                    </span>\r\n                    <span className='header-status-tail' />\r\n                </div>\r\n                {chat && (\r\n                    <>\r\n                        <IconButton\r\n                            className={classes.messageSearchIconButton}\r\n                            aria-label='Search'\r\n                            onClick={this.handleSearchChat}>\r\n                            <SearchIcon />\r\n                        </IconButton>\r\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\r\n                    </>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst enhance = compose(\r\n    withTranslation(),\r\n    withStyles(styles, { withTheme: true })\r\n);\r\n\r\nexport default enhance(Header);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport classNames from 'classnames';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\r\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Slider from '@material-ui/lab/Slider';\r\nimport { borderStyle } from '../Theme';\r\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './VolumeButton.css';\r\n\r\nconst styles = theme => ({\r\n    iconButton: {\r\n        padding: 4\r\n    },\r\n    root: {\r\n        display: 'flex',\r\n        height: 100,\r\n        width: 28,\r\n        padding: '13px 0',\r\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\r\n    },\r\n    slider: {\r\n        padding: '0 13px'\r\n    },\r\n    thumb: {\r\n        opacity: 0\r\n    },\r\n    ...borderStyle(theme)\r\n});\r\n\r\nclass VolumeButton extends React.Component {\r\n    state = {\r\n        anchorEl: null,\r\n        value: PlayerStore.volume,\r\n        prevValue: PlayerStore.volume,\r\n        dragging: false,\r\n        buttonOver: false,\r\n        popupOver: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.removeListener('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\r\n    }\r\n\r\n    onClientUpdateMediaVolume = update => {\r\n        const { volume, prevVolume } = update;\r\n\r\n        if (prevVolume === undefined) {\r\n            this.setState({ value: volume });\r\n        } else {\r\n            this.setState({ value: volume, prevValue: prevVolume });\r\n        }\r\n    };\r\n\r\n    handlePopoverOpen = anchorEl => {\r\n        this.setState({ anchorEl: anchorEl });\r\n    };\r\n\r\n    handlePopoverClose = () => {\r\n        const { dragging, buttonOver, popupOver } = this.state;\r\n\r\n        if (dragging) return;\r\n        if (buttonOver) return;\r\n        if (popupOver) return;\r\n\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleMouseEnter = (event, openPopover) => {\r\n        this.setState({ buttonOver: true });\r\n\r\n        if (openPopover) {\r\n            this.handlePopoverOpen(event.currentTarget);\r\n        }\r\n    };\r\n\r\n    handleMouseLeave = () => {\r\n        this.setState({ buttonOver: false }, () => {\r\n            this.handlePopoverClose();\r\n        });\r\n    };\r\n\r\n    handlePopupMouseLeave = () => {\r\n        this.setState({ popupOver: false }, () => {\r\n            this.handlePopoverClose();\r\n        });\r\n    };\r\n\r\n    handleVoiceClick = () => {\r\n        const { value, prevValue } = this.state;\r\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaVolume',\r\n            volume: nextValue\r\n        });\r\n    };\r\n\r\n    handleChange = (event, value) => {\r\n        const { dragging, prevValue } = this.state;\r\n\r\n        if (dragging) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaVolume',\r\n                volume: value\r\n            });\r\n        } else {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaVolume',\r\n                prevVolume: value > 0 ? value : prevValue,\r\n                volume: value\r\n            });\r\n        }\r\n    };\r\n\r\n    handleDragStart = () => {\r\n        const { value } = this.state;\r\n\r\n        this.setState({\r\n            dragging: true,\r\n            prevValue: value\r\n        });\r\n    };\r\n\r\n    handleDragEnd = () => {\r\n        const { value, prevValue } = this.state;\r\n\r\n        this.setState(\r\n            {\r\n                dragging: false,\r\n                prevValue: value > 0 ? value : prevValue\r\n            },\r\n            () => {\r\n                this.handlePopoverClose();\r\n            }\r\n        );\r\n    };\r\n\r\n    getVolumeIcon = value => {\r\n        if (value === 0) {\r\n            return <VolumeOffIcon fontSize='small' />;\r\n        }\r\n\r\n        if (value < 0.25) {\r\n            return <VolumeMuteIcon fontSize='small' />;\r\n        }\r\n\r\n        if (value < 0.5) {\r\n            return <VolumeDownIcon fontSize='small' />;\r\n        }\r\n\r\n        return <VolumeUpIcon fontSize='small' />;\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { anchorEl, value } = this.state;\r\n        const open = Boolean(anchorEl);\r\n\r\n        return (\r\n            <div\r\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\r\n                onMouseLeave={this.handleMouseLeave}\r\n                style={{\r\n                    position: 'relative',\r\n                    background: 'transparent'\r\n                }}>\r\n                <IconButton className={classes.iconButton} color='primary' onClick={this.handleVoiceClick}>\r\n                    {this.getVolumeIcon(value)}\r\n                </IconButton>\r\n                <div\r\n                    style={{\r\n                        position: 'absolute',\r\n                        background: 'transparent',\r\n                        visibility: open ? 'visible' : 'hidden',\r\n                        zIndex: 1\r\n                    }}\r\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\r\n                    onMouseLeave={this.handlePopupMouseLeave}>\r\n                    <div\r\n                        className={classNames(classes.borderColor, classes.root)}\r\n                        style={{\r\n                            marginTop: 8,\r\n                            borderWidth: 1,\r\n                            borderStyle: 'solid'\r\n                        }}>\r\n                        <Slider\r\n                            classes={{ container: classes.slider, thumb: classes.thumb }}\r\n                            min={0}\r\n                            max={1}\r\n                            value={value}\r\n                            onChange={this.handleChange}\r\n                            onDragStart={this.handleDragStart}\r\n                            onDragEnd={this.handleDragEnd}\r\n                            vertical\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(VolumeButton);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport RepeatIcon from '@material-ui/icons/Repeat';\r\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\r\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\n\r\nconst styles = {\r\n    iconButton: {\r\n        padding: 4\r\n    }\r\n};\r\n\r\nclass RepeatButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { repeat } = PlayerStore;\r\n\r\n        this.state = {\r\n            repeat\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.removeListener('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\r\n    }\r\n\r\n    onClientUpdateMediaRepeat = update => {\r\n        const { repeat } = update;\r\n\r\n        this.setState({ repeat });\r\n    };\r\n\r\n    handleRepeat = () => {\r\n        const { repeat } = this.state;\r\n\r\n        let nextRepeat = repeat;\r\n        switch (repeat) {\r\n            case RepeatEnum.NONE: {\r\n                nextRepeat = RepeatEnum.REPEAT;\r\n                break;\r\n            }\r\n            case RepeatEnum.REPEAT: {\r\n                nextRepeat = RepeatEnum.REPEAT_ONE;\r\n                break;\r\n            }\r\n            case RepeatEnum.REPEAT_ONE: {\r\n                nextRepeat = RepeatEnum.NONE;\r\n                break;\r\n            }\r\n        }\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaRepeat',\r\n            repeat: nextRepeat\r\n        });\r\n    };\r\n\r\n    getIcon = repeat => {\r\n        switch (repeat) {\r\n            case RepeatEnum.NONE: {\r\n                return <RepeatIcon fontSize='small' />;\r\n            }\r\n            case RepeatEnum.REPEAT: {\r\n                return <RepeatIcon fontSize='small' />;\r\n            }\r\n            case RepeatEnum.REPEAT_ONE: {\r\n                return <RepeatOneIcon fontSize='small' />;\r\n            }\r\n            default: {\r\n                return <RepeatIcon fontSize='small' />;\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { repeat } = this.state;\r\n\r\n        return (\r\n            <IconButton\r\n                className={classes.iconButton}\r\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\r\n                onClick={this.handleRepeat}>\r\n                {this.getIcon(repeat)}\r\n            </IconButton>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(RepeatButton);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\n\r\nconst styles = {\r\n    iconButton: {\r\n        padding: 4\r\n    }\r\n};\r\n\r\nclass ShuffleButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { shuffle } = PlayerStore;\r\n\r\n        this.state = {\r\n            shuffle\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.removeListener('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\r\n    }\r\n\r\n    onClientUpdateMediaShuffle = update => {\r\n        const { shuffle } = update;\r\n\r\n        this.setState({ shuffle });\r\n    };\r\n\r\n    handleShuffle = () => {\r\n        const { shuffle } = this.state;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaShuffle',\r\n            shuffle: !shuffle\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { shuffle } = this.state;\r\n\r\n        return (\r\n            <IconButton\r\n                className={classes.iconButton}\r\n                color={!shuffle ? 'default' : 'primary'}\r\n                onClick={this.handleShuffle}>\r\n                <ShuffleIcon fontSize='small' />\r\n            </IconButton>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(ShuffleButton);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\r\n\r\nconst styles = {\r\n    iconButton: {\r\n        padding: 4\r\n    }\r\n};\r\nclass PlaybackRateButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { playbackRate } = PlayerStore;\r\n\r\n        this.state = {\r\n            playbackRate\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.removeListener('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\r\n    }\r\n\r\n    onClientUpdateMediaPlaybackRate = update => {\r\n        const { playbackRate } = update;\r\n\r\n        this.setState({ playbackRate });\r\n    };\r\n\r\n    handlePlaybackRate = () => {\r\n        const { playbackRate } = this.state;\r\n\r\n        const nextPlaybackRate =\r\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaPlaybackRate',\r\n            playbackRate: nextPlaybackRate\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { playbackRate } = this.state;\r\n\r\n        return (\r\n            <IconButton\r\n                className={classes.iconButton}\r\n                color={playbackRate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\r\n                onClick={this.handlePlaybackRate}>\r\n                <div className='header-player-playback-icon'>2X</div>\r\n            </IconButton>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(PlaybackRateButton);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { getDurationString } from '../../Utils/Common';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\n\r\nclass Time extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            currentTime: 0,\r\n            duration: 0,\r\n            timeString: this.getTimeString(0, 0)\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\r\n    }\r\n\r\n    onClientUpdateMediaTime = update => {\r\n        const { currentTime } = update;\r\n\r\n        this.setState({\r\n            currentTime: currentTime,\r\n            currentTimeString: getDurationString(Math.floor(currentTime || 0))\r\n        });\r\n    };\r\n\r\n    getTimeString = (currentTime, duration) => {\r\n        const type = 0;\r\n\r\n        const durationString = getDurationString(Math.floor(duration || 0));\r\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\r\n\r\n        //return type === 0 ? `${currentTimeString}/${durationString}` : `${durationString}`;\r\n\r\n        return currentTimeString;\r\n    };\r\n\r\n    render() {\r\n        const { currentTimeString } = this.state;\r\n\r\n        return <>{currentTimeString}</>;\r\n    }\r\n}\r\n\r\nexport default Time;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport classNames from 'classnames';\r\nimport { getMedia, openMedia } from '../../Utils/Message';\r\nimport { borderStyle } from '../Theme';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Playlist.css';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\r\n    },\r\n    ...borderStyle(theme)\r\n});\r\n\r\nclass Playlist extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.listRef = React.createRef();\r\n        this.itemRefMap = new Map();\r\n\r\n        const { message, playlist } = PlayerStore;\r\n\r\n        this.chatId = message ? message.chat_id : 0;\r\n        this.messageId = message ? message.id : 0;\r\n\r\n        this.state = {\r\n            open: false,\r\n            titleMouseOver: false,\r\n            playlistMouseOver: false,\r\n            playlist: playlist\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { open } = this.state;\r\n\r\n        if (!prevState.open && open) {\r\n            this.scrollToActive();\r\n        }\r\n    }\r\n\r\n    scrollToActive = () => {\r\n        const list = this.listRef.current;\r\n        if (!list) return;\r\n\r\n        const { messageId } = this;\r\n        if (!messageId) return;\r\n\r\n        const item = this.itemRefMap.get(messageId);\r\n        if (!item) return;\r\n\r\n        const node = ReactDOM.findDOMNode(item);\r\n        if (!node) return;\r\n\r\n        list.scrollTop = node.offsetTop - 15;\r\n    };\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\r\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\r\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.removeListener('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\r\n        PlayerStore.removeListener('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\r\n        PlayerStore.removeListener('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\r\n    }\r\n\r\n    onClientUpdateMediaTitleMouseOver = update => {\r\n        const { over } = update;\r\n\r\n        if (over) {\r\n            this.setState(\r\n                {\r\n                    playlistMouseOver: over\r\n                },\r\n                () => {\r\n                    this.tryOpen();\r\n                }\r\n            );\r\n        } else {\r\n            this.setState(\r\n                {\r\n                    playlistMouseOver: over\r\n                },\r\n                () => {\r\n                    this.tryClose();\r\n                }\r\n            );\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaActive = update => {\r\n        const { chatId, messageId } = update;\r\n\r\n        this.chatId = chatId;\r\n        this.messageId = messageId;\r\n    };\r\n\r\n    onClientUpdateMediaPlaylistLoading = update => {\r\n        const { chatId, messageId } = this;\r\n\r\n        if (update.chatId === chatId && update.messageId === messageId) {\r\n            this.setState({\r\n                playlist: null\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaPlaylist = update => {\r\n        const { chatId, messageId } = this;\r\n        const { playlist } = update;\r\n\r\n        if (chatId === playlist.chatId && messageId === playlist.messageId) {\r\n            this.setState({\r\n                playlist: playlist\r\n            });\r\n        }\r\n    };\r\n\r\n    tryOpen = () => {\r\n        clearTimeout(this.openTimeout);\r\n\r\n        this.openTimeout = setTimeout(() => {\r\n            const { titleMouseOver, playlistMouseOver } = this.state;\r\n            this.setState({\r\n                open: titleMouseOver || playlistMouseOver\r\n            });\r\n        }, 250);\r\n    };\r\n\r\n    tryClose = () => {\r\n        clearTimeout(this.timeout);\r\n\r\n        this.timeout = setTimeout(() => {\r\n            const { titleMouseOver, playlistMouseOver } = this.state;\r\n            this.setState({\r\n                open: titleMouseOver || playlistMouseOver\r\n            });\r\n        }, 250);\r\n    };\r\n\r\n    handleMouseEnter = () => {\r\n        this.setState({\r\n            playlistMouseOver: true,\r\n            open: true\r\n        });\r\n    };\r\n\r\n    handleMouseLeave = () => {\r\n        this.setState(\r\n            {\r\n                playlistMouseOver: false\r\n            },\r\n            () => {\r\n                this.tryClose();\r\n            }\r\n        );\r\n    };\r\n\r\n    handleScroll = () => {\r\n        const list = this.listRef.current;\r\n        if (!list) return;\r\n\r\n        if (list.scrollTop === 0) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaPlaylistNext'\r\n            });\r\n        } else if (list.scrollHeight === list.scrollTop + list.offsetHeight) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaPlaylistPrev'\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        const { open, playlist } = this.state;\r\n        if (!open) return null;\r\n        if (!playlist) return null;\r\n\r\n        const { messages } = playlist;\r\n        if (!messages) return null;\r\n        if (messages.length <= 1) return null;\r\n\r\n        this.itemRefMap.clear();\r\n\r\n        return (\r\n            <div className='playlist'>\r\n                <div className={classNames('playlist-wrapper', classes.root, classes.borderColor)}>\r\n                    <div\r\n                        ref={this.listRef}\r\n                        className='playlist-items'\r\n                        onMouseEnter={this.handleMouseEnter}\r\n                        onMouseLeave={this.handleMouseLeave}\r\n                        onScroll={this.handleScroll}>\r\n                        {playlist.messages\r\n                            .slice(0)\r\n                            .reverse()\r\n                            .map(x => (\r\n                                <div key={x.id} ref={el => this.itemRefMap.set(x.id, el)} className='playlist-item'>\r\n                                    {getMedia(x, () => openMedia(x.chat_id, x.id))}\r\n                                </div>\r\n                            ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Playlist);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport classNames from 'classnames';\r\nimport { compose } from 'recompose';\r\nimport { withTranslation } from 'react-i18next';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport VolumeButton from '../Player/VolumeButton';\r\nimport RepeatButton from '../Player/RepeatButton';\r\nimport ShuffleButton from '../Player/ShuffleButton';\r\nimport PlaybackRateButton from './PlaybackRateButton';\r\nimport Time from '../Player/Time';\r\nimport Playlist from '../Player/Playlist';\r\nimport { borderStyle } from '../Theme';\r\nimport { getSrc } from '../../Utils/File';\r\nimport { openChat } from '../../Actions/Client';\r\nimport { getDurationString } from '../../Utils/Common';\r\nimport { getDate, getDateHint, getMediaTitle, hasAudio } from '../../Utils/Message';\r\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL, PLAYER_STARTTIME } from '../../Constants';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './HeaderPlayer.css';\r\n\r\nconst styles = theme => ({\r\n    iconButton: {\r\n        padding: 4\r\n    },\r\n    ...borderStyle(theme)\r\n});\r\n\r\nclass HeaderPlayer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.videoRef = React.createRef();\r\n\r\n        const { message, playlist } = PlayerStore;\r\n\r\n        this.startTime = PLAYER_STARTTIME;\r\n\r\n        this.state = {\r\n            currentTime: 0,\r\n            currentTimeString: getDurationString(0),\r\n            message: message,\r\n            playlist: playlist,\r\n            playing: false,\r\n            src: this.getMediaSrc(message)\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { theme } = this.props;\r\n        const { message, playlist, src, playing } = this.state;\r\n\r\n        if (nextProps.theme !== theme) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.message !== message) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.playlist !== playlist) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.src !== src) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.playing !== playing) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\r\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\r\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\r\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\r\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\r\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\r\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\r\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\r\n\r\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.removeListener('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.removeListener('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.removeListener('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\r\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.removeListener('clientUpdateMediaClose', this.onClientUpdateMediaClose);\r\n        PlayerStore.removeListener('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\r\n        PlayerStore.removeListener('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\r\n        PlayerStore.removeListener('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\r\n        PlayerStore.removeListener('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\r\n        PlayerStore.removeListener('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\r\n        PlayerStore.removeListener('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\r\n\r\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n    }\r\n\r\n    onClientUpdateMediaPlaybackRate = update => {\r\n        const { playbackRate } = update;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        player.playbackRate = playbackRate;\r\n    };\r\n\r\n    onClientUpdateMediaVolume = update => {\r\n        const { volume } = update;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        player.volume = volume;\r\n    };\r\n\r\n    onClientUpdateMediaViewerContent = update => {\r\n        this.playingMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\r\n    };\r\n\r\n    onClientUpdateMediaViewerEnded = update => {\r\n        this.playingMediaViewer = false;\r\n    };\r\n\r\n    onClientUpdateMediaViewerPause = update => {\r\n        this.playingMediaViewer = false;\r\n    };\r\n\r\n    onClientUpdateMediaViewerPlay = update => {\r\n        this.playingMediaViewer = true;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        player.pause();\r\n    };\r\n\r\n    startPlayingFile = (file, message) => {\r\n        const { chat_id, id } = message;\r\n\r\n        this.setState(\r\n            {\r\n                src: this.getMediaSrc(message)\r\n            },\r\n            () => {\r\n                const player = this.videoRef.current;\r\n                if (player) {\r\n                    if (this.playingMediaViewer) {\r\n                        player.pause();\r\n\r\n                        TdLibController.clientUpdate({\r\n                            '@type': 'clientUpdateMediaPause',\r\n                            chatId: chat_id,\r\n                            messageId: id\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        );\r\n    };\r\n\r\n    onClientUpdateMediaBlob = update => {\r\n        const { chatId, messageId } = update;\r\n        const { message } = this.state;\r\n\r\n        if (!message) return;\r\n\r\n        const { chat_id, id, content } = message;\r\n        if (!content) return;\r\n        if (chatId !== chat_id || messageId !== id) return;\r\n\r\n        switch (content['@type']) {\r\n            case 'messageText': {\r\n                const { web_page } = content;\r\n                if (web_page) {\r\n                    const { audio, voice_note, video_note } = web_page;\r\n\r\n                    if (audio) {\r\n                        const file = audio.audio;\r\n                        if (file) {\r\n                            this.startPlayingFile(file, message);\r\n                        }\r\n                    }\r\n\r\n                    if (voice_note) {\r\n                        const { voice } = voice_note;\r\n                        if (voice) {\r\n                            this.startPlayingFile(voice, message);\r\n                        }\r\n                    }\r\n\r\n                    if (video_note) {\r\n                        const { video } = video_note;\r\n                        if (video) {\r\n                            this.startPlayingFile(video, message);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'messageAudio': {\r\n                const { audio } = content;\r\n                if (audio) {\r\n                    const file = audio.audio;\r\n                    if (file) {\r\n                        this.startPlayingFile(file, message);\r\n                    }\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'messageVoiceNote': {\r\n                const { voice_note } = content;\r\n                if (voice_note) {\r\n                    const { voice } = voice_note;\r\n                    if (voice) {\r\n                        this.startPlayingFile(voice, message);\r\n                    }\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'messageVideoNote': {\r\n                const { video_note } = content;\r\n                if (video_note) {\r\n                    const { video } = video_note;\r\n                    if (video) {\r\n                        this.startPlayingFile(video, message);\r\n                    }\r\n                }\r\n\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaPlaylist = update => {\r\n        const { playlist } = update;\r\n        const { chatId, messageId } = playlist;\r\n        const { message } = this.state;\r\n\r\n        if (message && message.chat_id === chatId && message.id === messageId) {\r\n            this.setState({ playlist: playlist });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaClose = update => {\r\n        this.setState({\r\n            message: null,\r\n            playlist: null,\r\n            playing: false,\r\n            src: null\r\n        });\r\n    };\r\n\r\n    onClientUpdateMediaActive = update => {\r\n        const { chatId, messageId } = update;\r\n        const { message, src } = this.state;\r\n\r\n        if (message && message.chat_id === chatId && message.id === messageId) {\r\n            if (src) {\r\n                const player = this.videoRef.current;\r\n                if (player) {\r\n                    if (player.paused) {\r\n                        player.play();\r\n                    } else {\r\n                        player.pause();\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            const src = this.getMediaSrc(PlayerStore.message);\r\n            const playing = Boolean(src);\r\n            const playlist = PlayerStore.playlist;\r\n            this.setState(\r\n                {\r\n                    message: PlayerStore.message,\r\n                    playlist: PlayerStore.playlist,\r\n                    playing: playing,\r\n                    src: src\r\n                },\r\n                () => {\r\n                    const player = this.videoRef.current;\r\n                    if (player) {\r\n                        player.currentTime = this.startTime;\r\n                        if (this.playingMediaViewer) {\r\n                            player.pause();\r\n\r\n                            //this.handleVideoPause();\r\n                        }\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    };\r\n\r\n    handlePrev = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaPrev'\r\n        });\r\n    };\r\n\r\n    handlePlay = () => {\r\n        const { message } = this.state;\r\n        if (!message) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaActive',\r\n            chatId: message.chat_id,\r\n            messageId: message.id\r\n        });\r\n    };\r\n\r\n    handleNext = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaNext'\r\n        });\r\n    };\r\n\r\n    getMediaSrc = message => {\r\n        if (message) {\r\n            const { content } = message;\r\n            if (content) {\r\n                const { audio, voice_note, video_note, web_page } = content;\r\n\r\n                if (audio) {\r\n                    const file = audio.audio;\r\n                    if (file) {\r\n                        return getSrc(file);\r\n                    }\r\n                }\r\n\r\n                if (voice_note) {\r\n                    const { voice } = voice_note;\r\n                    if (voice) {\r\n                        return getSrc(voice);\r\n                    }\r\n                }\r\n\r\n                if (video_note) {\r\n                    const { video } = video_note;\r\n                    if (video) {\r\n                        return getSrc(video);\r\n                    }\r\n                }\r\n\r\n                if (web_page) {\r\n                    if (web_page.audio) {\r\n                        const file = web_page.audio.audio;\r\n                        if (file) {\r\n                            return getSrc(file);\r\n                        }\r\n                    }\r\n\r\n                    if (web_page.voice_note) {\r\n                        const { voice } = web_page.voice_note;\r\n                        if (voice) {\r\n                            return getSrc(voice);\r\n                        }\r\n                    }\r\n\r\n                    if (web_page.video_note) {\r\n                        const { video } = web_page.video_note;\r\n                        if (video) {\r\n                            return getSrc(video);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return '';\r\n    };\r\n\r\n    handleEnded = (moveNext = true) => {\r\n        const { message } = this.state;\r\n        if (!message) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaEnding',\r\n            chatId: message.chat_id,\r\n            messageId: message.id,\r\n            moveNext: moveNext\r\n        });\r\n\r\n        this.setState(\r\n            {\r\n                //playing: false,\r\n                //message: null,\r\n                //src: null\r\n            },\r\n            () => {\r\n                TdLibController.clientUpdate({\r\n                    '@type': 'clientUpdateMediaEnd',\r\n                    chatId: message.chat_id,\r\n                    messageId: message.id,\r\n                    moveNext: moveNext\r\n                });\r\n            }\r\n        );\r\n    };\r\n\r\n    handleVideoEnded = () => {\r\n        this.handleEnded(true);\r\n    };\r\n\r\n    handleClose = () => {\r\n        const player = this.videoRef.current;\r\n        if (player) {\r\n            player.pause();\r\n        }\r\n\r\n        this.handleEnded(false);\r\n    };\r\n\r\n    handleTimeUpdate = () => {\r\n        const { message } = this.state;\r\n        if (!message) return;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        this.setState({\r\n            currentTime: player.currentTime,\r\n            currentTimeString: getDurationString(Math.floor(player.currentTime || 0))\r\n        });\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaTime',\r\n            chatId: message.chat_id,\r\n            messageId: message.id,\r\n            duration: player.duration,\r\n            currentTime: player.currentTime,\r\n            timestamp: Date.now()\r\n        });\r\n    };\r\n\r\n    handleCanPlay = () => {\r\n        const { message } = this.state;\r\n        if (!message) return;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        const { playbackRate, volume } = PlayerStore;\r\n\r\n        const { chat_id, id } = message;\r\n        const audio = hasAudio(chat_id, id);\r\n\r\n        player.playbackRate = audio ? PLAYER_PLAYBACKRATE_NORMAL : playbackRate;\r\n        player.volume = volume;\r\n        player.muted = false;\r\n\r\n        if (audio) {\r\n            return;\r\n        }\r\n\r\n        let stream = null;\r\n        if ('captureStream' in player) {\r\n            stream = player.captureStream();\r\n        } else if ('mozCaptureStream' in player) {\r\n            stream = player.mozCaptureStream();\r\n        }\r\n\r\n        if (!stream) {\r\n            return;\r\n        }\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaCaptureStream',\r\n            chatId: message.chat_id,\r\n            messageId: message.id,\r\n            stream: stream\r\n        });\r\n    };\r\n\r\n    handleVideoPlay = () => {\r\n        const { message } = this.state;\r\n        if (!message) return;\r\n\r\n        this.setState({\r\n            playing: true\r\n        });\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaPlay',\r\n            chatId: message.chat_id,\r\n            messageId: message.id,\r\n            currentTime: player.currentTime,\r\n            duration: player.duration,\r\n            timestamp: Date.now()\r\n        });\r\n    };\r\n\r\n    handleVideoPause = () => {\r\n        const { message } = this.state;\r\n        if (!message) return;\r\n\r\n        this.setState({\r\n            playing: false\r\n        });\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaPause',\r\n            chatId: message.chat_id,\r\n            messageId: message.id\r\n        });\r\n    };\r\n\r\n    handlePlaybackRate = () => {\r\n        const { playbackRate } = this.state;\r\n\r\n        const nextPlaybackRate =\r\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\r\n\r\n        this.setState(\r\n            {\r\n                playbackRate: nextPlaybackRate\r\n            },\r\n            () => {\r\n                const player = this.videoRef.current;\r\n                if (!player) return;\r\n\r\n                player.playbackRate = nextPlaybackRate;\r\n            }\r\n        );\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaPlaybackRate',\r\n            playbackRate: nextPlaybackRate\r\n        });\r\n    };\r\n\r\n    hasPrev = (message, playlist) => {\r\n        if (!message) return false;\r\n        if (!playlist || !playlist.messages.length) return false;\r\n\r\n        const { chat_id, id } = message;\r\n\r\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\r\n        if (index === -1) return false;\r\n\r\n        return index + 1 < playlist.messages.length;\r\n    };\r\n\r\n    hasNext = (message, playlist) => {\r\n        if (!message) return false;\r\n        if (!playlist || !playlist.messages.length) return false;\r\n\r\n        const { chat_id, id } = message;\r\n\r\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\r\n        if (index === -1) return false;\r\n\r\n        return index - 1 >= 0;\r\n    };\r\n\r\n    handleTitleMouseEnter = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaTitleMouseOver',\r\n            over: true\r\n        });\r\n    };\r\n\r\n    handleTitleMouseLeave = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaTitleMouseOver',\r\n            over: false\r\n        });\r\n    };\r\n\r\n    handleTitleClick = () => {\r\n        const { message } = this.state;\r\n        if (!message) return;\r\n\r\n        openChat(message.chat_id, message.id);\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { playing, message, playlist, src } = this.state;\r\n\r\n        let audio = false;\r\n        if (message) {\r\n            const { chat_id, id } = message;\r\n            audio = hasAudio(chat_id, id);\r\n        }\r\n\r\n        const title = getMediaTitle(message);\r\n        const dateHint = getDateHint(message);\r\n        const date = getDate(message);\r\n        const showDate = !audio;\r\n        const showPlaybackRate = !audio;\r\n        const showRepeat = audio;\r\n        const showShuffle = audio;\r\n        const hasPrev = this.hasPrev(message, playlist);\r\n        const hasNext = this.hasNext(message, playlist);\r\n\r\n        return (\r\n            <>\r\n                <video\r\n                    className='header-player-video'\r\n                    ref={this.videoRef}\r\n                    src={src}\r\n                    autoPlay={true}\r\n                    controls={false}\r\n                    width={44}\r\n                    height={44}\r\n                    onCanPlay={this.handleCanPlay}\r\n                    onPlay={this.handleVideoPlay}\r\n                    onPause={this.handleVideoPause}\r\n                    onTimeUpdate={this.handleTimeUpdate}\r\n                    onEnded={this.handleVideoEnded}\r\n                />\r\n                {message && (\r\n                    <div className={classNames(classes.borderColor, 'header-player')}>\r\n                        <IconButton\r\n                            disabled={!hasPrev}\r\n                            className={classes.iconButton}\r\n                            color='primary'\r\n                            onClick={this.handlePrev}>\r\n                            <SkipPreviousIcon fontSize='small' />\r\n                        </IconButton>\r\n                        <IconButton\r\n                            className={classes.iconButton}\r\n                            color='primary'\r\n                            disabled={!src}\r\n                            onClick={this.handlePlay}>\r\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\r\n                        </IconButton>\r\n                        <IconButton\r\n                            disabled={!hasNext}\r\n                            className={classes.iconButton}\r\n                            color='primary'\r\n                            onClick={this.handleNext}>\r\n                            <SkipNextIcon fontSize='small' />\r\n                        </IconButton>\r\n                        <Playlist />\r\n                        <div\r\n                            className='header-player-content'\r\n                            onMouseEnter={this.handleTitleMouseEnter}\r\n                            onMouseLeave={this.handleTitleMouseLeave}\r\n                            onClick={this.handleTitleClick}>\r\n                            <div className='header-player-title'>\r\n                                {title}\r\n                                {showDate && (\r\n                                    <span title={dateHint}>\r\n                                        &nbsp;\r\n                                        {date}\r\n                                    </span>\r\n                                )}\r\n                            </div>\r\n                            &nbsp;\r\n                            <Time />\r\n                        </div>\r\n                        <VolumeButton />\r\n                        {showPlaybackRate && <PlaybackRateButton />}\r\n                        {showRepeat && <RepeatButton />}\r\n                        {showShuffle && <ShuffleButton />}\r\n                        <IconButton className={classes.iconButton} onClick={this.handleClose}>\r\n                            <CloseIcon fontSize='small' />\r\n                        </IconButton>\r\n                    </div>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst enhance = compose(\r\n    withTranslation(),\r\n    withStyles(styles, { withTheme: true })\r\n);\r\n\r\nexport default enhance(HeaderPlayer);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './FilesDropTarget.css';\r\n\r\nclass FilesDropTarget extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            dragging: ApplicationStore.getDragging()\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        ApplicationStore.on('clientUpdateDragging', this.onClientUpdateDragging);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ApplicationStore.removeListener('clientUpdateDragging', this.onClientUpdateDragging);\r\n    }\r\n\r\n    onClientUpdateDragging = update => {\r\n        this.setState({ dragging: ApplicationStore.getDragging() });\r\n    };\r\n\r\n    handleDragEnter = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    };\r\n\r\n    handleDrop = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        ApplicationStore.setDragging(false);\r\n\r\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\r\n    };\r\n\r\n    handleDragLeave = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        ApplicationStore.setDragging(false);\r\n    };\r\n\r\n    handleAttachDocumentComplete = files => {\r\n        if (files.length === 0) return;\r\n\r\n        for (let i = 0; i < files.length; i++) {\r\n            let file = files[i];\r\n            const content = {\r\n                '@type': 'inputMessageDocument',\r\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\r\n            };\r\n\r\n            this.onSendInternal(content, result => FileStore.uploadFile(result.content.document.document.id, result));\r\n        }\r\n    };\r\n\r\n    onSendInternal = async (content, callback) => {\r\n        const currentChatId = ApplicationStore.getChatId();\r\n\r\n        if (!currentChatId) return;\r\n        if (!content) return;\r\n\r\n        try {\r\n            ApplicationStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${currentChatId}`);\r\n\r\n            let result = await TdLibController.send({\r\n                '@type': 'sendMessage',\r\n                chat_id: currentChatId,\r\n                reply_to_message_id: 0,\r\n                input_message_content: content\r\n            });\r\n\r\n            //MessageStore.set(result);\r\n\r\n            TdLibController.send({\r\n                '@type': 'viewMessages',\r\n                chat_id: currentChatId,\r\n                message_ids: [result.id]\r\n            });\r\n\r\n            callback(result);\r\n        } catch (error) {\r\n            alert('sendMessage error ' + JSON.stringify(error));\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { dragging } = this.state;\r\n\r\n        return (\r\n            <>\r\n                {dragging && (\r\n                    <div\r\n                        className='files-drop-target'\r\n                        onDragEnter={this.handleDragEnter}\r\n                        onDragLeave={this.handleDragLeave}\r\n                        onDrop={this.handleDrop}>\r\n                        <div className='files-drop-target-wrapper'>\r\n                            <div className='files-drop-target-text'>\r\n                                <div className='files-drop-target-title'>Drop files here</div>\r\n                                <div className='files-drop-target-subtitle'>to send them without compression</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nFilesDropTarget.propTypes = {};\r\n\r\nexport default FilesDropTarget;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { compose } from 'recompose';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\r\nimport { openUser, openChat } from '../../Actions/Client';\r\nimport './Forward.css';\r\n\r\nfunction arrowGenerator(color) {\r\n    return {\r\n        '&[x-placement*=\"bottom\"] $arrow': {\r\n            top: 0,\r\n            left: 0,\r\n            marginTop: '-0.95em',\r\n            width: '3em',\r\n            height: '1em',\r\n            '&::before': {\r\n                borderWidth: '0 1em 1em 1em',\r\n                borderColor: `transparent transparent ${color} transparent`\r\n            }\r\n        },\r\n        '&[x-placement*=\"top\"] $arrow': {\r\n            bottom: 0,\r\n            left: 0,\r\n            marginBottom: '-0.95em',\r\n            width: '3em',\r\n            height: '1em',\r\n            '&::before': {\r\n                borderWidth: '1em 1em 0 1em',\r\n                borderColor: `${color} transparent transparent transparent`\r\n            }\r\n        },\r\n        '&[x-placement*=\"right\"] $arrow': {\r\n            left: 0,\r\n            marginLeft: '-0.95em',\r\n            height: '3em',\r\n            width: '1em',\r\n            '&::before': {\r\n                borderWidth: '1em 1em 1em 0',\r\n                borderColor: `transparent ${color} transparent transparent`\r\n            }\r\n        },\r\n        '&[x-placement*=\"left\"] $arrow': {\r\n            right: 0,\r\n            marginRight: '-0.95em',\r\n            height: '3em',\r\n            width: '1em',\r\n            '&::before': {\r\n                borderWidth: '1em 0 1em 1em',\r\n                borderColor: `transparent transparent transparent ${color}`\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\nconst styles = theme => ({\r\n    forwardColor: {\r\n        color: theme.palette.primary.main\r\n    },\r\n    arrowPopper: arrowGenerator(theme.palette.grey[700]),\r\n    arrow: {\r\n        position: 'absolute',\r\n        fontSize: 6,\r\n        width: '3em',\r\n        height: '3em',\r\n        '&::before': {\r\n            content: '\"\"',\r\n            margin: 'auto',\r\n            display: 'block',\r\n            width: 0,\r\n            height: 0,\r\n            borderStyle: 'solid'\r\n        }\r\n    },\r\n    tooltip: {\r\n        margin: '6px 0 26px 0'\r\n    }\r\n});\r\n\r\nclass Forward extends React.Component {\r\n    state = {\r\n        arrowRef: null\r\n    };\r\n\r\n    handleArrowRef = node => {\r\n        this.setState({\r\n            arrowRef: node\r\n        });\r\n    };\r\n\r\n    openForward = event => {\r\n        event.stopPropagation();\r\n\r\n        const { forwardInfo } = this.props;\r\n        if (!forwardInfo) return null;\r\n\r\n        const { origin } = forwardInfo;\r\n\r\n        switch (origin['@type']) {\r\n            case 'messageForwardOriginUser': {\r\n                const { sender_user_id } = origin;\r\n\r\n                openUser(sender_user_id, true);\r\n                break;\r\n            }\r\n            case 'messageForwardOriginHiddenUser': {\r\n                break;\r\n            }\r\n            case 'messageForwardOriginChannel': {\r\n                const { chat_id, message_id } = origin;\r\n\r\n                openChat(chat_id, message_id, true);\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { t, classes, forwardInfo } = this.props;\r\n        const { arrowRef } = this.state;\r\n\r\n        const title = getForwardTitle(forwardInfo, t);\r\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\r\n            <>\r\n                {t('HidAccount')}\r\n                <span className={classes.arrow} ref={this.handleArrowRef} />\r\n            </>\r\n        ) : (\r\n            ''\r\n        );\r\n\r\n        return (\r\n            <div className={classNames('message-author', classes.forwardColor, 'forward')}>\r\n                {`${t('ForwardedMessage')}\\n${t('From')} `}\r\n                <Tooltip\r\n                    title={tooltip}\r\n                    classes={{ popper: classes.arrowPopper, tooltip: classes.tooltip }}\r\n                    PopperProps={{\r\n                        popperOptions: {\r\n                            modifiers: {\r\n                                arrow: {\r\n                                    enabled: Boolean(arrowRef),\r\n                                    element: arrowRef\r\n                                }\r\n                            }\r\n                        }\r\n                    }}\r\n                    placement='top'>\r\n                    <a onClick={this.openForward}>{title}</a>\r\n                </Tooltip>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nForward.propTypes = {\r\n    forwardInfo: PropTypes.object.isRequired\r\n};\r\n\r\nconst enhance = compose(\r\n    withStyles(styles, { withTheme: true }),\r\n    withTranslation()\r\n);\r\n\r\nexport default enhance(Forward);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport classNames from 'classnames';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport './MessageStatus.css';\r\n\r\nclass MessageStatus extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleUpdateMessageSend = this.handleUpdateMessageSend.bind(this);\r\n        this.handleUpdateChatReadOutbox = this.handleUpdateChatReadOutbox.bind(this);\r\n\r\n        this.state = {\r\n            sendingState: props.sendingState,\r\n            unread: true\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('updateMessageSendFailed', this.handleUpdateMessageSend);\r\n        MessageStore.on('updateMessageSendSucceeded', this.handleUpdateMessageSend);\r\n\r\n        ChatStore.on('updateChatReadOutbox', this.handleUpdateChatReadOutbox);\r\n    }\r\n\r\n    handleUpdateMessageSend(payload) {\r\n        if (this.props.messageId === payload.old_message_id && payload.message) {\r\n            this.newMessageId = payload.message.id;\r\n            this.setState({ sendingState: payload.message.sending_state });\r\n        }\r\n    }\r\n\r\n    handleUpdateChatReadOutbox(payload) {\r\n        if (\r\n            this.props.chatId === payload.chat_id &&\r\n            ((this.props.newMessageId && this.props.newMessageId <= payload.last_read_outbox_message_id) ||\r\n                this.props.messageId <= payload.last_read_outbox_message_id)\r\n        ) {\r\n            this.setState({ sendingState: null, unread: false });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.removeListener('updateMessageSendFailed', this.handleUpdateMessageSend);\r\n        MessageStore.removeListener('updateMessageSendSucceeded', this.handleUpdateMessageSend);\r\n\r\n        ChatStore.removeListener('updateChatReadOutbox', this.handleUpdateChatReadOutbox);\r\n    }\r\n\r\n    render() {\r\n        let stateClassName = 'messagestatus-succeded';\r\n        if (this.state.sendingState) {\r\n            stateClassName =\r\n                this.state.sendingState['@type'] === 'messageSendingStateFailed'\r\n                    ? 'messagestatus-failed'\r\n                    : 'messagestatus-pending';\r\n        }\r\n\r\n        return this.state.unread && <i className={classNames('messagestatus-icon', stateClassName)} />;\r\n    }\r\n}\r\n\r\nexport default MessageStatus;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport classNames from 'classnames';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport './UnreadSeparator.css';\r\n\r\nconst styles = theme => ({\r\n    unreadSeparator: {\r\n        background: theme.palette.type === 'dark' ? theme.palette.grey[800] : '#f0f4f7',\r\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary : '#8096a8'\r\n    }\r\n});\r\n\r\nfunction UnreadSeparator(props) {\r\n    const { classes } = props;\r\n\r\n    return <div className={classNames('unread-separator', classes.unreadSeparator)}>Unread messages</div>;\r\n}\r\n\r\nexport default withStyles(styles)(UnreadSeparator);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport Animation from './Animation';\r\nimport Photo from './Photo';\r\nimport Video from './Video';\r\nimport Audio from './Audio';\r\nimport Document from './Document';\r\nimport VoiceNote from './VoiceNote';\r\nimport VideoNote from './VideoNote';\r\nimport Sticker from './Sticker';\r\nimport { getSize } from '../../../Utils/Common';\r\nimport { accentStyles } from '../../Theme';\r\nimport { getSrc } from '../../../Utils/File';\r\nimport { PHOTO_DISPLAY_SIZE, PHOTO_DISPLAY_SMALL_SIZE, PHOTO_SIZE } from '../../../Constants';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './WebPage.css';\r\n\r\nconst styles = theme => ({\r\n    ...accentStyles(theme)\r\n});\r\n\r\nclass WebPage extends React.Component {\r\n    getContent = () => {\r\n        const { classes, chatId, messageId, size, displaySize, displaySmallSize, openMedia } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { content } = message;\r\n        if (!content) return null;\r\n\r\n        const { web_page } = content;\r\n        if (!web_page) return null;\r\n\r\n        const {\r\n            site_name,\r\n            title,\r\n            description,\r\n            url,\r\n            photo,\r\n            animation,\r\n            video,\r\n            audio,\r\n            document,\r\n            voice_note,\r\n            video_note,\r\n            sticker,\r\n            type\r\n        } = web_page;\r\n\r\n        if (sticker) {\r\n            return (\r\n                <>\r\n                    {site_name && (\r\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\r\n                    )}\r\n                    {title && <div className='web-page-title'>{title}</div>}\r\n                    {description && <div className='web-page-description'>{description}</div>}\r\n                    <Sticker chatId={chatId} messageId={messageId} sticker={sticker} openMedia={openMedia} />\r\n                </>\r\n            );\r\n        }\r\n\r\n        if (voice_note) {\r\n            return (\r\n                <>\r\n                    {site_name && (\r\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\r\n                    )}\r\n                    {title && <div className='web-page-title'>{title}</div>}\r\n                    {description && <div className='web-page-description'>{description}</div>}\r\n                    <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\r\n                </>\r\n            );\r\n        }\r\n\r\n        if (video_note) {\r\n            return (\r\n                <>\r\n                    {site_name && (\r\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\r\n                    )}\r\n                    {title && <div className='web-page-title'>{title}</div>}\r\n                    {description && <div className='web-page-description'>{description}</div>}\r\n                    <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\r\n                </>\r\n            );\r\n        }\r\n\r\n        if (audio) {\r\n            return (\r\n                <>\r\n                    {site_name && (\r\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\r\n                    )}\r\n                    {title && <div className='web-page-title'>{title}</div>}\r\n                    {description && <div className='web-page-description'>{description}</div>}\r\n                    <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />\r\n                </>\r\n            );\r\n        }\r\n\r\n        if (document) {\r\n            return (\r\n                <>\r\n                    {site_name && (\r\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\r\n                    )}\r\n                    {title && <div className='web-page-title'>{title}</div>}\r\n                    {description && <div className='web-page-description'>{description}</div>}\r\n                    <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />\r\n                </>\r\n            );\r\n        }\r\n\r\n        if (animation) {\r\n            const animationSrc = getSrc(animation.animation);\r\n            if (animationSrc || animation.thumbnail) {\r\n                return (\r\n                    <>\r\n                        {site_name && (\r\n                            <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\r\n                        )}\r\n                        {title && <div className='web-page-title'>{title}</div>}\r\n                        {description && <div className='web-page-description'>{description}</div>}\r\n                        <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\r\n                    </>\r\n                );\r\n            }\r\n        }\r\n\r\n        if (video) {\r\n            if (video.thumbnail) {\r\n                return (\r\n                    <>\r\n                        {site_name && (\r\n                            <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\r\n                        )}\r\n                        {title && <div className='web-page-title'>{title}</div>}\r\n                        {description && <div className='web-page-description'>{description}</div>}\r\n                        <Video chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />\r\n                    </>\r\n                );\r\n            }\r\n        }\r\n\r\n        if (photo) {\r\n            const photoSize = getSize(photo.sizes, size);\r\n            const smallPhoto =\r\n                (type === 'article' || type === 'photo') &&\r\n                (site_name || title || description) &&\r\n                photoSize &&\r\n                photoSize.width === photoSize.height;\r\n\r\n            const style = smallPhoto\r\n                ? {\r\n                      float: 'right',\r\n                      marginLeft: 6,\r\n                      marginBottom: 6\r\n                  }\r\n                : {};\r\n            return (\r\n                <>\r\n                    {smallPhoto && (\r\n                        <Photo\r\n                            displaySize={displaySmallSize}\r\n                            style={style}\r\n                            chatId={chatId}\r\n                            messageId={messageId}\r\n                            photo={photo}\r\n                            openMedia={openMedia}\r\n                        />\r\n                    )}\r\n                    {site_name && (\r\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\r\n                    )}\r\n                    {title && <div className='web-page-title'>{title}</div>}\r\n                    {description && <div className='web-page-description'>{description}</div>}\r\n                    {!smallPhoto && <Photo chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} />}\r\n                </>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <>\r\n                {site_name && (\r\n                    <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\r\n                )}\r\n                {title && <div className='web-page-title'>{title}</div>}\r\n                {description && <div className='web-page-description'>{description}</div>}\r\n            </>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div className='web-page'>\r\n                <div className={classNames('web-page-border', classes.accentBackgroundLight)} />\r\n                <div className='web-page-wrapper'>{this.getContent()}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nWebPage.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    size: PropTypes.number,\r\n    displaySize: PropTypes.number,\r\n    displaySmallSize: PropTypes.number,\r\n    openMedia: PropTypes.func\r\n};\r\n\r\nWebPage.defaultProps = {\r\n    size: PHOTO_SIZE,\r\n    displaySize: PHOTO_DISPLAY_SIZE,\r\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE\r\n};\r\n\r\nexport default withStyles(styles)(WebPage);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport { compose } from 'recompose';\r\nimport { withTranslation } from 'react-i18next';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport Reply from './Reply';\r\nimport Forward from './Forward';\r\nimport MessageStatus from './MessageStatus';\r\nimport MessageAuthor from './MessageAuthor';\r\nimport UserTileControl from '../Tile/UserTileControl';\r\nimport ChatTileControl from '../Tile/ChatTileControl';\r\nimport UnreadSeparator from './UnreadSeparator';\r\nimport WebPage from './Media/WebPage';\r\nimport {\r\n    getDate,\r\n    getDateHint,\r\n    getText,\r\n    getMedia,\r\n    getUnread,\r\n    getSenderUserId,\r\n    getWebPage,\r\n    openMedia\r\n} from '../../Utils/Message';\r\nimport { canSendMessages } from '../../Utils/Chat';\r\nimport { openUser, openChat, selectMessage } from '../../Actions/Client';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Message.css';\r\n\r\nconst styles = theme => ({\r\n    message: {\r\n        backgroundColor: 'transparent'\r\n    },\r\n    messageAuthorColor: {\r\n        color: theme.palette.primary.main\r\n    },\r\n    messageSelected: {\r\n        backgroundColor: theme.palette.primary.main + '22'\r\n    },\r\n    '@keyframes highlighted': {\r\n        from: { backgroundColor: theme.palette.primary.main + '22' },\r\n        to: { backgroundColor: 'transparent' }\r\n    },\r\n    messageHighlighted: {\r\n        animation: 'highlighted 4s ease-out'\r\n    }\r\n});\r\n\r\nclass Message extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            const { chatId, messageId } = this.props;\r\n            this.state = {\r\n                message: MessageStore.get(chatId, messageId),\r\n                selected: false,\r\n                highlighted: false\r\n            };\r\n        } else {\r\n            this.state = {\r\n                selected: false,\r\n                highlighted: false\r\n            };\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { theme, chatId, messageId, sendingState, showUnreadSeparator } = this.props;\r\n        const { contextMenu, selected, highlighted } = this.state;\r\n\r\n        if (nextProps.theme !== theme) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.messageId !== messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.sendingState !== sendingState) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.contextMenu !== contextMenu) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.selected !== selected) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.highlighted !== highlighted) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\r\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.removeListener('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateClearSelection);\r\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.removeListener('updateMessageEdited', this.onUpdateMessageEdited);\r\n        MessageStore.removeListener('updateMessageViews', this.onUpdateMessageViews);\r\n    }\r\n\r\n    onClientUpdateClearSelection = update => {\r\n        if (!this.state.selected) return;\r\n\r\n        this.setState({ selected: false });\r\n    };\r\n\r\n    onClientUpdateMessageHighlighted = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { selected, highlighted } = this.state;\r\n\r\n        if (selected) return;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            if (highlighted) {\r\n                this.setState({ highlighted: false }, () => {\r\n                    setTimeout(() => {\r\n                        this.setState({ highlighted: true });\r\n                    }, 0);\r\n                });\r\n            } else {\r\n                this.setState({ highlighted: true });\r\n            }\r\n        } else if (highlighted) {\r\n            this.setState({ highlighted: false });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMessageSelected = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { selected } = update;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            this.setState({ selected, highlighted: false });\r\n        }\r\n    };\r\n\r\n    onUpdateMessageEdited = update => {\r\n        const { chat_id, message_id } = update;\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (chatId === chat_id && messageId === message_id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onUpdateMessageViews = update => {\r\n        const { chat_id, message_id } = update;\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (chatId === chat_id && messageId === message_id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chat_id, message_id } = update;\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (chatId !== chat_id) return;\r\n        if (messageId !== message_id) return;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return;\r\n\r\n        const { content } = message;\r\n        if (!content) return;\r\n\r\n        switch (content['@type']) {\r\n            case 'messagePoll': {\r\n                this.forceUpdate();\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    handleSelectUser = userId => {\r\n        openUser(userId, true);\r\n    };\r\n\r\n    handleSelectChat = chatId => {\r\n        openChat(chatId, true);\r\n    };\r\n\r\n    handleSelection = () => {\r\n        if (!this.mouseDown) return;\r\n\r\n        const selection = window.getSelection().toString();\r\n        if (selection) return;\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\r\n        selectMessage(chatId, messageId, selected);\r\n    };\r\n\r\n    handleDateClick = e => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n\r\n        const canBeReplied = canSendMessages(chatId);\r\n        if (canBeReplied) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateReply',\r\n                chatId: chatId,\r\n                messageId: messageId\r\n            });\r\n            return;\r\n        }\r\n\r\n        const canBeForwarded = message && message.can_be_forwarded;\r\n        if (canBeForwarded) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateForward',\r\n                info: {\r\n                    chatId: chatId,\r\n                    messageIds: [messageId]\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    openMedia = event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        openMedia(chatId, messageId);\r\n    };\r\n\r\n    handleAnimationEnd = () => {\r\n        this.setState({ highlighted: false });\r\n    };\r\n\r\n    handleMouseDown = () => {\r\n        this.mouseDown = true;\r\n    };\r\n\r\n    handleMouseOver = () => {\r\n        this.mouseDown = false;\r\n    };\r\n\r\n    handleMouseOut = () => {\r\n        this.mouseOut = false;\r\n    };\r\n\r\n    render() {\r\n        const { t, classes, chatId, messageId, showUnreadSeparator } = this.props;\r\n        const { contextMenu, left, top, selected, highlighted } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return <div>[empty message]</div>;\r\n\r\n        const { sending_state, views, edit_date, reply_to_message_id, forward_info } = message;\r\n\r\n        const text = getText(message);\r\n        const webPage = getWebPage(message);\r\n        const date = getDate(message);\r\n        const dateHint = getDateHint(message);\r\n        const media = getMedia(message, this.openMedia);\r\n        this.unread = getUnread(message);\r\n        const senderUserId = getSenderUserId(message);\r\n\r\n        const tile = senderUserId ? (\r\n            <UserTileControl userId={senderUserId} onSelect={this.handleSelectUser} />\r\n        ) : (\r\n            <ChatTileControl chatId={chatId} onSelect={this.handleSelectChat} />\r\n        );\r\n\r\n        const messageClassName = classNames(\r\n            'message',\r\n            classes.message,\r\n            { 'message-selected': selected },\r\n            { [classes.messageSelected]: selected },\r\n            // { 'message-highlighted': highlighted && !selected },\r\n            { [classes.messageHighlighted]: highlighted && !selected }\r\n        );\r\n\r\n        return (\r\n            <div\r\n                className={messageClassName}\r\n                onMouseOver={this.handleMouseOver}\r\n                onMouseOut={this.handleMouseOut}\r\n                onMouseDown={this.handleMouseDown}\r\n                onClick={this.handleSelection}\r\n                onAnimationEnd={this.handleAnimationEnd}>\r\n                {showUnreadSeparator && <UnreadSeparator />}\r\n                <div className='message-wrapper'>\r\n                    <i className='message-select-tick' />\r\n                    {this.unread && (\r\n                        <MessageStatus chatId={chatId} messageId={messageId} sendingState={sending_state} />\r\n                    )}\r\n                    {tile}\r\n                    <div className='message-content'>\r\n                        <div className='message-title'>\r\n                            {!forward_info && <MessageAuthor chatId={chatId} openChat userId={senderUserId} openUser />}\r\n                            {forward_info && <Forward forwardInfo={forward_info} />}\r\n                            <div className='message-meta'>\r\n                                <span>&nbsp;</span>\r\n                                {views > 0 && (\r\n                                    <>\r\n                                        <i className='message-views-icon' />\r\n                                        <span className='message-views'>\r\n                                            &nbsp;\r\n                                            {views}\r\n                                            &nbsp; &nbsp;\r\n                                        </span>\r\n                                    </>\r\n                                )}\r\n                                {edit_date > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\r\n                                <a className='message-date' onClick={this.handleDateClick}>\r\n                                    <span title={dateHint}>{date}</span>\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                        {Boolean(reply_to_message_id) && (\r\n                            <Reply\r\n                                chatId={chatId}\r\n                                messageId={reply_to_message_id}\r\n                                parentChatId={chatId}\r\n                                parentMessageId={messageId}\r\n                            />\r\n                        )}\r\n                        {media}\r\n                        <div className='message-text'>{text}</div>\r\n                        {webPage && <WebPage chatId={chatId} messageId={messageId} openMedia={this.openMedia} />}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst enhance = compose(\r\n    withStyles(styles, { withTheme: true }),\r\n    withTranslation()\r\n);\r\n\r\nexport default enhance(Message);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { compose } from 'recompose';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport { withTranslation } from 'react-i18next';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ReplyTile from '../Tile/ReplyTile';\r\nimport { accentStyles, borderStyle } from '../Theme';\r\nimport { getContent, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\r\nimport { openChat } from '../../Actions/Client';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './PinnedMessage.css';\r\n\r\nconst styles = theme => ({\r\n    ...accentStyles(theme),\r\n    ...borderStyle(theme),\r\n    iconButton: {\r\n        // padding: 4\r\n    },\r\n    pinnedMessage: {\r\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\r\n        color: theme.palette.text.primary\r\n    }\r\n});\r\n\r\nclass PinnedMessage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const chat = ChatStore.get(props.chatId);\r\n        this.state = {\r\n            prevPropsChatId: props.chatId,\r\n            messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { prevPropsChatId } = state;\r\n        const { chatId } = props;\r\n\r\n        if (prevPropsChatId !== chatId) {\r\n            const chat = ChatStore.get(chatId);\r\n            //console.log('PinnedMessage.getDerivedStateFromProps', chat, chat.pinned_message_id);\r\n            return {\r\n                prevPropsChatId: chatId,\r\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { messageId } = this.state;\r\n\r\n        if (messageId && prevState.messageId !== messageId) {\r\n            this.loadContent();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n\r\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.removeListener('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\r\n    }\r\n\r\n    onUpdateChatPinnedMessage = update => {\r\n        const { chat_id, pinned_message_id } = update;\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId !== chat_id) return;\r\n\r\n        this.setState({ messageId: pinned_message_id });\r\n    };\r\n\r\n    loadContent = () => {\r\n        const { chatId } = this.props;\r\n        const { messageId } = this.state;\r\n\r\n        if (!chatId) return;\r\n        if (!messageId) return;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (message) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'getMessage',\r\n            chat_id: chatId,\r\n            message_id: messageId\r\n        })\r\n            .then(result => {\r\n                MessageStore.set(result);\r\n                this.forceUpdate();\r\n            })\r\n            .catch(error => {\r\n                const deletedMessage = {\r\n                    '@type': 'deletedMessage',\r\n                    chat_id: chatId,\r\n                    id: messageId,\r\n                    content: null\r\n                };\r\n                MessageStore.set(deletedMessage);\r\n                this.forceUpdate();\r\n            });\r\n    };\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId, t, theme } = this.props;\r\n        const { messageId } = this.state;\r\n\r\n        if (nextProps.t !== t) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.theme !== theme) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.messageId !== messageId) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    handleClick = event => {\r\n        const { chatId } = this.props;\r\n        const { messageId } = this.state;\r\n\r\n        if (!messageId) return;\r\n\r\n        openChat(chatId, messageId);\r\n    };\r\n\r\n    handleDelete = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    };\r\n\r\n    render() {\r\n        const { chatId, classes, t } = this.props;\r\n        const { messageId } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        //console.log('PinnedMessage.message', chatId, messageId, message);\r\n        if (!message) return null;\r\n\r\n        let content = !message ? t('Loading') : getContent(message, t);\r\n        const photoSize = getReplyPhotoSize(chatId, messageId);\r\n\r\n        if (isDeletedMessage(message)) {\r\n            content = t('DeletedMessage');\r\n        }\r\n\r\n        return (\r\n            <div\r\n                className={classNames('pinned-message', classes.pinnedMessage, classes.borderColor)}\r\n                onClick={this.handleClick}>\r\n                <div className='pinned-message-wrapper'>\r\n                    <div className={classNames('reply-border', classes.accentBackgroundLight)} />\r\n                    {photoSize && <ReplyTile chatId={chatId} messageId={messageId} photoSize={photoSize} />}\r\n                    <div className='pinned-message-content'>\r\n                        <div className={classNames('reply-content-title', classes.accentColorMain)}>\r\n                            {t('PinnedMessage')}\r\n                        </div>\r\n                        <div className='reply-content-subtitle'>{content}</div>\r\n                    </div>\r\n                    <div className='pinned-message-delete-button'>\r\n                        <IconButton className={classes.iconButton} onClick={this.handleDelete}>\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nPinnedMessage.propTypes = {\r\n    chatId: PropTypes.number.isRequired\r\n};\r\n\r\nconst enhance = compose(\r\n    withStyles(styles, { withTheme: true }),\r\n    withTranslation()\r\n);\r\n\r\nexport default enhance(PinnedMessage);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport classNames from 'classnames';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport UnreadSeparator from './UnreadSeparator';\r\nimport Photo from './Media/Photo';\r\nimport { openMedia } from '../../Utils/Message';\r\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './ServiceMessage.css';\r\n\r\nconst chatPhotoStyle = {\r\n    width: 64,\r\n    height: 64,\r\n    borderRadius: '50%',\r\n    margin: '-8px auto 16px auto'\r\n};\r\n\r\nconst styles = theme => ({\r\n    '@keyframes highlighted': {\r\n        from: { backgroundColor: theme.palette.primary.main + '22' },\r\n        to: { backgroundColor: 'transparent' }\r\n    },\r\n    messageHighlighted: {\r\n        animation: 'highlighted 4s ease-out'\r\n    }\r\n});\r\n\r\nclass ServiceMessage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            const { chatId, messageId } = this.props;\r\n            this.state = {\r\n                message: MessageStore.get(chatId, messageId),\r\n                highlighted: false\r\n            };\r\n        } else {\r\n            this.state = {\r\n                highlighted: false\r\n            };\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId, sendingState, showUnreadSeparator } = this.props;\r\n        const { highlighted } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.messageId !== messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.sendingState !== sendingState) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.highlighted !== highlighted) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.removeListener('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n    }\r\n\r\n    onClientUpdateMessageHighlighted = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { selected, highlighted } = this.state;\r\n\r\n        if (selected) return;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            if (highlighted) {\r\n                this.setState({ highlighted: false }, () => {\r\n                    setTimeout(() => {\r\n                        this.setState({ highlighted: true });\r\n                    }, 0);\r\n                });\r\n            } else {\r\n                this.setState({ highlighted: true });\r\n            }\r\n        } else if (highlighted) {\r\n            this.setState({ highlighted: false });\r\n        }\r\n    };\r\n\r\n    handleAnimationEnd = () => {\r\n        this.setState({ highlighted: false });\r\n    };\r\n\r\n    openMedia = event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        openMedia(chatId, messageId);\r\n    };\r\n\r\n    render() {\r\n        const { classes, chatId, messageId, showUnreadSeparator } = this.props;\r\n        const { highlighted } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return <div>[empty service message]</div>;\r\n\r\n        const { content } = message;\r\n        if (!content) return <div>[empty service message]</div>;\r\n\r\n        const { photo } = content;\r\n\r\n        const text = getServiceMessageContent(message, true);\r\n\r\n        const messageClassName = classNames('service-message', { [classes.messageHighlighted]: highlighted });\r\n\r\n        return (\r\n            <div className={messageClassName} onAnimationEnd={this.handleAnimationEnd}>\r\n                {showUnreadSeparator && <UnreadSeparator />}\r\n                <div className='service-message-wrapper'>\r\n                    <div className='service-message-content'>{text}</div>\r\n                </div>\r\n                {photo && (\r\n                    <Photo\r\n                        chatId={chatId}\r\n                        messageId={messageId}\r\n                        photo={photo}\r\n                        style={chatPhotoStyle}\r\n                        openMedia={this.openMedia}\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(ServiceMessage);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport Sticker from '../Message/Media/Sticker';\r\nimport StickerPreview from './StickerPreview';\r\nimport { borderStyle } from '../Theme';\r\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\r\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport StickerStore from '../../Stores/StickerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './StickersHint.css';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\r\n    },\r\n    ...borderStyle(theme)\r\n});\r\n\r\nclass StickersHint extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.hintsRef = React.createRef();\r\n\r\n        this.state = {\r\n            hint: null,\r\n            items: [],\r\n            previewStickerId: 0,\r\n            showPreview: false,\r\n            cancelSend: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\r\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        StickerStore.removeListener('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\r\n        StickerStore.removeListener('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\r\n    }\r\n\r\n    onClientUpdateRemoteStickersHint = update => {\r\n        const { hint } = update;\r\n        const { hint: currentHint } = this.state;\r\n\r\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\r\n\r\n        this.setState({\r\n            hint: StickerStore.hint,\r\n            items: this.getItems(StickerStore.hint)\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        const { stickers } = hint;\r\n        loadStickersContent(store, stickers.stickers);\r\n    };\r\n\r\n    onClientUpdateLocalStickersHint = update => {\r\n        const { hint } = update;\r\n\r\n        this.setState({\r\n            hint,\r\n            items: this.getItems(hint),\r\n            previewStickerId: 0,\r\n            showPreview: false,\r\n            cancelSend: false\r\n        });\r\n\r\n        if (!hint) return;\r\n\r\n        const store = FileStore.getStore();\r\n        const { stickers } = hint;\r\n        loadStickersContent(store, stickers.stickers);\r\n    };\r\n\r\n    handleSend = sticker => {\r\n        const { cancelSend } = this.state;\r\n        if (cancelSend) return;\r\n        if (!sticker) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerSend',\r\n            sticker\r\n        });\r\n    };\r\n\r\n    loadPreviewContent = stickerId => {\r\n        const { items } = this.state;\r\n\r\n        const sticker = items.find(x => x.sticker.id === stickerId);\r\n        if (!sticker) return;\r\n\r\n        const store = FileStore.getStore();\r\n        loadStickerContent(store, sticker, null);\r\n\r\n        let stickersPerRow = 8;\r\n        if (this.hintsRef && this.hintsRef.current) {\r\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\r\n        }\r\n\r\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\r\n        preloadStickers.forEach(x => {\r\n            loadStickerContent(store, x, null);\r\n        });\r\n    };\r\n\r\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\r\n        if (!stickers) return [];\r\n\r\n        const indexes = [];\r\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\r\n        if (index === -1) return [];\r\n\r\n        const row = Math.floor(index / stickersPerRow);\r\n        const column = index % stickersPerRow;\r\n\r\n        const prevRow = row - 1;\r\n        const nextRow = row + 1;\r\n        const prevColumn = column - 1;\r\n        const nextColumn = column + 1;\r\n\r\n        if (prevRow >= 0) {\r\n            if (prevColumn >= 0) {\r\n                indexes.push(stickersPerRow * prevRow + prevColumn);\r\n            }\r\n            indexes.push(stickersPerRow * prevRow + column);\r\n            if (nextColumn < stickersPerRow) {\r\n                indexes.push(stickersPerRow * prevRow + nextColumn);\r\n            }\r\n        }\r\n\r\n        if (prevColumn >= 0) {\r\n            indexes.push(stickersPerRow * row + prevColumn);\r\n        }\r\n        if (nextColumn < stickersPerRow) {\r\n            indexes.push(stickersPerRow * row + nextColumn);\r\n        }\r\n\r\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\r\n            if (prevColumn >= 0) {\r\n                indexes.push(stickersPerRow * nextRow + prevColumn);\r\n            }\r\n            indexes.push(stickersPerRow * nextRow + column);\r\n            if (nextColumn < stickersPerRow) {\r\n                indexes.push(stickersPerRow * nextRow + nextColumn);\r\n            }\r\n        }\r\n\r\n        return indexes.map(i => stickers[i]);\r\n    };\r\n\r\n    handleMouseOver = event => {\r\n        const stickerId = Number(event.target.dataset.stickerId);\r\n        if (!stickerId) return;\r\n\r\n        if (!this.mouseDown) return;\r\n\r\n        if (this.mouseDownStickerId !== stickerId) {\r\n            this.mouseDownStickerId = null;\r\n        }\r\n        this.setState({ previewStickerId: stickerId });\r\n        this.loadPreviewContent(stickerId);\r\n    };\r\n\r\n    handleMouseDown = event => {\r\n        const stickerId = Number(event.target.dataset.stickerId);\r\n        if (!stickerId) return;\r\n\r\n        this.mouseDownStickerId = stickerId;\r\n        const now = Date.now();\r\n\r\n        this.setState({ previewStickerId: stickerId, timestamp: now, showPreview: false, cancelSend: false });\r\n        setTimeout(() => {\r\n            const { timestamp } = this.state;\r\n            if (timestamp === now) {\r\n                this.setState({ showPreview: true, cancelSend: true });\r\n            }\r\n        }, 500);\r\n\r\n        this.loadPreviewContent(stickerId);\r\n\r\n        this.mouseDown = true;\r\n        document.addEventListener('mouseup', this.handleMouseUp);\r\n\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        return false;\r\n    };\r\n\r\n    handleMouseUp = () => {\r\n        this.setState({ previewStickerId: 0, timestamp: 0, showPreview: false });\r\n        this.mouseDown = false;\r\n        document.removeEventListener('mouseup', this.handleMouseUp);\r\n    };\r\n\r\n    getItems = hint => {\r\n        const items = [];\r\n        if (!hint) return items;\r\n\r\n        const dict = new Map();\r\n        const { stickers, foundStickers } = hint;\r\n        if (stickers) {\r\n            stickers.stickers.forEach(x => {\r\n                items.push(x);\r\n                dict.set(x.sticker.id, x.sticker.id);\r\n            });\r\n        }\r\n        if (foundStickers) {\r\n            foundStickers.stickers.forEach(x => {\r\n                if (!dict.has(x.sticker.id)) {\r\n                    items.push(x);\r\n                    dict.set(x.sticker.id, x.sticker.id);\r\n                }\r\n            });\r\n        }\r\n\r\n        return items;\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { hint, items, previewStickerId, showPreview } = this.state;\r\n        if (!hint) return null;\r\n        if (!items) return null;\r\n        if (!items.length) return null;\r\n\r\n        const controls = items.map(x => (\r\n            <div\r\n                className='sticker-set-dialog-item'\r\n                key={x.sticker.id}\r\n                data-sticker-id={x.sticker.id}\r\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\r\n                onClick={() => this.handleSend(x)}>\r\n                <Sticker\r\n                    key={x.sticker.id}\r\n                    className='sticker-set-dialog-item-sticker'\r\n                    preview\r\n                    sticker={x}\r\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\r\n                    blur={false}\r\n                />\r\n            </div>\r\n        ));\r\n\r\n        const stickerIndex = items.findIndex(x => x.sticker.id === previewStickerId);\r\n        const sticker = stickerIndex !== -1 ? items[stickerIndex] : null;\r\n\r\n        return (\r\n            <div\r\n                ref={this.hintsRef}\r\n                className={classNames('stickers-hint', classes.borderColor, classes.root)}\r\n                onMouseOver={this.handleMouseOver}\r\n                onMouseDown={this.handleMouseDown}>\r\n                {controls}\r\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(StickersHint);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport classNames from 'classnames';\r\nimport FilesDropTarget from './FilesDropTarget';\r\nimport Message from '../Message/Message';\r\nimport PinnedMessage from './PinnedMessage';\r\nimport ServiceMessage from '../Message/ServiceMessage';\r\nimport StickersHint from './StickersHint';\r\nimport { debounce, throttle, getPhotoSize, itemsInView } from '../../Utils/Common';\r\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\r\nimport { filterMessages } from '../../Utils/Message';\r\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\r\nimport { canSendFiles, getChatFullInfo, getSupergroupId, isSupergroup } from '../../Utils/Chat';\r\nimport { highlightMessage } from '../../Actions/Client';\r\nimport { MESSAGE_SLICE_LIMIT } from '../../Constants';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './MessagesList.css';\r\n\r\nconst ScrollBehaviorEnum = Object.freeze({\r\n    NONE: 'NONE',\r\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\r\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\r\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\r\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION'\r\n});\r\n\r\nconst Scroll = Object.freeze({\r\n    DELTA: 1,\r\n    LIST_UPDATE_FACTOR_DOWN: 1.5,\r\n    LIST_UPDATE_FACTOR_UP: 0.1,\r\n    BUTTON_UPDATE_FACTOR: 1.3\r\n});\r\n\r\nconst styles = theme => ({\r\n    background: {\r\n        background: theme.palette.type === 'dark' ? theme.palette.grey[900] : 'transparent'\r\n    }\r\n});\r\n\r\nclass MessagesList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        console.log(`MessagesList.ctor chat_id=${props.chatId} message_id=${props.messageId}`);\r\n\r\n        this.sessionId = Date.now();\r\n        this.state = {\r\n            prevChatId: 0,\r\n            prevMessageId: null,\r\n            playerOpened: false,\r\n            history: [],\r\n            clearHistory: false,\r\n            selectionActive: false,\r\n            scrollBehavior: ScrollBehaviorEnum.NONE,\r\n            separatorMessageId: 0,\r\n            isScrollToBottomButtonDisplay: false,\r\n            offset: null\r\n        };\r\n\r\n        this.listRef = React.createRef();\r\n        this.itemsRef = React.createRef();\r\n        this.transportButton = React.createRef();\r\n\r\n        this.itemsMap = new Map();\r\n\r\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\r\n        //debounce(this.updateItemsInView, 250);\r\n\r\n        this.msiHistory = [[]];\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\r\n            return {\r\n                prevChatId: props.chatId,\r\n                prevMessageId: props.messageId,\r\n                clearHistory: false,\r\n                selectionActive: false,\r\n                scrollBehavior: ScrollBehaviorEnum.SCROLL_TO_BOTTOM,\r\n                separatorMessageId: 0\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getSnapshotBeforeUpdate(prevProps, prevState) {\r\n        const { chatId } = this.props;\r\n\r\n        const list = this.listRef.current;\r\n        const snapshot = {\r\n            scrollTop: list.scrollTop,\r\n            scrollHeight: list.scrollHeight,\r\n            offsetHeight: list.offsetHeight\r\n        };\r\n\r\n        console.log(\r\n            `SCROLL GETSNAPSHOTBEFOREUPDATE \\\\\r\n            list.scrollTop=${list.scrollTop} \\\\\r\n            list.scrollHeight=${list.scrollHeight} \\\\\r\n            list.offsetHeight=${list.offsetHeight} \\\\\r\n            chatId=${chatId}`\r\n        );\r\n\r\n        return snapshot;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        const list = this.listRef.current;\r\n        console.log(\r\n            `MessagesList.componentDidUpdate chat_id=${chatId} message_id=${messageId} \\\\\r\n            prev_chat_id=${prevProps.chatId} prev_message_id=${prevProps.messageId} \\\\\r\n            list.scrollTop=${list.scrollTop} \\\\\r\n            list.scrollHeight=${list.scrollHeight} \\\\\r\n            list.offsetHeight=${list.offsetHeight}`\r\n        );\r\n\r\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\r\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\r\n        } else {\r\n            this.handleScrollBehavior(snapshot);\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId, theme } = this.props;\r\n        const {\r\n            playerOpened,\r\n            history,\r\n            dragging,\r\n            clearHistory,\r\n            selectionActive,\r\n            isScrollToBottomButtonDisplay\r\n        } = this.state;\r\n\r\n        if (nextProps.theme !== theme) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.messageId !== messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.playerOpened !== playerOpened) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.history !== history || nextState.history.length !== history.length) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.dragging !== dragging) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.clearHistory !== clearHistory) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.selectionActive !== selectionActive) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.isScrollToBottomButtonDisplay !== isScrollToBottomButtonDisplay) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { chatId } = this.props;\r\n        this.handleSelectChat(chatId, 0);\r\n\r\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\r\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\r\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\r\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\r\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n\r\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\r\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.removeListener('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\r\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateSelection);\r\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateSelection);\r\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdateChatLastMessage);\r\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n\r\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.removeListener('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\r\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\r\n    }\r\n\r\n    onClientUpdateScroll = () => {\r\n        const list = this.listRef.current;\r\n        let button = this.transportButton.current;\r\n\r\n        if (list && list.scrollHeight - list.scrollTop > Scroll.BUTTON_UPDATE_FACTOR * list.offsetHeight) {\r\n            if (!button.classList.contains('active')) {\r\n                button.classList.add('active');\r\n            }\r\n        } else {\r\n            button.classList.remove('active');\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaActive = update => {\r\n        const list = this.listRef.current;\r\n\r\n        const prevOffsetHeight = list.offsetHeight;\r\n        const prevScrollTop = list.scrollTop;\r\n        this.setState({ playerOpened: true }, () => {\r\n            if (list.scrollTop === prevScrollTop) {\r\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\r\n            }\r\n        });\r\n    };\r\n\r\n    onClientUpdateMediaEnding = udpate => {\r\n        const list = this.listRef.current;\r\n\r\n        this.prevOffsetHeight = list.offsetHeight;\r\n        this.prevScrollTop = list.scrollTop;\r\n    };\r\n\r\n    onClientUpdateMediaEnd = udpate => {\r\n        const list = this.listRef.current;\r\n\r\n        //const prevOffsetHeight = list.offsetHeight;\r\n        //const prevScrollTop = list.scrollTop;\r\n\r\n        this.setState({ playerOpened: false }, () => {\r\n            if (list.scrollTop === this.prevScrollTop) {\r\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\r\n            }\r\n        });\r\n    };\r\n\r\n    onClientUpdateSelection = update => {\r\n        const { chatId } = this.props;\r\n\r\n        console.log(update);\r\n\r\n        switch (update['@type']) {\r\n            case 'clientUpdateClearSelection':\r\n                this.msiHistory.unshift([]);\r\n                this.msiHistory = this.msiHistory.slice(0, 2);\r\n                break;\r\n\r\n            case 'clientUpdateMessageSelected':\r\n                if (chatId != update.chatId) {\r\n                    this.msiHistory[0].length = 0;\r\n                }\r\n\r\n                this.msiHistory[0] = this.msiHistory[0].filter((x, i) => x !== update.messageId);\r\n\r\n                if (update.selected === true) {\r\n                    this.msiHistory[0].push(update.messageId);\r\n                }\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            selectionActive: MessageStore.selectedItems.size > 0,\r\n            scrollBehavior: ScrollBehaviorEnum.KEEP_SCROLL_POSITION\r\n        });\r\n    };\r\n\r\n    onClientUpdateClearHistory = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId === update.chatId) {\r\n            this.setState({ clearHistory: update.inProgress });\r\n        }\r\n    };\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chatId } = this.props;\r\n        const { history } = this.state;\r\n        const { chat_id, message_id } = update;\r\n\r\n        if (chatId !== chat_id) return;\r\n\r\n        if (history.findIndex(x => x.id === message_id) !== -1) {\r\n            const message = MessageStore.get(chat_id, message_id);\r\n            if (!message) return;\r\n\r\n            const store = FileStore.getStore();\r\n            loadMessageContents(store, [message]);\r\n        }\r\n    };\r\n\r\n    onUpdateChatLastMessage = update => {\r\n        const { chatId } = this.props;\r\n        if (chatId !== update.chat_id) return;\r\n    };\r\n\r\n    onUpdateMessageSendSucceeded = update => {\r\n        const { message, old_message_id } = update;\r\n        const { chatId } = this.props;\r\n        if (chatId !== message.chat_id) return;\r\n\r\n        let handleSendSucceeded = false;\r\n        const { content } = message;\r\n        switch (content['@type']) {\r\n            case 'messagePoll': {\r\n                handleSendSucceeded = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!handleSendSucceeded) return;\r\n\r\n        let scrollBehavior = ScrollBehaviorEnum.NONE;\r\n        const list = this.listRef.current;\r\n        // at the end of list\r\n        if (list.scrollTop === list.scrollHeight - list.offsetHeight) {\r\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\r\n        }\r\n        // sent message\r\n        else if (message.is_outgoing) {\r\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\r\n        }\r\n\r\n        console.log('SCROLL MessagesList.onUpdateMessageSendSucceeded scrollBehavior=' + scrollBehavior);\r\n        this.replaceMessage(old_message_id, message, scrollBehavior);\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, [message]);\r\n        MessagesList.viewMessages([message]);\r\n    };\r\n\r\n    onUpdateNewMessage = async update => {\r\n        const { message } = update;\r\n\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n\r\n        if (!chat) return;\r\n\r\n        const sessionId = this.sessionId;\r\n        let result = await TdLibController.send({\r\n            '@type': 'getChatHistory',\r\n            chat_id: chatId,\r\n            from_message_id: message.id,\r\n            offset: -MESSAGE_SLICE_LIMIT - 1,\r\n            limit: MESSAGE_SLICE_LIMIT + 1\r\n        }).finally(() => {});\r\n\r\n        if (sessionId !== this.sessionId) {\r\n            return;\r\n        }\r\n\r\n        if (this.props.chatId !== chatId) {\r\n            return;\r\n        }\r\n\r\n        filterMessages(result, this.state.history);\r\n\r\n        //TODO: replace result with one-way data flow\r\n\r\n        MessageStore.setItems(result.messages);\r\n        result.messages.reverse();\r\n        this.insertAfter(this.filterMessages(result.messages), ScrollBehaviorEnum.SCROLL_TO_BOTTOM);\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, result.messages);\r\n        MessagesList.viewMessages(result.messages);\r\n\r\n        console.log(result.messages, this.state.history);\r\n    };\r\n\r\n    onUpdateDeleteMessages = update => {\r\n        if (this.msiHistory.length > 1) {\r\n            this.deleteHistory(this.msiHistory[1]);\r\n        } else {\r\n            const { chatId } = this.props;\r\n            if (chatId !== update.chat_id) return;\r\n\r\n            if (!update.is_permanent) return;\r\n\r\n            console.log(update);\r\n\r\n            this.deleteHistory(update.message_ids);\r\n        }\r\n    };\r\n\r\n    updateItemsInView = () => {\r\n        if (!this.messages) return;\r\n\r\n        const messages = new Map();\r\n        const items = itemsInView(this.listRef, this.itemsRef);\r\n        for (let i = 0; i < items.length; i++) {\r\n            const message = this.messages[items[i]];\r\n            if (message) {\r\n                const { chatId, messageId } = message.props;\r\n                const key = `${chatId}_${messageId}`;\r\n                messages.set(key, key);\r\n            }\r\n        }\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMessagesInView',\r\n            messages: messages\r\n        });\r\n        return;\r\n\r\n        if (!messages.length) return;\r\n\r\n        /*let ids = messages.map(x => x.id);\r\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\r\n\r\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\r\n\r\n                if (this.previousMessages){\r\n                    let cancelMessages = [];\r\n                    for (let i = 0; i < this.previousMessages.length; i++){\r\n                        if (!messagesMap.has(this.previousMessages[i].id)){\r\n                            cancelMessages.push(this.previousMessages[i]);\r\n                        }\r\n                    }\r\n                    if (cancelMessages.length > 0) {\r\n                        this.cancelLoadMessageContents(cancelMessages);\r\n                    }\r\n                }\r\n                this.previousMessages = messages;*/\r\n\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, messages);\r\n    };\r\n\r\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\r\n        const chat = ChatStore.get(chatId);\r\n        const previousChat = ChatStore.get(previousChatId);\r\n\r\n        this.sessionId = Date.now();\r\n        this.loading = false;\r\n        this.completed = false;\r\n        this.loadMigratedHistory = false;\r\n\r\n        this.suppressHandleScrollOnSelectChat = true;\r\n        if (chat) {\r\n            TdLibController.send({\r\n                '@type': 'openChat',\r\n                chat_id: chat.id\r\n            });\r\n\r\n            const unread = !messageId && chat.unread_count > 0;\r\n            const fromMessageId =\r\n                unread && chat.unread_count > 1 ? chat.last_read_inbox_message_id : messageId ? messageId : 0;\r\n            const offset = (unread && chat.unread_count > 1) || messageId ? -1 - MESSAGE_SLICE_LIMIT : 0;\r\n            const limit =\r\n                (unread && chat.unread_count > 1) || messageId ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\r\n\r\n            const sessionId = this.sessionId;\r\n            const result = await TdLibController.send({\r\n                '@type': 'getChatHistory',\r\n                chat_id: chat.id,\r\n                from_message_id: fromMessageId,\r\n                offset: offset,\r\n                limit: limit\r\n            });\r\n\r\n            if (sessionId !== this.sessionId) {\r\n                return;\r\n            }\r\n\r\n            //TODO: replace result with one-way data flow\r\n\r\n            if (chat.last_message) {\r\n                this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\r\n            } else {\r\n                this.completed = true;\r\n            }\r\n\r\n            MessageStore.setItems(result.messages);\r\n            result.messages.reverse();\r\n\r\n            // calculate separator\r\n            let separatorMessageId = Number.MAX_VALUE;\r\n            if (chat && chat.unread_count > 1) {\r\n                for (let i = result.messages.length - 1; i >= 0; i--) {\r\n                    const { id } = result.messages[i];\r\n                    if (\r\n                        !result.messages[i].is_outgoing &&\r\n                        id > chat.last_read_inbox_message_id &&\r\n                        id < separatorMessageId\r\n                    ) {\r\n                        separatorMessageId = id;\r\n                    } else {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\r\n            console.log('[MessagesList] separator_message_id=' + separatorMessageId);\r\n\r\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\r\n            if (messageId) {\r\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\r\n            } else if (unread && separatorMessageId) {\r\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\r\n            }\r\n\r\n            this.replace(separatorMessageId, result.messages, scrollBehavior, () => {\r\n                this.suppressHandleScrollOnSelectChat = false;\r\n                if (messageId) {\r\n                    highlightMessage(chatId, messageId);\r\n                }\r\n            });\r\n\r\n            // load files\r\n            const store = FileStore.getStore();\r\n            loadMessageContents(store, result.messages);\r\n            loadChatsContent(store, [chatId]);\r\n            loadDraftContent(store, chatId);\r\n\r\n            MessagesList.viewMessages(result.messages);\r\n\r\n            this.loadIncompleteHistory(result);\r\n\r\n            // load full info\r\n            getChatFullInfo(chat.id);\r\n        } else {\r\n            this.replace(\r\n                0,\r\n                [],\r\n                ScrollBehaviorEnum.SCROLL_TO_BOTTOM,\r\n                () => (this.suppressHandleScrollOnSelectChat = false)\r\n            );\r\n        }\r\n\r\n        if (previousChat) {\r\n            TdLibController.send({\r\n                '@type': 'closeChat',\r\n                chat_id: previousChat.id\r\n            });\r\n        }\r\n    }\r\n\r\n    static viewMessages(messages) {\r\n        if (!messages) return;\r\n        if (messages.length === 0) return;\r\n        if (!messages[0].chat_id) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'viewMessages',\r\n            chat_id: messages[0].chat_id,\r\n            message_ids: messages.map(x => x.id)\r\n        });\r\n    }\r\n\r\n    cancelLoadMessageContents(messages) {\r\n        //return;\r\n        for (let i = messages.length - 1; i >= 0; i--) {\r\n            let message = messages[i];\r\n            if (message && message.content) {\r\n                switch (message.content['@type']) {\r\n                    case 'messagePhoto': {\r\n                        let [id, pid] = this.getMessagePhoto(message);\r\n                        if (pid) {\r\n                            let obj = getPhotoSize(message.content.photo.sizes);\r\n                            if (!obj.blob) {\r\n                                FileStore.cancelGetRemoteFile(id, message);\r\n                            }\r\n                        }\r\n                        break;\r\n                    }\r\n                    case 'messageSticker': {\r\n                        let [id, pid] = this.getMessageSticker(message);\r\n                        if (pid) {\r\n                            let obj = message.content.sticker.sticker;\r\n                            if (!obj.blob) {\r\n                                FileStore.cancelGetRemoteFile(id, message);\r\n                            }\r\n                        }\r\n                        break;\r\n                    }\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    loadIncompleteHistory = async result => {\r\n        const MAX_ITERATIONS = 5;\r\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\r\n\r\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\r\n            result = await this.onLoadNext();\r\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\r\n        }\r\n    };\r\n\r\n    onLoadNext = async () => {\r\n        const { chatId } = this.props;\r\n\r\n        if (!chatId) return;\r\n        if (this.loading) return;\r\n\r\n        if (this.loadMigratedHistory) {\r\n            this.onLoadMigratedHistory();\r\n            return;\r\n        }\r\n\r\n        let fromMessageId = 0;\r\n        if (this.state.history && this.state.history.length > 0) {\r\n            fromMessageId = this.state.history[0].id;\r\n        }\r\n\r\n        this.loading = true;\r\n\r\n        const sessionId = this.sessionId;\r\n        let result = await TdLibController.send({\r\n            '@type': 'getChatHistory',\r\n            chat_id: chatId,\r\n            from_message_id: fromMessageId,\r\n            offset: 0,\r\n            limit: MESSAGE_SLICE_LIMIT\r\n        }).finally(() => {\r\n            this.loading = false;\r\n        });\r\n\r\n        if (sessionId !== this.sessionId) {\r\n            return;\r\n        }\r\n\r\n        if (this.props.chatId !== chatId) {\r\n            return;\r\n        }\r\n        //TODO: replace result with one-way data flow\r\n\r\n        MessageStore.setItems(result.messages);\r\n        result.messages.reverse();\r\n        this.insertBefore(this.filterMessages(result.messages), () => {\r\n            if (!result.messages.length) {\r\n                this.onLoadMigratedHistory();\r\n            }\r\n        });\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, result.messages);\r\n        MessagesList.viewMessages(result.messages);\r\n\r\n        return result;\r\n    };\r\n\r\n    filterMessages = messages => {\r\n        return messages.filter(x => x.content['@type'] !== 'messageChatUpgradeTo');\r\n    };\r\n\r\n    onLoadMigratedHistory = async () => {\r\n        const { chatId } = this.props;\r\n\r\n        if (!chatId) return;\r\n        if (this.loading) return;\r\n\r\n        const supergroupId = getSupergroupId(chatId);\r\n        if (!supergroupId) return;\r\n\r\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\r\n        if (!fullInfo) return;\r\n        if (!fullInfo.upgraded_from_basic_group_id) return;\r\n\r\n        this.loadMigratedHistory = true;\r\n\r\n        const basicGroupChat = await TdLibController.send({\r\n            '@type': 'createBasicGroupChat',\r\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\r\n        });\r\n\r\n        if (!basicGroupChat) return;\r\n\r\n        let fromMessageId = 0;\r\n        if (\r\n            this.state.history &&\r\n            this.state.history.length > 0 &&\r\n            this.state.history[0].chat_id === basicGroupChat.id\r\n        ) {\r\n            fromMessageId = this.state.history[0].id;\r\n        }\r\n\r\n        this.loading = true;\r\n\r\n        const sessionId = this.sessionId;\r\n        const result = await TdLibController.send({\r\n            '@type': 'getChatHistory',\r\n            chat_id: basicGroupChat.id,\r\n            from_message_id: fromMessageId,\r\n            offset: 0,\r\n            limit: MESSAGE_SLICE_LIMIT\r\n        }).finally(() => {\r\n            this.loading = false;\r\n        });\r\n\r\n        if (sessionId !== this.sessionId) {\r\n            return;\r\n        }\r\n\r\n        if (this.props.chatId !== chatId) {\r\n            return;\r\n        }\r\n        //TODO: replace result with one-way data flow\r\n\r\n        MessageStore.setItems(result.messages);\r\n        result.messages.reverse();\r\n        this.insertBefore(this.filterMessages(result.messages));\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, result.messages);\r\n        MessagesList.viewMessages(result.messages);\r\n    };\r\n\r\n    onLoadPrevious = async () => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n\r\n        if (!chat) return;\r\n        if (this.loading) return;\r\n        if (this.completed) return;\r\n\r\n        let fromMessageId = 0;\r\n        if (this.state.history && this.state.history.length > 0) {\r\n            fromMessageId = this.state.history[this.state.history.length - 1].id;\r\n        }\r\n\r\n        this.loading = true;\r\n\r\n        const sessionId = this.sessionId;\r\n        let result = await TdLibController.send({\r\n            '@type': 'getChatHistory',\r\n            chat_id: chatId,\r\n            from_message_id: fromMessageId,\r\n            offset: -MESSAGE_SLICE_LIMIT - 1,\r\n            limit: MESSAGE_SLICE_LIMIT + 1\r\n        }).finally(() => {\r\n            this.loading = false;\r\n        });\r\n\r\n        if (sessionId !== this.sessionId) {\r\n            return;\r\n        }\r\n\r\n        if (this.props.chatId !== chatId) {\r\n            return;\r\n        }\r\n\r\n        if (chat.last_message) {\r\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\r\n        } else {\r\n            this.completed = true;\r\n        }\r\n\r\n        filterMessages(result, this.state.history);\r\n\r\n        //TODO: replace result with one-way data flow\r\n\r\n        MessageStore.setItems(result.messages);\r\n        result.messages.reverse();\r\n        console.log('SCROLL MessagesList.onLoadPrevious scrollBehavior=NONE');\r\n        this.insertAfter(this.filterMessages(result.messages), ScrollBehaviorEnum.NONE);\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, result.messages);\r\n        MessagesList.viewMessages(result.messages);\r\n\r\n        return result;\r\n    };\r\n\r\n    replace(separatorMessageId, history, scrollBehavior, callback) {\r\n        this.setState(\r\n            { separatorMessageId: separatorMessageId, history: history, scrollBehavior: scrollBehavior },\r\n            callback\r\n        );\r\n    }\r\n\r\n    insertBefore(history, callback) {\r\n        if (history.length === 0) {\r\n            if (callback) callback();\r\n            return;\r\n        }\r\n\r\n        this.setState(\r\n            { history: history.concat(this.state.history), scrollBehavior: ScrollBehaviorEnum.KEEP_SCROLL_POSITION },\r\n            callback\r\n        );\r\n    }\r\n\r\n    replaceMessage(oldMessageId, message, scrollBehavior, callback) {\r\n        if (!message) return;\r\n\r\n        this.setState(\r\n            {\r\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message]),\r\n                scrollBehavior: scrollBehavior\r\n            },\r\n            callback\r\n        );\r\n    }\r\n\r\n    insertAfter(history, scrollBehavior, callback) {\r\n        if (history.length === 0) return;\r\n\r\n        this.setState({ history: this.state.history.concat(history), scrollBehavior: scrollBehavior }, callback);\r\n    }\r\n\r\n    deleteHistory(message_ids, callback) {\r\n        const { history } = this.state;\r\n        if (history.length === 0) return;\r\n\r\n        let map = new Map(message_ids.map(x => [x, x]));\r\n\r\n        const h = history.filter(x => !map.has(x.id));\r\n\r\n        this.setState({ history: h, scrollBehavior: ScrollBehaviorEnum.SCROLL_TO_BOTTOM }, callback);\r\n    }\r\n\r\n    handleScroll = () => {\r\n        this.updateItemsInView();\r\n        const list = this.listRef.current;\r\n\r\n        const currentOffset = list.scrollTop;\r\n        const direction = currentOffset > this.state.offset ? 'down' : 'up';\r\n\r\n        this.setState({ offset: currentOffset });\r\n\r\n        this.onClientUpdateScroll();\r\n\r\n        if (this.suppressHandleScroll) {\r\n            console.log('SCROLL HANDLESCROLL suppressHandleScroll');\r\n            this.suppressHandleScroll = false;\r\n            return;\r\n        }\r\n\r\n        if (this.suppressHandleScrollOnSelectChat) {\r\n            console.log('SCROLL HANDLESCROLL suppressHandleScrollOnSelectChat');\r\n            return;\r\n        }\r\n\r\n        if (list.scrollTop <= Scroll.LIST_UPDATE_FACTOR_UP * window.innerHeight && direction == 'up') {\r\n            console.log('SCROLL HANDLESCROLL onLoadNext');\r\n            this.onLoadNext();\r\n        } else if (\r\n            list.scrollHeight - list.scrollTop < Scroll.LIST_UPDATE_FACTOR_DOWN * window.innerHeight &&\r\n            direction == 'down'\r\n        ) {\r\n            console.log('SCROLL HANDLESCROLL onLoadPrevious');\r\n            this.onLoadPrevious();\r\n        } else {\r\n            //console.log('SCROLL HANDLESCROLL updateItemsInView');\r\n        }\r\n    };\r\n\r\n    handleWheel = event => {\r\n        const list = this.listRef.current;\r\n\r\n        if (Math.abs(list.scrollTop + list.offsetHeight - list.scrollHeight) <= 1) {\r\n            this.handleScroll();\r\n        }\r\n    };\r\n\r\n    handleScrollToBottomClick = async event => {\r\n        console.log(ApplicationStore.getPrevChatId(), ApplicationStore.getPrevMessageId());\r\n\r\n        if (\r\n            (ApplicationStore.getPrevChatId() === ApplicationStore.getChatId() &&\r\n                ApplicationStore.getPrevMessageId() === ApplicationStore.getMessageId()) ||\r\n            (!ApplicationStore.getPrevChatId() || !ApplicationStore.getPrevMessageId())\r\n        ) {\r\n            const { chatId } = this.props;\r\n\r\n            this.setState({\r\n                scrollBehavior: ScrollBehaviorEnum.SCROLL_TO_BOTTOM,\r\n                isScrollToBottomButtonDisplay: !this.state.isScrollToBottomButtonDisplay\r\n            });\r\n\r\n            ApplicationStore.setPrevChatId(0);\r\n            ApplicationStore.setPrevMessageId(null);\r\n\r\n            ApplicationStore.setChatId(chatId);\r\n        } else {\r\n            ApplicationStore.swapPrevChatId();\r\n        }\r\n    };\r\n\r\n    handleScrollBehavior = snapshot => {\r\n        const { chatId, messageId } = this.props;\r\n        const { scrollBehavior, history } = this.state;\r\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\r\n\r\n        console.log(\r\n            `SCROLL HANDLESCROLLBEHAVIOR \\\\\r\n            scrollBehavior=${scrollBehavior} \\\\\r\n            previousScrollTop=${scrollTop} \\\\\r\n            previousScrollHeight=${scrollHeight} \\\\\r\n            previousOffsetHeight=${offsetHeight} \\\\\r\n            chatId=${chatId}`\r\n        );\r\n        if (scrollBehavior === ScrollBehaviorEnum.NONE) {\r\n        } else if (scrollBehavior === ScrollBehaviorEnum.SCROLL_TO_BOTTOM) {\r\n            this.scrollToBottom();\r\n        } else if (scrollBehavior === ScrollBehaviorEnum.SCROLL_TO_MESSAGE) {\r\n            this.scrollToMessage();\r\n        } else if (scrollBehavior === ScrollBehaviorEnum.SCROLL_TO_UNREAD) {\r\n            const list = this.listRef.current;\r\n            console.log(\r\n                `SCROLL SCROLL_TO_UNREAD before \\\\\r\n                list.scrollTop=${list.scrollTop} \\\\\r\n                list.offsetHeight=${list.offsetHeight} \\\\\r\n                list.scrollHeight=${list.scrollHeight} \\\\\r\n                chatId=${chatId}`\r\n            );\r\n\r\n            let scrolled = false;\r\n            for (let i = 0; i < history.length; i++) {\r\n                let itemComponent = this.itemsMap.get(i);\r\n                let item = ReactDOM.findDOMNode(itemComponent);\r\n                if (item) {\r\n                    // console.log(`SCROLL SCROLL_TO_UNREAD item item.scrollTop=${item.scrollTop} showUnreadSeparator=${itemComponent.props.showUnreadSeparator} item.offsetHeight=${item.offsetHeight} item.scrollHeight=${item.scrollHeight}`);\r\n                    if (itemComponent.props.showUnreadSeparator) {\r\n                        list.scrollTop = item.offsetTop; // + unread messages margin-top\r\n                        scrolled = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (!scrolled) {\r\n                this.scrollToBottom();\r\n            }\r\n\r\n            console.log(\r\n                `SCROLL SCROLL_TO_UNREAD after \\\\\r\n                list.scrollTop=${list.scrollTop} \\\\\r\n                list.offsetHeight=${list.offsetHeight} \\\\\r\n                list.scrollHeight=${list.scrollHeight} \\\\\r\n                chatId=${chatId}`\r\n            );\r\n        } else if (scrollBehavior === ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\r\n            const list = this.listRef.current;\r\n            console.log(\r\n                `SCROLL KEEP_SCROLL_POSITION before \\\\\r\n                list.scrollTop=${list.scrollTop} \\\\\r\n                list.offsetHeight=${list.offsetHeight} \\\\\r\n                list.scrollHeight=${list.scrollHeight} \\\\\r\n                chatId=${chatId}`\r\n            );\r\n            list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\r\n            console.log(\r\n                `SCROLL KEEP_SCROLL_POSITION after \\\\\r\n                list.scrollTop=${list.scrollTop} \\\\\r\n                list.offsetHeight=${list.offsetHeight} \\\\\r\n                list.scrollHeight=${list.scrollHeight} \\\\\r\n                chatId=${chatId}`\r\n            );\r\n        }\r\n    };\r\n\r\n    scrollToMessage = () => {\r\n        const { chatId, messageId } = this.props;\r\n        const { history } = this.state;\r\n\r\n        const list = this.listRef.current;\r\n        console.log(\r\n            `SCROLL SCROLL_TO_MESSAGE message_id=${messageId} before \\\\\r\n            list.scrollTop=${list.scrollTop} \\\\\r\n            list.offsetHeight=${list.offsetHeight} \\\\\r\n            list.scrollHeight=${list.scrollHeight} \\\\\r\n            chatId=${chatId}`\r\n        );\r\n\r\n        let scrolled = false;\r\n        for (let i = 0; i < history.length; i++) {\r\n            let itemComponent = this.itemsMap.get(i);\r\n            let item = ReactDOM.findDOMNode(itemComponent);\r\n            if (item) {\r\n                // console.log(`SCROLL SCROLL_TO_MESSAGE message_id=${messageId} message_id_cur=${itemComponent.props.messageId}`);\r\n                // console.log(`SCROLL SCROLL_TO_MESSAGE message_id=${messageId} item item.scrollTop=${item.scrollTop} showUnreadSeparator=${itemComponent.props.showUnreadSeparator} item.offsetHeight=${item.offsetHeight} item.scrollHeight=${item.scrollHeight}`);\r\n                if (itemComponent.props.messageId === messageId) {\r\n                    list.scrollTop = item.offsetTop - list.offsetHeight / 2.0;\r\n                    scrolled = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!scrolled) {\r\n            this.scrollToBottom();\r\n        }\r\n\r\n        console.log(\r\n            `SCROLL SCROLL_TO_MESSAGE message_id=${messageId} after \\\\\r\n            list.scrollTop=${list.scrollTop} \\\\\r\n            list.offsetHeight=${list.offsetHeight} \\\\\r\n            list.scrollHeight=${list.scrollHeight} \\\\\r\n            chatId=${chatId}`\r\n        );\r\n    };\r\n\r\n    scrollToBottom = () => {\r\n        this.suppressHandleScroll = true;\r\n        const list = this.listRef.current;\r\n        console.log(\r\n            `SCROLL SCROLL_TO_BOTTOM before \\\\\r\n            list.scrollHeight=${list.scrollHeight} \\\\\r\n            list.offsetHeight=${list.offsetHeight} \\\\\r\n            list.scrollTop=${list.scrollTop} \\\\\r\n            chatId=${this.props.chatId}`\r\n        );\r\n\r\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\r\n        if (nextScrollTop !== list.scrollTop) {\r\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\r\n            console.log(\r\n                `SCROLL SCROLL_TO_BOTTOM after \\\\\r\n                list.scrollTop=${list.scrollTop} \\\\\r\n                list.offsetHeight=${list.offsetHeight} \\\\\r\n                list.scrollHeight=${list.scrollHeight} \\\\\r\n                suppressHandleScroll=${this.suppressHandleScroll} \\\\\r\n                chatId=${this.props.chatId}`\r\n            );\r\n        } else {\r\n            console.log(\r\n                `SCROLL SCROLL_TO_BOTTOM after(already bottom) \\\\\r\n                list.scrollTop=${list.scrollTop} \\\\\r\n                list.offsetHeight=${list.offsetHeight} \\\\\r\n                list.scrollHeight=${list.scrollHeight} \\\\\r\n                suppressHandleScroll=${this.suppressHandleScroll} \\\\\r\n                chatId=${this.props.chatId}`\r\n            );\r\n        }\r\n    };\r\n\r\n    scrollToStart = async () => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        this.sessionId = Date.now();\r\n        this.loading = false;\r\n        this.completed = false;\r\n\r\n        const fromMessageId = 0;\r\n        const offset = 0;\r\n        const limit = MESSAGE_SLICE_LIMIT;\r\n\r\n        const sessionId = this.sessionId;\r\n        const result = await TdLibController.send({\r\n            '@type': 'getChatHistory',\r\n            chat_id: chat.id,\r\n            from_message_id: fromMessageId,\r\n            offset: offset,\r\n            limit: limit\r\n        });\r\n\r\n        if (sessionId !== this.sessionId) {\r\n            return;\r\n        }\r\n\r\n        //TODO: replace result with one-way data flow\r\n\r\n        if (this.props.chatId !== chatId) {\r\n            return;\r\n        }\r\n\r\n        if (chat.last_message) {\r\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\r\n        } else {\r\n            this.completed = true;\r\n        }\r\n\r\n        MessageStore.setItems(result.messages);\r\n        result.messages.reverse();\r\n\r\n        // calculate separator\r\n        let separatorMessageId = 0;\r\n        console.log('[MessagesList] separator_message_id=' + separatorMessageId);\r\n\r\n        this.replace(separatorMessageId, result.messages, ScrollBehaviorEnum.SCROLL_TO_BOTTOM);\r\n\r\n        // load files\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, result.messages);\r\n        loadChatsContent(store, [chatId]);\r\n\r\n        MessagesList.viewMessages(result.messages);\r\n\r\n        this.loadIncompleteHistory(result);\r\n    };\r\n\r\n    handleListDragEnter = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        const { chatId } = this.props;\r\n        if (!canSendFiles(chatId)) return;\r\n\r\n        ApplicationStore.setDragging(true);\r\n    };\r\n\r\n    render() {\r\n        const { classes, chatId } = this.props;\r\n        const {\r\n            history,\r\n            separatorMessageId,\r\n            clearHistory,\r\n            selectionActive,\r\n            isScrollToBottomButtonDisplay\r\n        } = this.state;\r\n\r\n        // console.log(`MessagesList.render clearHistory=${clearHistory}`, history);\r\n\r\n        this.itemsMap.clear();\r\n        this.messages = clearHistory\r\n            ? null\r\n            : history.map((x, i) =>\r\n                  isServiceMessage(x) ? (\r\n                      <ServiceMessage\r\n                          key={`chat_id=${x.chat_id} message_id=${x.id}`}\r\n                          ref={el => this.itemsMap.set(i, el)}\r\n                          chatId={x.chat_id}\r\n                          messageId={x.id}\r\n                          showUnreadSeparator={separatorMessageId === x.id}\r\n                      />\r\n                  ) : (\r\n                      <Message\r\n                          key={`chat_id=${x.chat_id} message_id=${x.id}`}\r\n                          ref={el => this.itemsMap.set(i, el)}\r\n                          chatId={x.chat_id}\r\n                          messageId={x.id}\r\n                          showTitle\r\n                          sendingState={x.sending_state}\r\n                          showUnreadSeparator={separatorMessageId === x.id}\r\n                      />\r\n                  )\r\n              );\r\n\r\n        return (\r\n            <div\r\n                className={classNames(classes.background, 'messages-list', {\r\n                    'messages-list-selection-active': selectionActive\r\n                })}\r\n                onDragEnter={this.handleListDragEnter}\r\n                onScroll={this.handleScroll}\r\n                onWheel={this.handleWheel}>\r\n                <div ref={this.listRef} className='messages-list-wrapper'>\r\n                    <div className='messages-list-top' />\r\n                    <div ref={this.itemsRef} className='messages-list-items'>\r\n                        {this.messages}\r\n                    </div>\r\n                </div>\r\n                <div\r\n                    className='messages-list-tobottom'\r\n                    onClick={this.handleScrollToBottomClick}\r\n                    ref={this.transportButton}>\r\n                    <i class='arrow down' />\r\n                </div>\r\n                <PinnedMessage chatId={chatId} />\r\n                <FilesDropTarget />\r\n                <StickersHint />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(MessagesList);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport copy from 'copy-to-clipboard';\r\nimport { compose } from 'recompose';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { withSnackbar } from 'notistack';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\r\nimport OptionStore from '../../Stores/OptionStore';\r\nimport StickerStore from '../../Stores/StickerStore';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\n\r\nconst styles = theme => ({\r\n    close: {\r\n        padding: theme.spacing.unit / 2\r\n    }\r\n});\r\n\r\nclass ShareStickerSetButton extends React.Component {\r\n    state = {\r\n        anchorEl: null\r\n    };\r\n\r\n    handleMenuClick = event => {\r\n        this.handleOpen(event.currentTarget);\r\n    };\r\n\r\n    handleOpen = anchorEl => {\r\n        this.setState({ anchorEl });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleCopyLink = () => {\r\n        this.handleClose();\r\n\r\n        const { t } = this.props;\r\n\r\n        const link = this.getStickersLink(StickerStore.stickerSet);\r\n        if (!link) return;\r\n\r\n        copy(link);\r\n\r\n        const key = `${link}_copy_stickers_link`;\r\n        const message = t('LinkCopied');\r\n        const action = null;\r\n\r\n        this.handleScheduledAction(key, message, action);\r\n    };\r\n\r\n    getStickersLink = stickerSet => {\r\n        if (!stickerSet) return '';\r\n\r\n        const { name } = stickerSet;\r\n        if (!name) return '';\r\n\r\n        const telegramUrlOption = OptionStore.get('t_me_url');\r\n\r\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\r\n    };\r\n\r\n    handleScheduledAction = (key, message, action) => {\r\n        if (!key) return;\r\n\r\n        const { enqueueSnackbar, classes, t } = this.props;\r\n        if (!enqueueSnackbar) return;\r\n\r\n        const TRANSITION_DELAY = 150;\r\n        if (\r\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\r\n        ) {\r\n            enqueueSnackbar(message, {\r\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n                action: [\r\n                    <IconButton\r\n                        key='close'\r\n                        aria-label='Close'\r\n                        color='inherit'\r\n                        className={classes.close}\r\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                ]\r\n            });\r\n        }\r\n    };\r\n\r\n    handleShare = () => {\r\n        this.handleClose();\r\n\r\n        const link = this.getStickersLink(StickerStore.stickerSet);\r\n        if (!link) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerSet',\r\n            stickerSet: null\r\n        });\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateForward',\r\n            info: { link }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { classes, t, className } = this.props;\r\n        const { anchorEl } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <IconButton\r\n                    className={classes.iconButton + ' ' + className}\r\n                    aria-label='Share'\r\n                    open={Boolean(anchorEl)}\r\n                    onClick={this.handleMenuClick}>\r\n                    <MoreIcon />\r\n                </IconButton>\r\n                <Menu\r\n                    id='attach-menu'\r\n                    anchorEl={anchorEl}\r\n                    open={Boolean(anchorEl)}\r\n                    getContentAnchorEl={null}\r\n                    disableAutoFocusItem\r\n                    disableRestoreFocus={true}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    onClose={this.handleClose}>\r\n                    <MenuItem onClick={this.handleCopyLink}>\r\n                        <ListItemIcon>\r\n                            <LinkIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('CopyLink')} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleShare}>\r\n                        <ListItemIcon>\r\n                            <ShareIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('StickersShare')} />\r\n                    </MenuItem>\r\n                </Menu>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nShareStickerSetButton.propTypes = {};\r\n\r\nconst enhance = compose(\r\n    withStyles(styles, { withTheme: true }),\r\n    withTranslation(),\r\n    withSnackbar\r\n);\r\n\r\nexport default enhance(ShareStickerSetButton);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { compose } from 'recompose';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ShareStickerSetButton from './ShareStickerSetButton';\r\nimport Sticker from '../Message/Media/Sticker';\r\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\r\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\r\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport StickerStore from '../../Stores/StickerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './StickerSetDialog.css';\r\n\r\nconst styles = theme => ({\r\n    contentRoot: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        maxHeight: 480,\r\n        padding: '0 12px 24px',\r\n        background: 'transparent'\r\n    },\r\n    paperRoot: {\r\n        width: 344\r\n    },\r\n    dialogTitleRoot: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: 'center'\r\n    },\r\n    dialogRoot: {\r\n        color: theme.palette.text.primary\r\n    },\r\n    shareButtonRoot: {\r\n        margin: '-24px -12px -24px 0'\r\n    },\r\n    typographyRoot: {\r\n        flexGrow: 1,\r\n        flexShrink: 1\r\n    },\r\n    disablePointerEvents: {\r\n        pointerEvents: 'none'\r\n    }\r\n});\r\n\r\nclass StickerSetDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            stickerSet: StickerStore.stickerSet,\r\n            stickerId: 0\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { stickerSet, stickerId } = this.state;\r\n\r\n        return stickerSet !== nextState.stickerSet || stickerId !== nextState.stickerId;\r\n    }\r\n\r\n    componentDidMount() {\r\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\r\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        StickerStore.removeListener('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\r\n        StickerStore.removeListener('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\r\n    }\r\n\r\n    handleUpdateInstalledStickerSets = update => {\r\n        const { stickerSet } = StickerStore;\r\n\r\n        this.setState({ stickerSet });\r\n    };\r\n\r\n    handleClientUpdateStickerSet = update => {\r\n        const { stickerSet } = update;\r\n\r\n        this.setState({ stickerSet });\r\n\r\n        if (stickerSet) {\r\n            const store = FileStore.getStore();\r\n            loadStickerSetContent(store, stickerSet);\r\n        }\r\n    };\r\n\r\n    handleClose = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerSet',\r\n            stickerSet: null\r\n        });\r\n    };\r\n\r\n    handleDone = () => {\r\n        const { stickerSet } = this.state;\r\n        if (!stickerSet) return;\r\n\r\n        const { is_installed } = stickerSet;\r\n\r\n        TdLibController.send({\r\n            '@type': 'changeStickerSet',\r\n            set_id: stickerSet.id,\r\n            is_installed: !is_installed\r\n        });\r\n\r\n        this.handleClose();\r\n    };\r\n\r\n    loadPreviewContent = stickerId => {\r\n        const { stickerSet } = this.state;\r\n        const { stickers } = stickerSet;\r\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\r\n        if (!sticker) return;\r\n\r\n        const store = FileStore.getStore();\r\n        loadStickerContent(store, sticker, null);\r\n\r\n        const preloadStickers = this.getNeighborStickers(stickerId);\r\n        preloadStickers.forEach(x => {\r\n            loadStickerContent(store, x, null);\r\n        });\r\n    };\r\n\r\n    getNeighborStickers = stickerId => {\r\n        const { stickerSet } = this.state;\r\n        if (!stickerSet) return [];\r\n\r\n        const { stickers } = stickerSet;\r\n        if (!stickers) return [];\r\n\r\n        const indexes = [];\r\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\r\n        if (index === -1) return [];\r\n\r\n        const STICKERS_PER_ROW = 4;\r\n        const row = Math.floor(index / STICKERS_PER_ROW);\r\n        const column = index % STICKERS_PER_ROW;\r\n\r\n        const prevRow = row - 1;\r\n        const nextRow = row + 1;\r\n        const prevColumn = column - 1;\r\n        const nextColumn = column + 1;\r\n\r\n        if (prevRow >= 0) {\r\n            if (prevColumn >= 0) {\r\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\r\n            }\r\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\r\n            if (nextColumn < STICKERS_PER_ROW) {\r\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\r\n            }\r\n        }\r\n\r\n        if (prevColumn >= 0) {\r\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\r\n        }\r\n        if (nextColumn < STICKERS_PER_ROW) {\r\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\r\n        }\r\n\r\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\r\n            if (prevColumn >= 0) {\r\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\r\n            }\r\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\r\n            if (nextColumn < STICKERS_PER_ROW) {\r\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\r\n            }\r\n        }\r\n\r\n        return indexes.map(i => stickers[i]);\r\n    };\r\n\r\n    handleMouseOver = event => {\r\n        const stickerId = Number(event.target.dataset.stickerId);\r\n        if (!stickerId) return;\r\n\r\n        if (!this.mouseDown) return;\r\n\r\n        this.setState({ stickerId });\r\n        this.loadPreviewContent(stickerId);\r\n    };\r\n\r\n    handleMouseDown = event => {\r\n        const stickerId = Number(event.target.dataset.stickerId);\r\n        if (!stickerId) return;\r\n\r\n        this.setState({ stickerId });\r\n        this.loadPreviewContent(stickerId);\r\n\r\n        this.mouseDown = true;\r\n        document.addEventListener('mouseup', this.handleMouseUp);\r\n\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        return false;\r\n    };\r\n\r\n    handleMouseUp = () => {\r\n        this.setState({ stickerId: 0 });\r\n        this.mouseDown = false;\r\n        document.removeEventListener('mouseup', this.handleMouseUp);\r\n    };\r\n\r\n    render() {\r\n        const { t, classes } = this.props;\r\n        const { stickerSet, stickerId } = this.state;\r\n        if (!stickerSet) return null;\r\n\r\n        const { title, stickers, is_installed } = stickerSet;\r\n\r\n        const items = stickers.map(x => (\r\n            <div\r\n                className='sticker-set-dialog-item'\r\n                key={x.sticker.id}\r\n                data-sticker-id={x.sticker.id}\r\n                style={{ width: 76, height: 76 }}>\r\n                <Sticker\r\n                    key={x.sticker.id}\r\n                    className='sticker-set-dialog-item-sticker'\r\n                    preview\r\n                    sticker={x}\r\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\r\n                    blur={false}\r\n                />\r\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\r\n            </div>\r\n        ));\r\n\r\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\r\n        const sticker = stickerIndex !== -1 ? stickers[stickerIndex] : null;\r\n\r\n        return (\r\n            <Dialog\r\n                className={classes.dialogRoot}\r\n                open\r\n                transitionDuration={0}\r\n                onClose={this.handleClose}\r\n                aria-labelledby='sticker-set-dialog-title-text'\r\n                classes={{ paper: classes.paperRoot }}>\r\n                <DialogTitle\r\n                    id='sticker-set-dialog-title-text'\r\n                    className={classNames(classes.dialogTitleRoot, {\r\n                        [classes.disablePointerEvents]: Boolean(sticker)\r\n                    })}\r\n                    disableTypography>\r\n                    <Typography variant='h6' className={classes.typographyRoot} noWrap>\r\n                        {title}\r\n                    </Typography>\r\n                    <ShareStickerSetButton className={classes.shareButtonRoot} />\r\n                </DialogTitle>\r\n                <DialogContent\r\n                    classes={{ root: classes.contentRoot }}\r\n                    onMouseOver={this.handleMouseOver}\r\n                    onMouseOut={this.handleMouseOut}\r\n                    onMouseDown={this.handleMouseDown}>\r\n                    {items}\r\n                </DialogContent>\r\n                <DialogActions className={classNames({ [classes.disablePointerEvents]: Boolean(sticker) })}>\r\n                    <Button color='primary' onClick={this.handleClose}>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button color='primary' onClick={this.handleDone}>\r\n                        {is_installed ? t('Remove') : t('Add')}\r\n                    </Button>\r\n                </DialogActions>\r\n                {Boolean(sticker) && <StickerPreview sticker={sticker} />}\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nStickerSetDialog.propTypes = {};\r\n\r\nconst enhance = compose(\r\n    withStyles(styles),\r\n    withTranslation()\r\n);\r\n\r\nexport default enhance(StickerSetDialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport ChatInfoDialog from '../Dialog/ChatInfoDialog';\r\nimport Footer from './Footer';\r\nimport Header from './Header';\r\nimport HeaderPlayer from '../Player/HeaderPlayer';\r\nimport MessagesList from './MessagesList';\r\nimport PinnedMessage from './PinnedMessage';\r\nimport StickerSetDialog from '../Dialog/StickerSetDialog';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\nimport './DialogDetails.css';\r\n\r\nclass DialogDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            chatId: ApplicationStore.getChatId(),\r\n            messageId: ApplicationStore.getMessageId(),\r\n            selectedCount: 0\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if (nextState.chatId !== this.state.chatId) {\r\n            return true;\r\n        }\r\n        if (nextState.messageId !== this.state.messageId) {\r\n            return true;\r\n        }\r\n        if (nextState.selectedCount !== this.state.selectedItems) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\r\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\r\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    onUpdateChatDetailsVisibility = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onClientUpdateChatId = update => {\r\n        this.setState({\r\n            chatId: update.nextChatId,\r\n            messageId: update.nextMessageId\r\n        });\r\n    };\r\n\r\n    scrollToBottom = () => {\r\n        this.messagesList.scrollToBottom();\r\n    };\r\n\r\n    scrollToStart = () => {\r\n        this.messagesList.scrollToStart();\r\n    };\r\n\r\n    scrollToMessage = () => {\r\n        this.messagesList.scrollToMessage();\r\n    };\r\n\r\n    render() {\r\n        /*let groups = [];\r\n        if (this.props.history.length > 0){\r\n            let currentGroup = {\r\n                key: this.props.history[0].id,\r\n                date: this.props.history[0].date,\r\n                senderUserId: this.props.history[0].sender_user_id,\r\n                messages: [this.props.history[0]]\r\n            };\r\n\r\n            for (let i = 1; i < this.props.history.length; i++){\r\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\r\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\r\n                    && i % 20 !== 0){\r\n                    currentGroup.key += '_' + this.props.history[i].id;\r\n                    currentGroup.messages.push(this.props.history[i]);\r\n                }\r\n                else {\r\n                    groups.push(currentGroup);\r\n                    currentGroup = {\r\n                        key: this.props.history[i].id,\r\n                        date: this.props.history[i].date,\r\n                        senderUserId: this.props.history[i].sender_user_id,\r\n                        messages: [this.props.history[i]]\r\n                    };\r\n                }\r\n            }\r\n            groups.push(currentGroup);\r\n        }\r\n\r\n        this.groups = groups.map(x => {\r\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\r\n        });*/\r\n        const { chatId, messageId, selectedCount } = this.state;\r\n        const { isChatDetailsVisible } = ApplicationStore;\r\n\r\n        return (\r\n            <div className={classNames('dialog-details', { 'dialog-details-third-column': isChatDetailsVisible })}>\r\n                <HeaderPlayer />\r\n                <Header chatId={chatId} />\r\n                <MessagesList innerRef={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\r\n                <Footer chatId={chatId} />\r\n                <StickerSetDialog />\r\n                <ChatInfoDialog />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DialogDetails;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\r\nimport UserTileControl from './UserTileControl';\r\nimport ChatTileControl from './ChatTileControl';\r\nimport MessageAuthor from '../Message/MessageAuthor';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './MediaViewerControl.css';\r\n\r\nclass MediaViewerControl extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const userId = getSenderUserId(message);\r\n        const dateHint = getDateHint(message);\r\n\r\n        const tileControl = userId ? (\r\n            <UserTileControl userId={userId} />\r\n        ) : (\r\n            <ChatTileControl chatId={chatId} />\r\n        );\r\n\r\n        return (\r\n            <div className='media-viewer-control'>\r\n                <div className='media-viewer-control-wrapper'>\r\n                    {tileControl}\r\n                    <div className='media-viewer-control-content'>\r\n                        <div className='media-viewer-row'>\r\n                            <MessageAuthor chatId={chatId} userId={userId} />\r\n                        </div>\r\n                        <div className='media-viewer-row message-meta'>\r\n                            <span className='message-date'>{dateHint}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMediaViewerControl.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default MediaViewerControl;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getText } from '../../Utils/Message';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './MediaCaption.css';\r\n\r\nclass MediaCaption extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClick = event => {\r\n        event.stopPropagation();\r\n    };\r\n\r\n    render() {\r\n        const { text } = this.props;\r\n\r\n        return (\r\n            <div className='media-caption' onClick={this.handleClick}>\r\n                <div className='media-caption-text'>{text}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMediaCaption.propTypes = {\r\n    text: PropTypes.array\r\n};\r\n\r\nMediaCaption.defaultProps = {};\r\n\r\nexport default MediaCaption;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport FileProgress from './FileProgress';\r\nimport MediaCaption from './MediaCaption';\r\nimport { getMediaFile, getMediaPreviewFile } from '../../Utils/File';\r\nimport { getText, isAnimationMessage, isLottieMessage, isVideoMessage } from '../../Utils/Message';\r\nimport { isBlurredThumbnail } from '../../Utils/Media';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './MediaViewerContent.css';\r\n\r\nconst Lottie = React.lazy(() => import('./Lottie'));\r\n\r\nclass MediaViewerContent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.videoRef = React.createRef();\r\n        this.lottieRef = React.createRef();\r\n\r\n        const { chatId, messageId, size } = this.props;\r\n\r\n        let [width, height, file] = getMediaFile(chatId, messageId, size);\r\n        file = FileStore.get(file.id) || file;\r\n\r\n        let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\r\n        thumbnail = FileStore.get(thumbnail.id) || thumbnail;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        const text = getText(message);\r\n\r\n        //console.log('mediaViewer file', file);\r\n        //console.log('mediaViewer thumbnail', thumbnail);\r\n\r\n        this.state = {\r\n            speed: 1,\r\n            prevChatId: chatId,\r\n            prevMessageId: messageId,\r\n            isPlaying: false,\r\n            width: width,\r\n            height: height,\r\n            file: file,\r\n            text: text,\r\n            thumbnailWidth: thumbnailWidth,\r\n            thumbnailHeight: thumbnailHeight,\r\n            thumbnail: thumbnail\r\n        };\r\n\r\n        this.updateAnimationData();\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId, messageId, size } = props;\r\n\r\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\r\n            let [width, height, file] = getMediaFile(chatId, messageId, size);\r\n            file = FileStore.get(file.id) || file;\r\n\r\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\r\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\r\n\r\n            const message = MessageStore.get(chatId, messageId);\r\n            const text = getText(message);\r\n\r\n            return {\r\n                speed: 1,\r\n                prevChatId: chatId,\r\n                prevMessageId: messageId,\r\n                isPlaying: false,\r\n                width: width,\r\n                height: height,\r\n                file: file,\r\n                text: text,\r\n                thumbnailWidth: thumbnailWidth,\r\n                thumbnailHeight: thumbnailHeight,\r\n                thumbnail: thumbnail\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\r\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.removeListener('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\r\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.removeListener('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\r\n            this.updateAnimationData();\r\n        }\r\n    }\r\n\r\n    onClientUpdateDocumentBlob = update => {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            this.updateAnimationData();\r\n        }\r\n    };\r\n\r\n    updateAnimationData = async () => {\r\n        const { chatId, messageId, size } = this.props;\r\n\r\n        if (!isLottieMessage(chatId, messageId)) {\r\n            return;\r\n        }\r\n\r\n        const [width, height, file] = getMediaFile(chatId, messageId, size);\r\n        const animationData = await this.getAnimationData(file);\r\n\r\n        this.setState({ animationData });\r\n    };\r\n\r\n    getAnimationData = file => {\r\n        return new Promise(resolve => {\r\n            if (!file) {\r\n                resolve(null);\r\n                return;\r\n            }\r\n\r\n            const blob = FileStore.getBlob(file.id);\r\n            if (!blob) {\r\n                resolve(null);\r\n                return;\r\n            }\r\n\r\n            const fileReader = new FileReader();\r\n            fileReader.onload = event => resolve(JSON.parse(event.target.result));\r\n            fileReader.onerror = () => resolve(null);\r\n            fileReader.onabort = () => resolve(null);\r\n            fileReader.readAsText(blob);\r\n        });\r\n    };\r\n\r\n    onClientUpdateMediaBlob = update => {\r\n        const { chatId, messageId, size } = this.props;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\r\n            this.setState({\r\n                width,\r\n                height,\r\n                file\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaThumbnailBlob = update => {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            const [width, height, file] = getMediaPreviewFile(chatId, messageId);\r\n            this.setState({\r\n                thumbnailWidth: width,\r\n                thumbnailHeight: height,\r\n                thumbnail: file\r\n            });\r\n        }\r\n    };\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chatId, messageId, size } = this.props;\r\n        const { chat_id, message_id } = update;\r\n\r\n        if (chatId === chat_id && messageId === message_id) {\r\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\r\n            const message = MessageStore.get(chatId, messageId);\r\n            const text = getText(message);\r\n            this.setState({\r\n                width: width,\r\n                height: height,\r\n                file: file,\r\n                text: text\r\n            });\r\n        }\r\n    };\r\n\r\n    handleContentClick = event => {\r\n        if (event) event.stopPropagation();\r\n    };\r\n\r\n    changeSpeed = speed => {\r\n        this.setState({\r\n            speed\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId } = this.props;\r\n        const {\r\n            animationData,\r\n            width,\r\n            height,\r\n            thumbnailWidth,\r\n            thumbnailHeight,\r\n            file,\r\n            text,\r\n            thumbnail,\r\n            isPlaying\r\n        } = this.state;\r\n        if (!file) return null;\r\n\r\n        const blob = FileStore.getBlob(file.id) || file.blob;\r\n        const src = FileStore.getBlobUrl(blob) || '';\r\n\r\n        const thumbnailBlob = thumbnail ? FileStore.getBlob(thumbnail.id) || thumbnail.blob : null;\r\n        const thumbnailSrc = FileStore.getBlobUrl(thumbnailBlob);\r\n        const isBlurred = isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight });\r\n\r\n        const isVideo = isVideoMessage(chatId, messageId);\r\n        const isAnimation = isAnimationMessage(chatId, messageId);\r\n        const isLottie = isLottieMessage(chatId, messageId);\r\n        let videoWidth = width;\r\n        let videoHeight = height;\r\n        if (Math.max(videoWidth, videoHeight) > 640) {\r\n            const scale = 640 / Math.max(videoWidth, videoHeight);\r\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\r\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\r\n        }\r\n\r\n        let content = null;\r\n        if (isVideo) {\r\n            content = (\r\n                <div className='media-viewer-content-wrapper'>\r\n                    <video\r\n                        ref={this.videoRef}\r\n                        className='media-viewer-content-video-player'\r\n                        src={src}\r\n                        onClick={this.handleContentClick}\r\n                        controls\r\n                        autoPlay\r\n                        width={videoWidth}\r\n                        height={videoHeight}\r\n                        onPlay={() => {\r\n                            this.setState({ isPlaying: true });\r\n                            TdLibController.clientUpdate({\r\n                                '@type': 'clientUpdateMediaViewerPlay'\r\n                            });\r\n                        }}\r\n                        onCanPlay={() => {\r\n                            const player = this.videoRef.current;\r\n                            if (player) {\r\n                                player.volume = PlayerStore.volume;\r\n                            }\r\n                        }}\r\n                        onPause={() => {\r\n                            TdLibController.clientUpdate({\r\n                                '@type': 'clientUpdateMediaViewerPause'\r\n                            });\r\n                        }}\r\n                        onEnded={() => {\r\n                            TdLibController.clientUpdate({\r\n                                '@type': 'clientUpdateMediaViewerEnded'\r\n                            });\r\n                        }}\r\n                        onVolumeChange={() => {\r\n                            const player = this.videoRef.current;\r\n                            if (player) {\r\n                                TdLibController.clientUpdate({\r\n                                    '@type': 'clientUpdateMediaVolume',\r\n                                    volume: player.volume\r\n                                });\r\n                            }\r\n                        }}\r\n                    />\r\n                    {!isPlaying &&\r\n                        (!src && thumbnailSrc ? (\r\n                            <img\r\n                                className={classNames('media-viewer-content-video-thumbnail', {\r\n                                    'media-blurred': isBlurred\r\n                                })}\r\n                                src={thumbnailSrc}\r\n                                alt=''\r\n                                width={videoWidth}\r\n                                height={videoHeight}\r\n                            />\r\n                        ) : (\r\n                            <div\r\n                                className='media-viewer-content-video-thumbnail'\r\n                                style={{\r\n                                    width: videoWidth,\r\n                                    height: videoHeight\r\n                                }}\r\n                            />\r\n                        ))}\r\n                </div>\r\n            );\r\n        } else if (isAnimation) {\r\n            content = (\r\n                <div className='media-viewer-content-wrapper'>\r\n                    <video\r\n                        className='media-viewer-content-video-player'\r\n                        src={src}\r\n                        onClick={this.handleContentClick}\r\n                        loop\r\n                        autoPlay\r\n                        width={videoWidth}\r\n                        height={videoHeight}\r\n                        onPlay={() => {\r\n                            this.setState({ isPlaying: true });\r\n                        }}\r\n                    />\r\n                    {!isPlaying &&\r\n                        (!src && thumbnailSrc ? (\r\n                            <img\r\n                                className={classNames('media-viewer-content-video-thumbnail', {\r\n                                    'media-blurred': isBlurred\r\n                                })}\r\n                                src={thumbnailSrc}\r\n                                alt=''\r\n                                width={videoWidth}\r\n                                height={videoHeight}\r\n                            />\r\n                        ) : (\r\n                            <div\r\n                                className='media-viewer-content-video-thumbnail'\r\n                                style={{\r\n                                    width: videoWidth,\r\n                                    height: videoHeight\r\n                                }}\r\n                            />\r\n                        ))}\r\n                </div>\r\n            );\r\n        } else if (isLottie) {\r\n            const defaultOptions = {\r\n                loop: true,\r\n                autoplay: true,\r\n                //path: src,\r\n                animationData: animationData,\r\n                rendererSettings: {\r\n                    preserveAspectRatio: 'xMidYMid slice'\r\n                }\r\n            };\r\n            const { speed } = this.state;\r\n\r\n            content = (\r\n                <Lottie\r\n                    ref={this.lottieRef}\r\n                    speed={speed}\r\n                    options={defaultOptions}\r\n                    height='auto'\r\n                    width={400}\r\n                    isStopped={false}\r\n                    isPaused={false}\r\n                />\r\n            );\r\n        } else {\r\n            content = <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />;\r\n        }\r\n\r\n        return (\r\n            <div className='media-viewer-content'>\r\n                <React.Suspense fallback=''>{content}</React.Suspense>\r\n                {/*<img className='media-viewer-content-image-preview' src={previewSrc} alt='' />*/}\r\n                <FileProgress file={file} zIndex={2} />\r\n                {text && text.length > 0 && <MediaCaption text={text} />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMediaViewerContent.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    size: PropTypes.number.isRequired\r\n};\r\n\r\nexport default MediaViewerContent;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './MediaViewerButton.css';\r\n\r\nclass MediaViewerButton extends React.Component {\r\n    handleClick = event => {\r\n        event.stopPropagation();\r\n\r\n        const { disabled, onClick } = this.props;\r\n\r\n        if (disabled) return;\r\n\r\n        onClick(event);\r\n    };\r\n\r\n    render() {\r\n        const { disabled, grow, children } = this.props;\r\n\r\n        const className = classNames(\r\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\r\n            { grow: grow }\r\n        );\r\n\r\n        return (\r\n            <div className={className} onClick={this.handleClick}>\r\n                {children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMediaViewerButton.propTypes = {\r\n    disabled: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default MediaViewerButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './MediaViewerFooterText.css';\r\n\r\nclass MediaViewerFooterText extends React.Component {\r\n    render() {\r\n        const { title, subtitle } = this.props;\r\n\r\n        return (\r\n            <div className=\"media-viewer-footer-text\">\r\n                <div className=\"media-viewer-footer-text-wrapper\">\r\n                    <span>{title}</span>\r\n                    {\r\n                        Boolean(subtitle) && (\r\n                            <span>\r\n                                &nbsp;\r\n                                {subtitle}\r\n                            </span>\r\n                        )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMediaViewerFooterText.propTypes = {\r\n    title: PropTypes.string,\r\n    subtitle: PropTypes.string\r\n};\r\n\r\nexport default MediaViewerFooterText;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport './MediaViewerFooterButton.css';\r\n\r\nconst styles = theme => ({\r\n    checked: {\r\n        color: theme.palette.primary.main\r\n    }\r\n});\r\n\r\nclass MediaViewerFooterButton extends React.Component {\r\n    handleClick = event => {\r\n        event.stopPropagation();\r\n\r\n        const { onClick, disabled } = this.props;\r\n\r\n        if (disabled) return;\r\n\r\n        onClick(event);\r\n    };\r\n\r\n    render() {\r\n        const { checked, children, classes, disabled, title } = this.props;\r\n\r\n        return (\r\n            <div\r\n                className={classNames(disabled ? 'media-viewer-footer-button-disabled' : 'media-viewer-footer-button', {\r\n                    [classes.checked]: checked\r\n                })}\r\n                title={title}\r\n                onClick={this.handleClick}>\r\n                {children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMediaViewerFooterButton.propTypes = {\r\n    title: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n    checked: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default withStyles(styles)(MediaViewerFooterButton);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SaveIcon from '@material-ui/icons/GetApp';\r\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './MediaViewerFooterButton.css';\r\n\r\nconst iconStyle = {\r\n    padding: 20,\r\n    color: 'white'\r\n};\r\n\r\nclass MediaViewerDownloadButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { fileId } = props;\r\n\r\n        this.state = {\r\n            prevPropsFileId: fileId,\r\n            fileId: fileId,\r\n            disabled: MediaViewerDownloadButton.saveDisabled(fileId)\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { fileId } = props;\r\n        const { prevPropsFileId } = state;\r\n\r\n        if (fileId !== prevPropsFileId) {\r\n            return {\r\n                prevPropsFileId: fileId,\r\n                fileId: fileId,\r\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.removeListener('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.removeListener('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\r\n    }\r\n\r\n    onClientUpdateMediaBlob = update => {\r\n        const { fileId } = this.state;\r\n\r\n        if (fileId === update.fileId) {\r\n            this.setState({\r\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\r\n            });\r\n        }\r\n    };\r\n\r\n    static saveDisabled = fileId => {\r\n        return !Boolean(FileStore.getBlob(fileId));\r\n    };\r\n\r\n    handleClick = event => {\r\n        event.stopPropagation();\r\n\r\n        const { onClick } = this.props;\r\n        const { disabled } = this.state;\r\n        if (disabled) return;\r\n\r\n        onClick(event);\r\n    };\r\n\r\n    render() {\r\n        const { title } = this.props;\r\n        const { disabled } = this.state;\r\n\r\n        return (\r\n            <MediaViewerFooterButton disabled={disabled} title={title} onClick={this.handleClick}>\r\n                <SaveIcon style={iconStyle} />\r\n            </MediaViewerFooterButton>\r\n        );\r\n    }\r\n}\r\n\r\nMediaViewerDownloadButton.propTypes = {\r\n    fileId: PropTypes.number.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n    title: PropTypes.string\r\n};\r\n\r\nexport default MediaViewerDownloadButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport ReplyIcon from '@material-ui/icons/Reply';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport InvertColorsIcon from '@material-ui/icons/InvertColors';\r\nimport SlowMotionVideoIcon from '@material-ui/icons/SlowMotionVideo';\r\nimport MediaViewerControl from '../Tile/MediaViewerControl';\r\nimport MediaViewerContent from './MediaViewerContent';\r\nimport MediaViewerButton from './MediaViewerButton';\r\nimport MediaViewerFooterText from './MediaViewerFooterText';\r\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\r\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\r\nimport { getSize } from '../../Utils/Common';\r\nimport {\r\n    cancelPreloadMediaViewerContent,\r\n    getMediaFile,\r\n    loadMediaViewerContent,\r\n    preloadMediaViewerContent,\r\n    saveOrDownload\r\n} from '../../Utils/File';\r\nimport {\r\n    filterMessages,\r\n    isAnimationMessage,\r\n    isLottieMessage,\r\n    isMediaContent,\r\n    isVideoMessage\r\n} from '../../Utils/Message';\r\nimport { between } from '../../Utils/Common';\r\nimport { PHOTO_SIZE, PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './MediaViewer.css';\r\n\r\nconst forwardIconStyle = {\r\n    padding: 20,\r\n    transform: 'scaleX(-1)'\r\n};\r\n\r\nconst iconStyle = {\r\n    padding: 20\r\n};\r\n\r\nconst navigationIconStyle = {\r\n    padding: 35\r\n};\r\n\r\nclass MediaViewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.contentRef = React.createRef();\r\n        this.history = [];\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        this.state = {\r\n            speed: 1,\r\n            background: 'media-viewer-default',\r\n            prevChatId: chatId,\r\n            prevMessageId: messageId,\r\n            currentMessageId: messageId,\r\n            hasNextMedia: false,\r\n            hasPreviousMedia: false,\r\n            deleteConfirmationOpened: false,\r\n            deleteForAll: true\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId } = this.props;\r\n        const {\r\n            background,\r\n            currentMessageId,\r\n            deleteConfirmationOpened,\r\n            firstSliceLoaded,\r\n            hasNextMedia,\r\n            hasPreviousMedia,\r\n            speed,\r\n            totalCount\r\n        } = this.state;\r\n\r\n        if (nextState.background !== background) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.messageId !== messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.currentMessageId !== currentMessageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.hasNextMedia !== hasNextMedia) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.totalCount !== totalCount) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.speed !== speed) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadHistory();\r\n\r\n        document.addEventListener('keydown', this.onKeyDown, false);\r\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('keydown', this.onKeyDown, false);\r\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    onKeyDown = event => {\r\n        if (event.keyCode === 27) {\r\n            const { deleteConfirmationOpened } = this.state;\r\n            if (deleteConfirmationOpened) return;\r\n\r\n            this.handleClose();\r\n        } else if (event.keyCode === 39) {\r\n            this.handleNext();\r\n        } else if (event.keyCode === 37) {\r\n            this.handlePrevious();\r\n        }\r\n    };\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chat_id, message_id, new_content, old_content } = update;\r\n        const { chatId } = this.props;\r\n        const { currentMessageId, totalCount } = this.state;\r\n\r\n        if (chatId !== chat_id) return;\r\n\r\n        const message = MessageStore.get(chat_id, message_id);\r\n        if (!message) return;\r\n\r\n        loadMediaViewerContent([message]);\r\n\r\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\r\n        if (addMessage) {\r\n            if (\r\n                this.history.length >= 2 &&\r\n                (this.firstSliceLoaded ||\r\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\r\n            ) {\r\n                let inserted = false;\r\n                let history = [];\r\n                for (let i = 0; i < this.history.length; i++) {\r\n                    if (this.history[i].id > message_id) {\r\n                        history.push(this.history[i]);\r\n                    } else {\r\n                        if (!inserted) {\r\n                            inserted = true;\r\n                            history.push(message);\r\n                        }\r\n                        history.push(this.history[i]);\r\n                    }\r\n                }\r\n                this.history = history;\r\n            }\r\n\r\n            const index = this.history.findIndex(x => x.id === currentMessageId);\r\n            this.setState({\r\n                hasNextMedia: this.hasNextMedia(index),\r\n                hasPreviousMedia: this.hasPreviousMedia(index),\r\n                totalCount: totalCount + 1\r\n            });\r\n        }\r\n\r\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\r\n        if (removeMessage) {\r\n            let oldHistory = this.history;\r\n            this.history = this.history.filter(x => x.id !== message_id);\r\n\r\n            if (currentMessageId === message_id) {\r\n                const filterMap = new Map();\r\n                filterMap.set(message_id, message_id);\r\n\r\n                this.moveToNextMedia(oldHistory, filterMap);\r\n                this.setState({\r\n                    totalCount: Math.max(totalCount - 1, 0)\r\n                });\r\n            } else {\r\n                const index = this.history.findIndex(x => x.id === currentMessageId);\r\n                this.setState({\r\n                    hasNextMedia: this.hasNextMedia(index),\r\n                    hasPreviousMedia: this.hasPreviousMedia(index),\r\n                    totalCount: Math.max(totalCount - 1, 0)\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    onUpdateDeleteMessages = update => {\r\n        const { chat_id, message_ids, is_permanent } = update;\r\n        const { chatId } = this.props;\r\n        const { currentMessageId, totalCount } = this.state;\r\n\r\n        if (!is_permanent) return;\r\n        if (chatId !== chat_id) return;\r\n\r\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\r\n            accumulator.set(currentId, currentId);\r\n            return accumulator;\r\n        }, new Map());\r\n\r\n        const oldHistory = this.history;\r\n        let deletedCount = oldHistory.length;\r\n\r\n        this.history = this.history.filter(x => !filterMap.has(x.id));\r\n        deletedCount -= this.history.length;\r\n\r\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\r\n\r\n        if (!this.history.length) {\r\n            ApplicationStore.setMediaViewerContent(null);\r\n            return;\r\n        }\r\n\r\n        if (filterMap.has(currentMessageId)) {\r\n            this.moveToNextMedia(oldHistory, filterMap);\r\n        }\r\n    };\r\n\r\n    onUpdateNewMessage = update => {\r\n        const { chatId } = this.props;\r\n        const { currentMessageId, totalCount } = this.state;\r\n\r\n        const { message } = update;\r\n        if (!message) return;\r\n        if (!isMediaContent(message.content)) return;\r\n\r\n        if (message.chat_id !== chatId) return;\r\n        if (!this.firstSliceLoaded) return;\r\n\r\n        this.history = [message].concat(this.history);\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n\r\n        this.setState({\r\n            hasNextMedia: this.hasNextMedia(index),\r\n            hasPreviousMedia: this.hasPreviousMedia(index),\r\n            totalCount: totalCount + 1\r\n        });\r\n    };\r\n\r\n    getFilter = (chatId, messageId) => {\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { content } = message;\r\n        if (!content) return null;\r\n\r\n        switch (content['@type']) {\r\n            case 'messageChatChangePhoto': {\r\n                return {\r\n                    '@type': 'searchMessagesFilterChatPhoto'\r\n                };\r\n            }\r\n            case 'messagePhoto': {\r\n                return {\r\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\r\n                };\r\n            }\r\n            case 'messageVideo': {\r\n                return {\r\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\r\n                };\r\n            }\r\n            default: {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n\r\n    loadHistory = async () => {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        const filter = this.getFilter(chatId, messageId);\r\n\r\n        let result = {\r\n            '@type': 'messages',\r\n            messages: [],\r\n            total_count: 0\r\n        };\r\n        if (filter) {\r\n            result = await TdLibController.send({\r\n                '@type': 'searchChatMessages',\r\n                chat_id: chatId,\r\n                query: '',\r\n                sender_user_id: 0,\r\n                from_message_id: messageId,\r\n                offset: -MEDIA_SLICE_LIMIT,\r\n                limit: 2 * MEDIA_SLICE_LIMIT,\r\n                filter: filter\r\n            });\r\n        }\r\n\r\n        filterMessages(result, this.history);\r\n        MessageStore.setItems(result.messages);\r\n\r\n        this.history = result.messages;\r\n        this.firstSliceLoaded = result.messages.length === 0;\r\n\r\n        const { currentMessageId } = this.state;\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n\r\n        this.setState({\r\n            hasNextMedia: this.hasNextMedia(index),\r\n            hasPreviousMedia: this.hasPreviousMedia(index)\r\n        });\r\n\r\n        if (index === -1) {\r\n            this.history = [MessageStore.get(chatId, currentMessageId)];\r\n            preloadMediaViewerContent(0, this.history);\r\n        } else {\r\n            preloadMediaViewerContent(index, this.history);\r\n\r\n            const filter = this.getFilter(chatId, messageId);\r\n            if (!filter) return;\r\n\r\n            const maxCount = 1500;\r\n            let count = 0;\r\n            while (!this.firstSliceLoaded && count < maxCount) {\r\n                const result = await TdLibController.send({\r\n                    '@type': 'searchChatMessages',\r\n                    chat_id: chatId,\r\n                    query: '',\r\n                    sender_user_id: 0,\r\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\r\n                    offset: -99,\r\n                    limit: 99 + 1,\r\n                    filter: filter\r\n                });\r\n                count += result.messages.length;\r\n\r\n                filterMessages(result, this.history);\r\n                MessageStore.setItems(result.messages);\r\n\r\n                this.history = result.messages.concat(this.history);\r\n                this.firstSliceLoaded = result.messages.length === 0;\r\n\r\n                const { currentMessageId } = this.state;\r\n                const index = this.history.findIndex(x => x.id === currentMessageId);\r\n\r\n                this.setState({\r\n                    hasNextMedia: this.hasNextMedia(index),\r\n                    hasPreviousMedia: this.hasPreviousMedia(index),\r\n                    firstSliceLoaded: this.firstSliceLoaded,\r\n                    totalCount: result.total_count\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    handleClose = () => {\r\n        ApplicationStore.setMediaViewerContent(null);\r\n\r\n        const { currentMessageId } = this.state;\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n        if (index !== -1) {\r\n            cancelPreloadMediaViewerContent(index, this.history);\r\n        }\r\n    };\r\n\r\n    saveAnimation = (animation, message) => {\r\n        if (!message) return;\r\n        const { chat_id, id } = message;\r\n\r\n        if (!animation) return;\r\n\r\n        const { animation: file, file_name } = animation;\r\n        if (!file) return;\r\n\r\n        const { id: fileId } = file;\r\n\r\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateAnimationBlob(chat_id, id, fileId));\r\n    };\r\n\r\n    saveDocument = (document, message) => {\r\n        if (!message) return;\r\n        const { chat_id, id } = message;\r\n\r\n        if (!document) return;\r\n\r\n        const { document: file, file_name } = document;\r\n        if (!file) return;\r\n\r\n        const { id: fileId } = file;\r\n\r\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateDocumentBlob(chat_id, id, fileId));\r\n    };\r\n\r\n    saveVideo = (video, message) => {\r\n        if (!message) return;\r\n        const { chat_id, id } = message;\r\n\r\n        if (!video) return;\r\n\r\n        const { video: file, file_name } = video;\r\n        if (!file) return;\r\n\r\n        const { id: fileId } = file;\r\n\r\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateVideoBlob(chat_id, id, fileId));\r\n    };\r\n\r\n    savePhoto = (photo, message) => {\r\n        if (!message) return;\r\n        const { chat_id, id } = message;\r\n\r\n        if (!photo) return;\r\n\r\n        const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\r\n        if (!photoSize) return;\r\n\r\n        const { photo: file } = photoSize;\r\n        if (!file) return;\r\n\r\n        const { id: fileId } = file;\r\n\r\n        saveOrDownload(file, file.id + '.jpg', message, () => FileStore.updatePhotoBlob(chat_id, id, fileId));\r\n    };\r\n\r\n    handleSave = () => {\r\n        const { chatId } = this.props;\r\n        const { currentMessageId } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, currentMessageId);\r\n        if (!message) return;\r\n\r\n        const { content } = message;\r\n        if (!content) return;\r\n\r\n        switch (content['@type']) {\r\n            case 'messageAnimation': {\r\n                const { animation } = content;\r\n\r\n                this.saveAnimation(animation, message);\r\n                break;\r\n            }\r\n            case 'messageChatChangePhoto': {\r\n                const { photo } = content;\r\n\r\n                this.savePhoto(photo, message);\r\n                break;\r\n            }\r\n            case 'messageDocument': {\r\n                const { document } = content;\r\n\r\n                this.saveDocument(document, message);\r\n                break;\r\n            }\r\n            case 'messagePhoto': {\r\n                const { photo } = content;\r\n\r\n                this.savePhoto(photo, message);\r\n                break;\r\n            }\r\n            case 'messageText': {\r\n                const { web_page } = content;\r\n                if (!web_page) return;\r\n\r\n                const { animation, document, photo, video } = web_page;\r\n\r\n                if (animation) {\r\n                    this.saveAnimation(animation, message);\r\n                    return;\r\n                }\r\n\r\n                if (document) {\r\n                    this.saveDocument(document, message);\r\n                    return;\r\n                }\r\n\r\n                if (photo) {\r\n                    this.savePhoto(photo, message);\r\n                    return;\r\n                }\r\n\r\n                if (video) {\r\n                    this.saveVideo(video, message);\r\n                    return;\r\n                }\r\n                break;\r\n            }\r\n            case 'messageVideo': {\r\n                const { video } = content;\r\n\r\n                this.saveVideo(video, message);\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    handleForward = () => {\r\n        const { chatId } = this.props;\r\n        const { currentMessageId } = this.state;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateForward',\r\n            info: {\r\n                chatId: chatId,\r\n                messageIds: [currentMessageId]\r\n            }\r\n        });\r\n    };\r\n\r\n    handleDelete = () => {\r\n        this.handleDialogOpen();\r\n        return;\r\n\r\n        const { chatId, messageId } = this.props;\r\n        const { currentMessageId } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, currentMessageId);\r\n        if (!message) return;\r\n        if (!message.content) return;\r\n\r\n        const { photo } = message.content;\r\n        if (photo) {\r\n            const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\r\n            if (photoSize) {\r\n                let file = photoSize.photo;\r\n                file = FileStore.get(file.id) || file;\r\n                if (file) {\r\n                    const store = FileStore.getReadWriteStore();\r\n\r\n                    FileStore.deleteLocalFile(store, file);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    hasPreviousMedia = index => {\r\n        if (index === -1) return false;\r\n\r\n        const nextIndex = index + 1;\r\n        return nextIndex < this.history.length;\r\n    };\r\n\r\n    handlePrevious = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { currentMessageId } = this.state;\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n        const nextIndex = index + 1;\r\n\r\n        return this.loadMedia(nextIndex, () => {\r\n            if (nextIndex === this.history.length - 1) {\r\n                this.loadPrevious();\r\n            }\r\n        });\r\n    };\r\n\r\n    loadPrevious = async () => {\r\n        const { chatId, messageId } = this.props;\r\n        const { currentMessageId } = this.state;\r\n\r\n        const filter = this.getFilter(chatId, messageId);\r\n\r\n        let result = {\r\n            '@type': 'messages',\r\n            messages: [],\r\n            total_count: 0\r\n        };\r\n        if (filter) {\r\n            result = await TdLibController.send({\r\n                '@type': 'searchChatMessages',\r\n                chat_id: chatId,\r\n                query: '',\r\n                sender_user_id: 0,\r\n                from_message_id: currentMessageId,\r\n                offset: 0,\r\n                limit: MEDIA_SLICE_LIMIT,\r\n                filter: filter\r\n            });\r\n        }\r\n\r\n        filterMessages(result, this.history);\r\n        MessageStore.setItems(result.messages);\r\n\r\n        this.history = this.history.concat(result.messages);\r\n\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n\r\n        this.setState({\r\n            hasNextMedia: this.hasNextMedia(index),\r\n            hasPreviousMedia: this.hasPreviousMedia(index),\r\n            totalCount: result.total_count\r\n        });\r\n    };\r\n\r\n    hasNextMedia = index => {\r\n        if (index === -1) return false;\r\n\r\n        const nextIndex = index - 1;\r\n        return nextIndex >= 0;\r\n    };\r\n\r\n    handleNext = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { currentMessageId } = this.state;\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n        const nextIndex = index - 1;\r\n\r\n        return this.loadMedia(nextIndex, () => {\r\n            if (nextIndex === 0) {\r\n                this.loadNext();\r\n            }\r\n        });\r\n    };\r\n\r\n    loadNext = async () => {\r\n        const { chatId, messageId } = this.props;\r\n        const { currentMessageId } = this.state;\r\n\r\n        const filter = this.getFilter(chatId, messageId);\r\n\r\n        let result = {\r\n            '@type': 'messages',\r\n            messages: [],\r\n            total_count: 0\r\n        };\r\n        if (filter) {\r\n            result = await TdLibController.send({\r\n                '@type': 'searchChatMessages',\r\n                chat_id: chatId,\r\n                query: '',\r\n                sender_user_id: 0,\r\n                from_message_id: currentMessageId,\r\n                offset: -MEDIA_SLICE_LIMIT,\r\n                limit: MEDIA_SLICE_LIMIT + 1,\r\n                filter: filter\r\n            });\r\n        }\r\n\r\n        filterMessages(result, this.history);\r\n        MessageStore.setItems(result.messages);\r\n\r\n        this.firstSliceLoaded = result.messages.length === 0;\r\n        this.history = result.messages.concat(this.history);\r\n\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n\r\n        this.setState({\r\n            hasNextMedia: this.hasNextMedia(index),\r\n            hasPreviousMedia: this.hasPreviousMedia(index),\r\n            firstSliceLoaded: this.firstSliceLoaded,\r\n            totalCount: result.total_count\r\n        });\r\n    };\r\n\r\n    loadMedia = (index, callback) => {\r\n        if (index < 0) return false;\r\n        if (index >= this.history.length) return false;\r\n\r\n        this.setState(\r\n            {\r\n                currentMessageId: this.history[index].id,\r\n                hasNextMedia: this.hasNextMedia(index),\r\n                hasPreviousMedia: this.hasPreviousMedia(index)\r\n            },\r\n            callback\r\n        );\r\n\r\n        preloadMediaViewerContent(index, this.history);\r\n        return true;\r\n    };\r\n\r\n    moveToNextMedia = (oldHistory, filterMap) => {\r\n        const { currentMessageId } = this.state;\r\n\r\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\r\n        let nextId = 0;\r\n        for (let i = index - 1; i >= 0; i--) {\r\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\r\n                nextId = oldHistory[i].id;\r\n                break;\r\n            }\r\n        }\r\n        if (!nextId) {\r\n            for (let i = index + 1; i < oldHistory.length; i++) {\r\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\r\n                    nextId = oldHistory[i].id;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!nextId) return;\r\n\r\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\r\n\r\n        return this.loadMedia(nextIndex, () => {\r\n            if (nextIndex === 0) {\r\n                this.loadNext();\r\n            } else if (nextIndex === this.history.length - 1) {\r\n                this.loadPrevious();\r\n            }\r\n        });\r\n    };\r\n\r\n    handleDialogOpen = () => {\r\n        this.setState({ deleteConfirmationOpened: true });\r\n    };\r\n\r\n    handleDialogClose = () => {\r\n        this.setState({ deleteConfirmationOpened: false });\r\n    };\r\n\r\n    handleDone = () => {\r\n        this.setState({ deleteConfirmationOpened: false });\r\n\r\n        const { chatId } = this.props;\r\n        const { currentMessageId, deleteForAll } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, currentMessageId);\r\n        if (!message) return;\r\n\r\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\r\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\r\n        if (!canBeDeleted) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'deleteMessages',\r\n            chat_id: chatId,\r\n            message_ids: [currentMessageId],\r\n            revoke: can_be_deleted_for_all_users && deleteForAll\r\n        });\r\n    };\r\n\r\n    handleChangeDeleteForAll = event => {\r\n        this.setState({ deleteForAll: event.target.checked });\r\n    };\r\n\r\n    handleInvertColors = () => {\r\n        const { background } = this.state;\r\n\r\n        let nextBackground = 'media-viewer-default';\r\n        switch (background) {\r\n            case 'media-viewer-default': {\r\n                nextBackground = 'media-viewer-dark';\r\n                break;\r\n            }\r\n            case 'media-viewer-dark': {\r\n                nextBackground = 'media-viewer-light';\r\n                break;\r\n            }\r\n            case 'media-viewer-light': {\r\n                nextBackground = 'media-viewer-default';\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            background: nextBackground\r\n        });\r\n    };\r\n\r\n    handleChangeSpeed = () => {\r\n        if (!this.contentRef) return;\r\n\r\n        const { current } = this.contentRef;\r\n        if (!current) return;\r\n\r\n        const { speed } = this.state;\r\n        const nextSpeed = speed < 1 ? 1 : 0.1;\r\n\r\n        this.setState({ speed: nextSpeed });\r\n\r\n        current.changeSpeed(nextSpeed);\r\n    };\r\n\r\n    canBeForwarded = (chatId, messageId) => {\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return false;\r\n\r\n        const { can_be_forwarded, content } = message;\r\n        if (!content) return false;\r\n\r\n        switch (content['@type']) {\r\n            case 'messageChatChangePhoto': {\r\n                return true;\r\n            }\r\n            default: {\r\n                return can_be_forwarded;\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n        const {\r\n            background,\r\n            currentMessageId,\r\n            deleteConfirmationOpened,\r\n            deleteForAll,\r\n            firstSliceLoaded,\r\n            hasNextMedia,\r\n            hasPreviousMedia,\r\n            speed,\r\n            totalCount\r\n        } = this.state;\r\n\r\n        let index = -1;\r\n        if (totalCount && firstSliceLoaded) {\r\n            index = this.history.findIndex(x => x.id === currentMessageId);\r\n        }\r\n        const maxCount = Math.max(this.history.length, totalCount);\r\n\r\n        const message = MessageStore.get(chatId, currentMessageId);\r\n        const { can_be_deleted_for_all_users, can_be_deleted_only_for_self } = message;\r\n\r\n        const canBeDeleted = can_be_deleted_for_all_users || can_be_deleted_only_for_self;\r\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\r\n\r\n        let deleteConfirmationContent = '';\r\n        if (isVideoMessage(chatId, currentMessageId)) {\r\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\r\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\r\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\r\n        } else {\r\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\r\n        }\r\n        const deleteConfirmation = deleteConfirmationOpened ? (\r\n            <Dialog\r\n                transitionDuration={0}\r\n                open={deleteConfirmationOpened}\r\n                onClose={this.handleDialogClose}\r\n                aria-labelledby='form-dialog-title'>\r\n                <DialogTitle id='form-dialog-title'>{t('AppName')}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\r\n                    {can_be_deleted_for_all_users && (\r\n                        <FormControlLabel\r\n                            label={t('DeleteForAll')}\r\n                            control={\r\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\r\n                            }\r\n                            checked={deleteForAll}\r\n                        />\r\n                    )}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.handleDialogClose} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={this.handleDone} color='primary'>\r\n                        {t('Ok')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        ) : null;\r\n\r\n        const [width, height, file] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\r\n\r\n        const fileId = file ? file.id : 0;\r\n        let title = t('AttachPhoto');\r\n        if (isVideoMessage(chatId, currentMessageId)) {\r\n            title = t('AttachVideo');\r\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\r\n            title = t('AttachGif');\r\n        } else if (isLottieMessage(chatId, currentMessageId)) {\r\n            title = '';\r\n        }\r\n\r\n        return (\r\n            <div className={classNames('media-viewer', background)}>\r\n                {deleteConfirmation}\r\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\r\n                    <div className='media-viewer-left-column'>\r\n                        <div className='media-viewer-button-placeholder' />\r\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\r\n                            <NavigateBeforeIcon fontSize='large' style={navigationIconStyle} />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n\r\n                    <div className='media-viewer-content-column'>\r\n                        <MediaViewerContent\r\n                            ref={this.contentRef}\r\n                            chatId={chatId}\r\n                            messageId={currentMessageId}\r\n                            size={PHOTO_BIG_SIZE}\r\n                            onClick={this.handlePrevious}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className='media-viewer-right-column'>\r\n                        <MediaViewerButton onClick={this.handleClose}>\r\n                            <CloseIcon fontSize='large' style={navigationIconStyle} />\r\n                        </MediaViewerButton>\r\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\r\n                            <NavigateNextIcon fontSize='large' style={navigationIconStyle} />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n                </div>\r\n                <div className='media-viewer-footer'>\r\n                    <MediaViewerControl chatId={chatId} messageId={currentMessageId} />\r\n                    <MediaViewerFooterText\r\n                        title={title}\r\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\r\n                    />\r\n                    {isLottieMessage(chatId, currentMessageId) && (\r\n                        <>\r\n                            <MediaViewerFooterButton\r\n                                title={t('ChangeSpeed')}\r\n                                checked={speed < 1}\r\n                                onClick={this.handleChangeSpeed}>\r\n                                <SlowMotionVideoIcon style={iconStyle} />\r\n                            </MediaViewerFooterButton>\r\n                            <MediaViewerFooterButton\r\n                                title={t('InvertBackgroundColor')}\r\n                                onClick={this.handleInvertColors}>\r\n                                <InvertColorsIcon style={iconStyle} />\r\n                            </MediaViewerFooterButton>\r\n                        </>\r\n                    )}\r\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} onClick={this.handleSave} />\r\n                    <MediaViewerFooterButton\r\n                        title={t('Forward')}\r\n                        disabled={!canBeForwarded}\r\n                        onClick={this.handleForward}>\r\n                        <ReplyIcon style={forwardIconStyle} />\r\n                    </MediaViewerFooterButton>\r\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\r\n                        <DeleteIcon style={iconStyle} />\r\n                    </MediaViewerFooterButton>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMediaViewer.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default withTranslation()(MediaViewer);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FileProgress from './FileProgress';\r\nimport { getChatUserId } from '../../Utils/Chat';\r\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './ProfileMediaViewer.css';\r\n\r\nclass ProfileMediaViewerContent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId, photo } = this.props;\r\n\r\n        let { big: file } = photo;\r\n        file = FileStore.get(file.id) || file;\r\n\r\n        this.state = {\r\n            prevChatId: chatId,\r\n            prevPhoto: photo,\r\n            width: PROFILE_PHOTO_BIG_SIZE,\r\n            height: PROFILE_PHOTO_BIG_SIZE,\r\n            file: file\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId, photo } = props;\r\n\r\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\r\n            return {\r\n                prevChatId: chatId,\r\n                prevPhoto: photo,\r\n                width: PROFILE_PHOTO_BIG_SIZE,\r\n                height: PROFILE_PHOTO_BIG_SIZE,\r\n                file: photo.big\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\r\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateChatBlob);\r\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateUserBlob);\r\n    }\r\n\r\n    onClientUpdateChatBlob = update => {\r\n        const { chatId, photo } = this.props;\r\n\r\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\r\n            const file = FileStore.get(update.fileId) || this.state.file;\r\n            this.setState({\r\n                file: file\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateUserBlob = update => {\r\n        const { chatId, photo } = this.props;\r\n        const userId = getChatUserId(chatId);\r\n\r\n        if (userId === update.userId && photo.big.id === update.fileId) {\r\n            const file = FileStore.get(update.fileId) || this.state.file;\r\n            this.setState({\r\n                file: file\r\n            });\r\n        }\r\n    };\r\n\r\n    handleContentClick = event => {\r\n        if (event) event.stopPropagation();\r\n\r\n        this.props.onClick(event);\r\n    };\r\n\r\n    render() {\r\n        const { width, height, file } = this.state;\r\n        if (!file) return null;\r\n\r\n        const blob = FileStore.getBlob(file.id) || file.blob;\r\n        const src = FileStore.getBlobUrl(blob);\r\n\r\n        return (\r\n            <div className='media-viewer-content'>\r\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\r\n                {/*<img className='media-viewer-content-image-preview' src={previewSrc} alt='' />*/}\r\n                <FileProgress file={file} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nProfileMediaViewerContent.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    photo: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ProfileMediaViewerContent;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ChatTileControl from './ChatTileControl';\r\nimport MessageAuthor from '../Message/MessageAuthor';\r\nimport './MediaViewerControl.css';\r\n\r\nclass ProfileMediaViewerControl extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const { chatId, date } = this.props;\r\n\r\n        return (\r\n            <div className='media-viewer-control'>\r\n                <div className='media-viewer-control-wrapper'>\r\n                    <ChatTileControl chatId={chatId} showSavedMessages={false} />\r\n                    <div className='media-viewer-control-content'>\r\n                        <div className='media-viewer-row'>\r\n                            <MessageAuthor chatId={chatId} />\r\n                        </div>\r\n                        {date && (\r\n                            <div className='media-viewer-row message-meta'>\r\n                                <span className='message-date'>{date}</span>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nProfileMediaViewerControl.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    date: PropTypes.string\r\n};\r\n\r\nexport default ProfileMediaViewerControl;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport ReplyIcon from '@material-ui/icons/Reply';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\r\nimport MediaViewerButton from './MediaViewerButton';\r\nimport MediaViewerFooterText from './MediaViewerFooterText';\r\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\r\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\r\nimport ProfileMediaViewerControl from '../Tile/ProfileMediaViewerControl';\r\nimport { getPhotoFromChat, getChatUserId, isPrivateChat } from '../../Utils/Chat';\r\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\r\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './ProfileMediaViewer.css';\r\n\r\nconst forwardIconStyle = {\r\n    padding: 20,\r\n    color: 'white',\r\n    transform: 'scaleX(-1)'\r\n};\r\n\r\nconst deleteIconStyle = {\r\n    padding: 20,\r\n    color: 'white'\r\n};\r\n\r\nconst navigationIconStyle = {\r\n    padding: 35,\r\n    color: 'white'\r\n};\r\n\r\nclass ProfileMediaViewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.history = [];\r\n\r\n        const { chatId, fileId } = this.props;\r\n\r\n        this.state = {\r\n            prevChatId: chatId,\r\n            prevFileId: fileId,\r\n            currentIndex: 0,\r\n            hasNextMedia: false,\r\n            hasPreviousMedia: false,\r\n            deleteConfirmationOpened: false\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId } = this.props;\r\n        const {\r\n            currentFileId,\r\n            hasPreviousMedia,\r\n            hasNextMedia,\r\n            firstSliceLoaded,\r\n            totalCount,\r\n            deleteConfirmationOpened\r\n        } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.messageId !== messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.currentFileId !== currentFileId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.hasNextMedia !== hasNextMedia) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.totalCount !== totalCount) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { chatId } = this.props;\r\n        const photo = getPhotoFromChat(chatId);\r\n        loadProfileMediaViewerContent(chatId, [photo]);\r\n\r\n        this.loadHistory();\r\n\r\n        document.addEventListener('keydown', this.onKeyDown, false);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('keydown', this.onKeyDown, false);\r\n    }\r\n\r\n    onKeyDown = event => {\r\n        if (event.keyCode === 27) {\r\n            const { deleteConfirmationOpened } = this.state;\r\n            if (deleteConfirmationOpened) return;\r\n\r\n            this.handleClose();\r\n        } else if (event.keyCode === 39) {\r\n            this.handlePrevious();\r\n        } else if (event.keyCode === 37) {\r\n            this.handleNext();\r\n        }\r\n    };\r\n\r\n    loadHistory = async () => {\r\n        const { chatId } = this.props;\r\n\r\n        if (!isPrivateChat(chatId)) return;\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'getUserProfilePhotos',\r\n            user_id: getChatUserId(chatId),\r\n            offset: 0,\r\n            limit: 100\r\n        });\r\n\r\n        this.history = result.photos;\r\n        this.firstSliceLoaded = result.photos.length === 0;\r\n\r\n        const index = 0;\r\n\r\n        this.setState({\r\n            currentIndex: index,\r\n            hasNextMedia: this.hasNextMedia(index),\r\n            hasPreviousMedia: this.hasPreviousMedia(index),\r\n            totalCount: result.total_count\r\n        });\r\n\r\n        preloadProfileMediaViewerContent(chatId, index, this.history);\r\n    };\r\n\r\n    handleClose = () => {\r\n        ApplicationStore.setProfileMediaViewerContent(null);\r\n    };\r\n\r\n    handleSave = () => {\r\n        const { chatId } = this.props;\r\n        const { currentIndex, totalCount } = this.state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        let index = -1;\r\n        if (totalCount) {\r\n            index = currentIndex;\r\n        }\r\n\r\n        const photo =\r\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\r\n        if (!photo) return;\r\n        if (!photo.big) return;\r\n\r\n        const file = FileStore.get(photo.big.id) || photo.big;\r\n        if (!file) return;\r\n\r\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\r\n    };\r\n\r\n    handleForward = () => {\r\n        const { chatId } = this.props;\r\n        if (!isPrivateChat(chatId)) return;\r\n\r\n        const { currentIndex, totalCount } = this.state;\r\n\r\n        let index = -1;\r\n        if (totalCount) {\r\n            index = currentIndex;\r\n        }\r\n\r\n        if (index < 0 || index >= this.history.length) return;\r\n        const photo = getProfilePhoto(this.history[index]);\r\n        if (!photo) return;\r\n\r\n        let { big: file } = photo;\r\n        file = FileStore.get(file.id) || file;\r\n        if (!file) return;\r\n\r\n        const photoSize = {\r\n            '@type': 'photoSize',\r\n            type: 'c',\r\n            photo: file,\r\n            width: 640,\r\n            height: 640\r\n        };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateForward',\r\n            info: { photoSize }\r\n        });\r\n    };\r\n\r\n    handleDelete = () => {\r\n        const { chatId, messageId } = this.props;\r\n        const { currentIndex, totalCount } = this.state;\r\n\r\n        let index = -1;\r\n        if (totalCount) {\r\n            index = currentIndex;\r\n        }\r\n\r\n        const photo =\r\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\r\n\r\n        if (photo) {\r\n            let file = photo.big;\r\n            file = FileStore.get(file.id) || file;\r\n            if (file) {\r\n                const store = FileStore.getReadWriteStore();\r\n\r\n                FileStore.deleteLocalFile(store, file);\r\n            }\r\n        }\r\n    };\r\n\r\n    hasPreviousMedia = index => {\r\n        if (index === -1) return false;\r\n\r\n        const nextIndex = index + 1;\r\n        return nextIndex < this.history.length;\r\n    };\r\n\r\n    handlePrevious = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { currentIndex } = this.state;\r\n        const nextIndex = currentIndex + 1;\r\n\r\n        return this.loadMedia(nextIndex, () => {\r\n            if (nextIndex === this.history.length - 1) {\r\n                this.loadPrevious();\r\n            }\r\n        });\r\n    };\r\n\r\n    loadPrevious = async () => {\r\n        return;\r\n    };\r\n\r\n    hasNextMedia = index => {\r\n        if (index === -1) return false;\r\n\r\n        const nextIndex = index - 1;\r\n        return nextIndex >= 0;\r\n    };\r\n\r\n    handleNext = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { currentIndex } = this.state;\r\n        const nextIndex = currentIndex - 1;\r\n\r\n        return this.loadMedia(nextIndex, () => {\r\n            if (nextIndex === 0) {\r\n                this.loadNext();\r\n            }\r\n        });\r\n    };\r\n\r\n    loadNext = async () => {\r\n        return;\r\n    };\r\n\r\n    loadMedia = (index, callback) => {\r\n        if (index < 0) return false;\r\n        if (index >= this.history.length) return false;\r\n\r\n        this.setState(\r\n            {\r\n                currentIndex: index,\r\n                hasNextMedia: this.hasNextMedia(index),\r\n                hasPreviousMedia: this.hasPreviousMedia(index)\r\n            },\r\n            callback\r\n        );\r\n\r\n        const { chatId } = this.props;\r\n\r\n        preloadProfileMediaViewerContent(chatId, index, this.history);\r\n        return true;\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n        const {\r\n            currentIndex,\r\n            hasNextMedia,\r\n            hasPreviousMedia,\r\n            firstSliceLoaded,\r\n            totalCount,\r\n            deleteConfirmationOpened,\r\n            deleteForAll\r\n        } = this.state;\r\n\r\n        let index = -1;\r\n        if (totalCount) {\r\n            index = currentIndex;\r\n        }\r\n\r\n        const deleteConfirmation = null;\r\n        const inHistory = index >= 0 && index < this.history.length;\r\n        const photo = inHistory ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\r\n        const userProfilePhoto = inHistory ? this.history[index] : null;\r\n        const { big: file } = photo;\r\n\r\n        return (\r\n            <div className='media-viewer'>\r\n                {deleteConfirmation}\r\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\r\n                    <div className='media-viewer-left-column'>\r\n                        <div className='media-viewer-button-placeholder' />\r\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\r\n                            <NavigateBeforeIcon fontSize='large' style={navigationIconStyle} />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n\r\n                    <div className='media-viewer-content-column'>\r\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClick={this.handlePrevious} />\r\n                    </div>\r\n\r\n                    <div className='media-viewer-right-column'>\r\n                        <MediaViewerButton onClick={this.handleClose}>\r\n                            <CloseIcon fontSize='large' style={navigationIconStyle} />\r\n                        </MediaViewerButton>\r\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\r\n                            <NavigateNextIcon fontSize='large' style={navigationIconStyle} />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n                </div>\r\n                <div className='media-viewer-footer'>\r\n                    <ProfileMediaViewerControl chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\r\n                    <MediaViewerFooterText\r\n                        title={t('AttachPhoto')}\r\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\r\n                    />\r\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\r\n                    {isPrivateChat(chatId) && (\r\n                        <MediaViewerFooterButton\r\n                            title={t('Forward')}\r\n                            disabled={!inHistory}\r\n                            onClick={this.handleForward}>\r\n                            <ReplyIcon style={forwardIconStyle} />\r\n                        </MediaViewerFooterButton>\r\n                    )}\r\n                    <MediaViewerFooterButton title={t('Delete')} disabled onClick={this.handleDelete}>\r\n                        <DeleteIcon style={deleteIconStyle} />\r\n                    </MediaViewerFooterButton>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nProfileMediaViewer.propTypes = {\r\n    chatId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default withTranslation()(ProfileMediaViewer);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport { compose } from 'recompose';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport withLanguage from '../Language';\r\nimport withTheme from '../Theme';\r\nimport withSnackbarNotifications from '../Notifications';\r\nimport ForwardDialog from './Dialog/ForwardDialog';\r\nimport ChatInfo from './ColumnRight/ChatInfo';\r\nimport Dialogs from './ColumnLeft/Dialogs';\r\nimport DialogDetails from './ColumnMiddle/DialogDetails';\r\nimport Footer from './Footer';\r\nimport MediaViewer from './Viewer/MediaViewer';\r\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\r\nimport { highlightMessage } from '../Actions/Client';\r\nimport ChatStore from '../Stores/ChatStore';\r\nimport UserStore from '../Stores/UserStore';\r\nimport ApplicationStore from '../Stores/ApplicationStore';\r\nimport TdLibController from '../Controllers/TdLibController';\r\nimport '../TelegramApp.css';\r\n\r\nconst styles = theme => ({\r\n    page: {\r\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\r\n        color: theme.palette.text.primary\r\n    }\r\n});\r\n\r\nclass MainPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.dialogDetailsRef = React.createRef();\r\n\r\n        this.state = {\r\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\r\n            mediaViewerContent: ApplicationStore.mediaViewerContent,\r\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent,\r\n            forwardInfo: null\r\n        };\r\n\r\n        /*this.store = localForage.createInstance({\r\n                    name: 'tdlib'\r\n                });*/\r\n\r\n        //this.initDB();\r\n    }\r\n\r\n    componentDidMount() {\r\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\r\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\r\n\r\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\r\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\r\n        ApplicationStore.on('clientUpdateForward', this.onClientUpdateForward);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        UserStore.removeListener('clientUpdateOpenUser', this.onClientUpdateOpenUser);\r\n        ChatStore.removeListener('clientUpdateOpenChat', this.onClientUpdateOpenChat);\r\n\r\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\r\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n        ApplicationStore.removeListener(\r\n            'clientUpdateProfileMediaViewerContent',\r\n            this.onClientUpdateProfileMediaViewerContent\r\n        );\r\n        ApplicationStore.removeListener('clientUpdateForward', this.onClientUpdateForward);\r\n    }\r\n\r\n    onClientUpdateOpenChat = update => {\r\n        const { chatId, messageId, popup } = update;\r\n\r\n        this.handleSelectChat(chatId, messageId, popup);\r\n    };\r\n\r\n    onClientUpdateOpenUser = update => {\r\n        const { userId, popup } = update;\r\n\r\n        this.handleSelectUser(userId, popup);\r\n    };\r\n\r\n    onClientUpdateChatDetailsVisibility = update => {\r\n        this.setState({\r\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\r\n        });\r\n    };\r\n\r\n    onClientUpdateMediaViewerContent = update => {\r\n        this.setState({ mediaViewerContent: ApplicationStore.mediaViewerContent });\r\n    };\r\n\r\n    onClientUpdateProfileMediaViewerContent = update => {\r\n        this.setState({\r\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent\r\n        });\r\n    };\r\n\r\n    onClientUpdateForward = update => {\r\n        const { info } = update;\r\n\r\n        this.setState({ forwardInfo: info });\r\n    };\r\n\r\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\r\n        const currentChatId = ApplicationStore.getChatId();\r\n        const currentDialogChatId = ApplicationStore.dialogChatId;\r\n        const currentMessageId = ApplicationStore.getMessageId();\r\n\r\n        if (popup) {\r\n            if (currentDialogChatId !== chatId) {\r\n                TdLibController.clientUpdate({\r\n                    '@type': 'clientUpdateDialogChatId',\r\n                    chatId\r\n                });\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\r\n            this.dialogDetailsRef.current.scrollToMessage();\r\n            if (messageId) {\r\n                highlightMessage(chatId, messageId);\r\n            }\r\n        } else if (currentChatId === chatId && !messageId) {\r\n            const chat = ChatStore.get(chatId);\r\n            if (chat && chat.unread_count > 0) {\r\n                this.dialogDetailsRef.current.scrollToStart();\r\n            } else {\r\n                this.dialogDetailsRef.current.scrollToBottom();\r\n            }\r\n        } else {\r\n            TdLibController.setChatId(chatId, messageId);\r\n        }\r\n    };\r\n\r\n    handleSelectUser = async (userId, popup) => {\r\n        if (!userId) return;\r\n\r\n        const chat = await TdLibController.send({\r\n            '@type': 'createPrivateChat',\r\n            user_id: userId,\r\n            force: true\r\n        });\r\n\r\n        this.handleSelectChat(chat.id, null, popup);\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, forwardInfo } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <div className={classNames(classes.page, 'page', { 'page-third-column': isChatDetailsVisible })}>\r\n                    <Dialogs onSelectChat={this.handleSelectChat} />\r\n                    <DialogDetails ref={this.dialogDetailsRef} />\r\n                    {isChatDetailsVisible && <ChatInfo />}\r\n                </div>\r\n                <Footer />\r\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\r\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\r\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nMainPage.propTypes = {};\r\n\r\nconst enhance = compose(\r\n    withLanguage,\r\n    withTheme,\r\n    withStyles(styles),\r\n    withSnackbarNotifications\r\n);\r\n\r\nexport default enhance(MainPage);\r\n"],"sourceRoot":""}